// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: calvinfs_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "calvinfs_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CalvinFSConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CalvinFSConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* CalvinFSConfig_ReplicaParticipant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CalvinFSConfig_ReplicaParticipant_reflection_ = NULL;
const ::google::protobuf::Descriptor* CalvinFSConfig_MapEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CalvinFSConfig_MapEntry_reflection_ = NULL;
const ::google::protobuf::Descriptor* MapProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MapProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* MapProto_Entry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MapProto_Entry_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_calvinfs_5fconfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_calvinfs_5fconfig_2eproto() {
  protobuf_AddDesc_calvinfs_5fconfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "calvinfs_config.proto");
  GOOGLE_CHECK(file != NULL);
  CalvinFSConfig_descriptor_ = file->message_type(0);
  static const int CalvinFSConfig_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, block_replication_factor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, metadata_replication_factor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, blucket_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, metadata_shard_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, replicas_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, bluckets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, metadata_shards_),
  };
  CalvinFSConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CalvinFSConfig_descriptor_,
      CalvinFSConfig::default_instance_,
      CalvinFSConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(CalvinFSConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig, _internal_metadata_),
      -1);
  CalvinFSConfig_ReplicaParticipant_descriptor_ = CalvinFSConfig_descriptor_->nested_type(0);
  static const int CalvinFSConfig_ReplicaParticipant_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_ReplicaParticipant, machine_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_ReplicaParticipant, replica_),
  };
  CalvinFSConfig_ReplicaParticipant_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CalvinFSConfig_ReplicaParticipant_descriptor_,
      CalvinFSConfig_ReplicaParticipant::default_instance_,
      CalvinFSConfig_ReplicaParticipant_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_ReplicaParticipant, _has_bits_[0]),
      -1,
      -1,
      sizeof(CalvinFSConfig_ReplicaParticipant),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_ReplicaParticipant, _internal_metadata_),
      -1);
  CalvinFSConfig_MapEntry_descriptor_ = CalvinFSConfig_descriptor_->nested_type(1);
  static const int CalvinFSConfig_MapEntry_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_MapEntry, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_MapEntry, replica_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_MapEntry, machine_),
  };
  CalvinFSConfig_MapEntry_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CalvinFSConfig_MapEntry_descriptor_,
      CalvinFSConfig_MapEntry::default_instance_,
      CalvinFSConfig_MapEntry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_MapEntry, _has_bits_[0]),
      -1,
      -1,
      sizeof(CalvinFSConfig_MapEntry),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CalvinFSConfig_MapEntry, _internal_metadata_),
      -1);
  MapProto_descriptor_ = file->message_type(1);
  static const int MapProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapProto, entries_),
  };
  MapProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MapProto_descriptor_,
      MapProto::default_instance_,
      MapProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(MapProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapProto, _internal_metadata_),
      -1);
  MapProto_Entry_descriptor_ = MapProto_descriptor_->nested_type(0);
  static const int MapProto_Entry_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapProto_Entry, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapProto_Entry, value_),
  };
  MapProto_Entry_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MapProto_Entry_descriptor_,
      MapProto_Entry::default_instance_,
      MapProto_Entry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapProto_Entry, _has_bits_[0]),
      -1,
      -1,
      sizeof(MapProto_Entry),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapProto_Entry, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_calvinfs_5fconfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CalvinFSConfig_descriptor_, &CalvinFSConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CalvinFSConfig_ReplicaParticipant_descriptor_, &CalvinFSConfig_ReplicaParticipant::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CalvinFSConfig_MapEntry_descriptor_, &CalvinFSConfig_MapEntry::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MapProto_descriptor_, &MapProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MapProto_Entry_descriptor_, &MapProto_Entry::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_calvinfs_5fconfig_2eproto() {
  delete CalvinFSConfig::default_instance_;
  delete CalvinFSConfig_reflection_;
  delete CalvinFSConfig_ReplicaParticipant::default_instance_;
  delete CalvinFSConfig_ReplicaParticipant_reflection_;
  delete CalvinFSConfig_MapEntry::default_instance_;
  delete CalvinFSConfig_MapEntry_reflection_;
  delete MapProto::default_instance_;
  delete MapProto_reflection_;
  delete MapProto_Entry::default_instance_;
  delete MapProto_Entry_reflection_;
}

void protobuf_AddDesc_calvinfs_5fconfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_calvinfs_5fconfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025calvinfs_config.proto\"\231\003\n\016CalvinFSConf"
    "ig\022 \n\030block_replication_factor\030\001 \001(\004\022#\n\033"
    "metadata_replication_factor\030\002 \001(\004\022\025\n\rblu"
    "cket_count\030\003 \001(\004\022\034\n\024metadata_shard_count"
    "\030\004 \001(\004\0224\n\010replicas\030\013 \003(\0132\".CalvinFSConfi"
    "g.ReplicaParticipant\022*\n\010bluckets\030\025 \003(\0132\030"
    ".CalvinFSConfig.MapEntry\0221\n\017metadata_sha"
    "rds\030\037 \003(\0132\030.CalvinFSConfig.MapEntry\0326\n\022R"
    "eplicaParticipant\022\017\n\007machine\030\001 \001(\004\022\017\n\007re"
    "plica\030\002 \001(\004\032>\n\010MapEntry\022\n\n\002id\030\001 \001(\004\022\022\n\007r"
    "eplica\030\002 \001(\004:\0010\022\022\n\007machine\030\003 \001(\004:\0010\"Q\n\010M"
    "apProto\022 \n\007entries\030\001 \003(\0132\017.MapProto.Entr"
    "y\032#\n\005Entry\022\013\n\003key\030\001 \001(\014\022\r\n\005value\030\002 \001(\014", 518);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "calvinfs_config.proto", &protobuf_RegisterTypes);
  CalvinFSConfig::default_instance_ = new CalvinFSConfig();
  CalvinFSConfig_ReplicaParticipant::default_instance_ = new CalvinFSConfig_ReplicaParticipant();
  CalvinFSConfig_MapEntry::default_instance_ = new CalvinFSConfig_MapEntry();
  MapProto::default_instance_ = new MapProto();
  MapProto_Entry::default_instance_ = new MapProto_Entry();
  CalvinFSConfig::default_instance_->InitAsDefaultInstance();
  CalvinFSConfig_ReplicaParticipant::default_instance_->InitAsDefaultInstance();
  CalvinFSConfig_MapEntry::default_instance_->InitAsDefaultInstance();
  MapProto::default_instance_->InitAsDefaultInstance();
  MapProto_Entry::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_calvinfs_5fconfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_calvinfs_5fconfig_2eproto {
  StaticDescriptorInitializer_calvinfs_5fconfig_2eproto() {
    protobuf_AddDesc_calvinfs_5fconfig_2eproto();
  }
} static_descriptor_initializer_calvinfs_5fconfig_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalvinFSConfig_ReplicaParticipant::kMachineFieldNumber;
const int CalvinFSConfig_ReplicaParticipant::kReplicaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalvinFSConfig_ReplicaParticipant::CalvinFSConfig_ReplicaParticipant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CalvinFSConfig.ReplicaParticipant)
}

void CalvinFSConfig_ReplicaParticipant::InitAsDefaultInstance() {
}

CalvinFSConfig_ReplicaParticipant::CalvinFSConfig_ReplicaParticipant(const CalvinFSConfig_ReplicaParticipant& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CalvinFSConfig.ReplicaParticipant)
}

void CalvinFSConfig_ReplicaParticipant::SharedCtor() {
  _cached_size_ = 0;
  machine_ = GOOGLE_ULONGLONG(0);
  replica_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CalvinFSConfig_ReplicaParticipant::~CalvinFSConfig_ReplicaParticipant() {
  // @@protoc_insertion_point(destructor:CalvinFSConfig.ReplicaParticipant)
  SharedDtor();
}

void CalvinFSConfig_ReplicaParticipant::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CalvinFSConfig_ReplicaParticipant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalvinFSConfig_ReplicaParticipant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CalvinFSConfig_ReplicaParticipant_descriptor_;
}

const CalvinFSConfig_ReplicaParticipant& CalvinFSConfig_ReplicaParticipant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_calvinfs_5fconfig_2eproto();
  return *default_instance_;
}

CalvinFSConfig_ReplicaParticipant* CalvinFSConfig_ReplicaParticipant::default_instance_ = NULL;

CalvinFSConfig_ReplicaParticipant* CalvinFSConfig_ReplicaParticipant::New(::google::protobuf::Arena* arena) const {
  CalvinFSConfig_ReplicaParticipant* n = new CalvinFSConfig_ReplicaParticipant;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalvinFSConfig_ReplicaParticipant::Clear() {
// @@protoc_insertion_point(message_clear_start:CalvinFSConfig.ReplicaParticipant)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CalvinFSConfig_ReplicaParticipant, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CalvinFSConfig_ReplicaParticipant*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(machine_, replica_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CalvinFSConfig_ReplicaParticipant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CalvinFSConfig.ReplicaParticipant)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 machine = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &machine_)));
          set_has_machine();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_replica;
        break;
      }

      // optional uint64 replica = 2;
      case 2: {
        if (tag == 16) {
         parse_replica:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &replica_)));
          set_has_replica();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CalvinFSConfig.ReplicaParticipant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CalvinFSConfig.ReplicaParticipant)
  return false;
#undef DO_
}

void CalvinFSConfig_ReplicaParticipant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CalvinFSConfig.ReplicaParticipant)
  // optional uint64 machine = 1;
  if (has_machine()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->machine(), output);
  }

  // optional uint64 replica = 2;
  if (has_replica()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->replica(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CalvinFSConfig.ReplicaParticipant)
}

::google::protobuf::uint8* CalvinFSConfig_ReplicaParticipant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CalvinFSConfig.ReplicaParticipant)
  // optional uint64 machine = 1;
  if (has_machine()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->machine(), target);
  }

  // optional uint64 replica = 2;
  if (has_replica()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->replica(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CalvinFSConfig.ReplicaParticipant)
  return target;
}

int CalvinFSConfig_ReplicaParticipant::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CalvinFSConfig.ReplicaParticipant)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 machine = 1;
    if (has_machine()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->machine());
    }

    // optional uint64 replica = 2;
    if (has_replica()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->replica());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalvinFSConfig_ReplicaParticipant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CalvinFSConfig.ReplicaParticipant)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CalvinFSConfig_ReplicaParticipant* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CalvinFSConfig_ReplicaParticipant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CalvinFSConfig.ReplicaParticipant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CalvinFSConfig.ReplicaParticipant)
    MergeFrom(*source);
  }
}

void CalvinFSConfig_ReplicaParticipant::MergeFrom(const CalvinFSConfig_ReplicaParticipant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CalvinFSConfig.ReplicaParticipant)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_machine()) {
      set_machine(from.machine());
    }
    if (from.has_replica()) {
      set_replica(from.replica());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CalvinFSConfig_ReplicaParticipant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CalvinFSConfig.ReplicaParticipant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalvinFSConfig_ReplicaParticipant::CopyFrom(const CalvinFSConfig_ReplicaParticipant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CalvinFSConfig.ReplicaParticipant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalvinFSConfig_ReplicaParticipant::IsInitialized() const {

  return true;
}

void CalvinFSConfig_ReplicaParticipant::Swap(CalvinFSConfig_ReplicaParticipant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalvinFSConfig_ReplicaParticipant::InternalSwap(CalvinFSConfig_ReplicaParticipant* other) {
  std::swap(machine_, other->machine_);
  std::swap(replica_, other->replica_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalvinFSConfig_ReplicaParticipant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CalvinFSConfig_ReplicaParticipant_descriptor_;
  metadata.reflection = CalvinFSConfig_ReplicaParticipant_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalvinFSConfig_MapEntry::kIdFieldNumber;
const int CalvinFSConfig_MapEntry::kReplicaFieldNumber;
const int CalvinFSConfig_MapEntry::kMachineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalvinFSConfig_MapEntry::CalvinFSConfig_MapEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CalvinFSConfig.MapEntry)
}

void CalvinFSConfig_MapEntry::InitAsDefaultInstance() {
}

CalvinFSConfig_MapEntry::CalvinFSConfig_MapEntry(const CalvinFSConfig_MapEntry& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CalvinFSConfig.MapEntry)
}

void CalvinFSConfig_MapEntry::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  replica_ = GOOGLE_ULONGLONG(0);
  machine_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CalvinFSConfig_MapEntry::~CalvinFSConfig_MapEntry() {
  // @@protoc_insertion_point(destructor:CalvinFSConfig.MapEntry)
  SharedDtor();
}

void CalvinFSConfig_MapEntry::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CalvinFSConfig_MapEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalvinFSConfig_MapEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CalvinFSConfig_MapEntry_descriptor_;
}

const CalvinFSConfig_MapEntry& CalvinFSConfig_MapEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_calvinfs_5fconfig_2eproto();
  return *default_instance_;
}

CalvinFSConfig_MapEntry* CalvinFSConfig_MapEntry::default_instance_ = NULL;

CalvinFSConfig_MapEntry* CalvinFSConfig_MapEntry::New(::google::protobuf::Arena* arena) const {
  CalvinFSConfig_MapEntry* n = new CalvinFSConfig_MapEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalvinFSConfig_MapEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:CalvinFSConfig.MapEntry)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CalvinFSConfig_MapEntry, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CalvinFSConfig_MapEntry*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, machine_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CalvinFSConfig_MapEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CalvinFSConfig.MapEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_replica;
        break;
      }

      // optional uint64 replica = 2 [default = 0];
      case 2: {
        if (tag == 16) {
         parse_replica:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &replica_)));
          set_has_replica();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_machine;
        break;
      }

      // optional uint64 machine = 3 [default = 0];
      case 3: {
        if (tag == 24) {
         parse_machine:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &machine_)));
          set_has_machine();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CalvinFSConfig.MapEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CalvinFSConfig.MapEntry)
  return false;
#undef DO_
}

void CalvinFSConfig_MapEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CalvinFSConfig.MapEntry)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional uint64 replica = 2 [default = 0];
  if (has_replica()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->replica(), output);
  }

  // optional uint64 machine = 3 [default = 0];
  if (has_machine()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->machine(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CalvinFSConfig.MapEntry)
}

::google::protobuf::uint8* CalvinFSConfig_MapEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CalvinFSConfig.MapEntry)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional uint64 replica = 2 [default = 0];
  if (has_replica()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->replica(), target);
  }

  // optional uint64 machine = 3 [default = 0];
  if (has_machine()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->machine(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CalvinFSConfig.MapEntry)
  return target;
}

int CalvinFSConfig_MapEntry::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CalvinFSConfig.MapEntry)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint64 replica = 2 [default = 0];
    if (has_replica()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->replica());
    }

    // optional uint64 machine = 3 [default = 0];
    if (has_machine()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->machine());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalvinFSConfig_MapEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CalvinFSConfig.MapEntry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CalvinFSConfig_MapEntry* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CalvinFSConfig_MapEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CalvinFSConfig.MapEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CalvinFSConfig.MapEntry)
    MergeFrom(*source);
  }
}

void CalvinFSConfig_MapEntry::MergeFrom(const CalvinFSConfig_MapEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CalvinFSConfig.MapEntry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_replica()) {
      set_replica(from.replica());
    }
    if (from.has_machine()) {
      set_machine(from.machine());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CalvinFSConfig_MapEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CalvinFSConfig.MapEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalvinFSConfig_MapEntry::CopyFrom(const CalvinFSConfig_MapEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CalvinFSConfig.MapEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalvinFSConfig_MapEntry::IsInitialized() const {

  return true;
}

void CalvinFSConfig_MapEntry::Swap(CalvinFSConfig_MapEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalvinFSConfig_MapEntry::InternalSwap(CalvinFSConfig_MapEntry* other) {
  std::swap(id_, other->id_);
  std::swap(replica_, other->replica_);
  std::swap(machine_, other->machine_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalvinFSConfig_MapEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CalvinFSConfig_MapEntry_descriptor_;
  metadata.reflection = CalvinFSConfig_MapEntry_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CalvinFSConfig::kBlockReplicationFactorFieldNumber;
const int CalvinFSConfig::kMetadataReplicationFactorFieldNumber;
const int CalvinFSConfig::kBlucketCountFieldNumber;
const int CalvinFSConfig::kMetadataShardCountFieldNumber;
const int CalvinFSConfig::kReplicasFieldNumber;
const int CalvinFSConfig::kBlucketsFieldNumber;
const int CalvinFSConfig::kMetadataShardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CalvinFSConfig::CalvinFSConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CalvinFSConfig)
}

void CalvinFSConfig::InitAsDefaultInstance() {
}

CalvinFSConfig::CalvinFSConfig(const CalvinFSConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CalvinFSConfig)
}

void CalvinFSConfig::SharedCtor() {
  _cached_size_ = 0;
  block_replication_factor_ = GOOGLE_ULONGLONG(0);
  metadata_replication_factor_ = GOOGLE_ULONGLONG(0);
  blucket_count_ = GOOGLE_ULONGLONG(0);
  metadata_shard_count_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CalvinFSConfig::~CalvinFSConfig() {
  // @@protoc_insertion_point(destructor:CalvinFSConfig)
  SharedDtor();
}

void CalvinFSConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CalvinFSConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CalvinFSConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CalvinFSConfig_descriptor_;
}

const CalvinFSConfig& CalvinFSConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_calvinfs_5fconfig_2eproto();
  return *default_instance_;
}

CalvinFSConfig* CalvinFSConfig::default_instance_ = NULL;

CalvinFSConfig* CalvinFSConfig::New(::google::protobuf::Arena* arena) const {
  CalvinFSConfig* n = new CalvinFSConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CalvinFSConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:CalvinFSConfig)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(CalvinFSConfig, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CalvinFSConfig*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(block_replication_factor_, metadata_shard_count_);

#undef ZR_HELPER_
#undef ZR_

  replicas_.Clear();
  bluckets_.Clear();
  metadata_shards_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CalvinFSConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CalvinFSConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 block_replication_factor = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &block_replication_factor_)));
          set_has_block_replication_factor();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_metadata_replication_factor;
        break;
      }

      // optional uint64 metadata_replication_factor = 2;
      case 2: {
        if (tag == 16) {
         parse_metadata_replication_factor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &metadata_replication_factor_)));
          set_has_metadata_replication_factor();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_blucket_count;
        break;
      }

      // optional uint64 blucket_count = 3;
      case 3: {
        if (tag == 24) {
         parse_blucket_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &blucket_count_)));
          set_has_blucket_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_metadata_shard_count;
        break;
      }

      // optional uint64 metadata_shard_count = 4;
      case 4: {
        if (tag == 32) {
         parse_metadata_shard_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &metadata_shard_count_)));
          set_has_metadata_shard_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_replicas;
        break;
      }

      // repeated .CalvinFSConfig.ReplicaParticipant replicas = 11;
      case 11: {
        if (tag == 90) {
         parse_replicas:
          DO_(input->IncrementRecursionDepth());
         parse_loop_replicas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_replicas()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_loop_replicas;
        if (input->ExpectTag(170)) goto parse_loop_bluckets;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .CalvinFSConfig.MapEntry bluckets = 21;
      case 21: {
        if (tag == 170) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_bluckets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_bluckets()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_loop_bluckets;
        if (input->ExpectTag(250)) goto parse_loop_metadata_shards;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .CalvinFSConfig.MapEntry metadata_shards = 31;
      case 31: {
        if (tag == 250) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_metadata_shards:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_metadata_shards()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(250)) goto parse_loop_metadata_shards;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CalvinFSConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CalvinFSConfig)
  return false;
#undef DO_
}

void CalvinFSConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CalvinFSConfig)
  // optional uint64 block_replication_factor = 1;
  if (has_block_replication_factor()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->block_replication_factor(), output);
  }

  // optional uint64 metadata_replication_factor = 2;
  if (has_metadata_replication_factor()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->metadata_replication_factor(), output);
  }

  // optional uint64 blucket_count = 3;
  if (has_blucket_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->blucket_count(), output);
  }

  // optional uint64 metadata_shard_count = 4;
  if (has_metadata_shard_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->metadata_shard_count(), output);
  }

  // repeated .CalvinFSConfig.ReplicaParticipant replicas = 11;
  for (unsigned int i = 0, n = this->replicas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->replicas(i), output);
  }

  // repeated .CalvinFSConfig.MapEntry bluckets = 21;
  for (unsigned int i = 0, n = this->bluckets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->bluckets(i), output);
  }

  // repeated .CalvinFSConfig.MapEntry metadata_shards = 31;
  for (unsigned int i = 0, n = this->metadata_shards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->metadata_shards(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CalvinFSConfig)
}

::google::protobuf::uint8* CalvinFSConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CalvinFSConfig)
  // optional uint64 block_replication_factor = 1;
  if (has_block_replication_factor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->block_replication_factor(), target);
  }

  // optional uint64 metadata_replication_factor = 2;
  if (has_metadata_replication_factor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->metadata_replication_factor(), target);
  }

  // optional uint64 blucket_count = 3;
  if (has_blucket_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->blucket_count(), target);
  }

  // optional uint64 metadata_shard_count = 4;
  if (has_metadata_shard_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->metadata_shard_count(), target);
  }

  // repeated .CalvinFSConfig.ReplicaParticipant replicas = 11;
  for (unsigned int i = 0, n = this->replicas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->replicas(i), false, target);
  }

  // repeated .CalvinFSConfig.MapEntry bluckets = 21;
  for (unsigned int i = 0, n = this->bluckets_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, this->bluckets(i), false, target);
  }

  // repeated .CalvinFSConfig.MapEntry metadata_shards = 31;
  for (unsigned int i = 0, n = this->metadata_shards_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        31, this->metadata_shards(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CalvinFSConfig)
  return target;
}

int CalvinFSConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:CalvinFSConfig)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint64 block_replication_factor = 1;
    if (has_block_replication_factor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->block_replication_factor());
    }

    // optional uint64 metadata_replication_factor = 2;
    if (has_metadata_replication_factor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->metadata_replication_factor());
    }

    // optional uint64 blucket_count = 3;
    if (has_blucket_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->blucket_count());
    }

    // optional uint64 metadata_shard_count = 4;
    if (has_metadata_shard_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->metadata_shard_count());
    }

  }
  // repeated .CalvinFSConfig.ReplicaParticipant replicas = 11;
  total_size += 1 * this->replicas_size();
  for (int i = 0; i < this->replicas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->replicas(i));
  }

  // repeated .CalvinFSConfig.MapEntry bluckets = 21;
  total_size += 2 * this->bluckets_size();
  for (int i = 0; i < this->bluckets_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bluckets(i));
  }

  // repeated .CalvinFSConfig.MapEntry metadata_shards = 31;
  total_size += 2 * this->metadata_shards_size();
  for (int i = 0; i < this->metadata_shards_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->metadata_shards(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CalvinFSConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CalvinFSConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CalvinFSConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CalvinFSConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CalvinFSConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CalvinFSConfig)
    MergeFrom(*source);
  }
}

void CalvinFSConfig::MergeFrom(const CalvinFSConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CalvinFSConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  replicas_.MergeFrom(from.replicas_);
  bluckets_.MergeFrom(from.bluckets_);
  metadata_shards_.MergeFrom(from.metadata_shards_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_block_replication_factor()) {
      set_block_replication_factor(from.block_replication_factor());
    }
    if (from.has_metadata_replication_factor()) {
      set_metadata_replication_factor(from.metadata_replication_factor());
    }
    if (from.has_blucket_count()) {
      set_blucket_count(from.blucket_count());
    }
    if (from.has_metadata_shard_count()) {
      set_metadata_shard_count(from.metadata_shard_count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CalvinFSConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CalvinFSConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CalvinFSConfig::CopyFrom(const CalvinFSConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CalvinFSConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CalvinFSConfig::IsInitialized() const {

  return true;
}

void CalvinFSConfig::Swap(CalvinFSConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CalvinFSConfig::InternalSwap(CalvinFSConfig* other) {
  std::swap(block_replication_factor_, other->block_replication_factor_);
  std::swap(metadata_replication_factor_, other->metadata_replication_factor_);
  std::swap(blucket_count_, other->blucket_count_);
  std::swap(metadata_shard_count_, other->metadata_shard_count_);
  replicas_.UnsafeArenaSwap(&other->replicas_);
  bluckets_.UnsafeArenaSwap(&other->bluckets_);
  metadata_shards_.UnsafeArenaSwap(&other->metadata_shards_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CalvinFSConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CalvinFSConfig_descriptor_;
  metadata.reflection = CalvinFSConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CalvinFSConfig_ReplicaParticipant

// optional uint64 machine = 1;
bool CalvinFSConfig_ReplicaParticipant::has_machine() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CalvinFSConfig_ReplicaParticipant::set_has_machine() {
  _has_bits_[0] |= 0x00000001u;
}
void CalvinFSConfig_ReplicaParticipant::clear_has_machine() {
  _has_bits_[0] &= ~0x00000001u;
}
void CalvinFSConfig_ReplicaParticipant::clear_machine() {
  machine_ = GOOGLE_ULONGLONG(0);
  clear_has_machine();
}
 ::google::protobuf::uint64 CalvinFSConfig_ReplicaParticipant::machine() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.ReplicaParticipant.machine)
  return machine_;
}
 void CalvinFSConfig_ReplicaParticipant::set_machine(::google::protobuf::uint64 value) {
  set_has_machine();
  machine_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.ReplicaParticipant.machine)
}

// optional uint64 replica = 2;
bool CalvinFSConfig_ReplicaParticipant::has_replica() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CalvinFSConfig_ReplicaParticipant::set_has_replica() {
  _has_bits_[0] |= 0x00000002u;
}
void CalvinFSConfig_ReplicaParticipant::clear_has_replica() {
  _has_bits_[0] &= ~0x00000002u;
}
void CalvinFSConfig_ReplicaParticipant::clear_replica() {
  replica_ = GOOGLE_ULONGLONG(0);
  clear_has_replica();
}
 ::google::protobuf::uint64 CalvinFSConfig_ReplicaParticipant::replica() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.ReplicaParticipant.replica)
  return replica_;
}
 void CalvinFSConfig_ReplicaParticipant::set_replica(::google::protobuf::uint64 value) {
  set_has_replica();
  replica_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.ReplicaParticipant.replica)
}

// -------------------------------------------------------------------

// CalvinFSConfig_MapEntry

// optional uint64 id = 1;
bool CalvinFSConfig_MapEntry::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CalvinFSConfig_MapEntry::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CalvinFSConfig_MapEntry::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CalvinFSConfig_MapEntry::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::uint64 CalvinFSConfig_MapEntry::id() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.MapEntry.id)
  return id_;
}
 void CalvinFSConfig_MapEntry::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.MapEntry.id)
}

// optional uint64 replica = 2 [default = 0];
bool CalvinFSConfig_MapEntry::has_replica() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CalvinFSConfig_MapEntry::set_has_replica() {
  _has_bits_[0] |= 0x00000002u;
}
void CalvinFSConfig_MapEntry::clear_has_replica() {
  _has_bits_[0] &= ~0x00000002u;
}
void CalvinFSConfig_MapEntry::clear_replica() {
  replica_ = GOOGLE_ULONGLONG(0);
  clear_has_replica();
}
 ::google::protobuf::uint64 CalvinFSConfig_MapEntry::replica() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.MapEntry.replica)
  return replica_;
}
 void CalvinFSConfig_MapEntry::set_replica(::google::protobuf::uint64 value) {
  set_has_replica();
  replica_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.MapEntry.replica)
}

// optional uint64 machine = 3 [default = 0];
bool CalvinFSConfig_MapEntry::has_machine() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CalvinFSConfig_MapEntry::set_has_machine() {
  _has_bits_[0] |= 0x00000004u;
}
void CalvinFSConfig_MapEntry::clear_has_machine() {
  _has_bits_[0] &= ~0x00000004u;
}
void CalvinFSConfig_MapEntry::clear_machine() {
  machine_ = GOOGLE_ULONGLONG(0);
  clear_has_machine();
}
 ::google::protobuf::uint64 CalvinFSConfig_MapEntry::machine() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.MapEntry.machine)
  return machine_;
}
 void CalvinFSConfig_MapEntry::set_machine(::google::protobuf::uint64 value) {
  set_has_machine();
  machine_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.MapEntry.machine)
}

// -------------------------------------------------------------------

// CalvinFSConfig

// optional uint64 block_replication_factor = 1;
bool CalvinFSConfig::has_block_replication_factor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CalvinFSConfig::set_has_block_replication_factor() {
  _has_bits_[0] |= 0x00000001u;
}
void CalvinFSConfig::clear_has_block_replication_factor() {
  _has_bits_[0] &= ~0x00000001u;
}
void CalvinFSConfig::clear_block_replication_factor() {
  block_replication_factor_ = GOOGLE_ULONGLONG(0);
  clear_has_block_replication_factor();
}
 ::google::protobuf::uint64 CalvinFSConfig::block_replication_factor() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.block_replication_factor)
  return block_replication_factor_;
}
 void CalvinFSConfig::set_block_replication_factor(::google::protobuf::uint64 value) {
  set_has_block_replication_factor();
  block_replication_factor_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.block_replication_factor)
}

// optional uint64 metadata_replication_factor = 2;
bool CalvinFSConfig::has_metadata_replication_factor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CalvinFSConfig::set_has_metadata_replication_factor() {
  _has_bits_[0] |= 0x00000002u;
}
void CalvinFSConfig::clear_has_metadata_replication_factor() {
  _has_bits_[0] &= ~0x00000002u;
}
void CalvinFSConfig::clear_metadata_replication_factor() {
  metadata_replication_factor_ = GOOGLE_ULONGLONG(0);
  clear_has_metadata_replication_factor();
}
 ::google::protobuf::uint64 CalvinFSConfig::metadata_replication_factor() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.metadata_replication_factor)
  return metadata_replication_factor_;
}
 void CalvinFSConfig::set_metadata_replication_factor(::google::protobuf::uint64 value) {
  set_has_metadata_replication_factor();
  metadata_replication_factor_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.metadata_replication_factor)
}

// optional uint64 blucket_count = 3;
bool CalvinFSConfig::has_blucket_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CalvinFSConfig::set_has_blucket_count() {
  _has_bits_[0] |= 0x00000004u;
}
void CalvinFSConfig::clear_has_blucket_count() {
  _has_bits_[0] &= ~0x00000004u;
}
void CalvinFSConfig::clear_blucket_count() {
  blucket_count_ = GOOGLE_ULONGLONG(0);
  clear_has_blucket_count();
}
 ::google::protobuf::uint64 CalvinFSConfig::blucket_count() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.blucket_count)
  return blucket_count_;
}
 void CalvinFSConfig::set_blucket_count(::google::protobuf::uint64 value) {
  set_has_blucket_count();
  blucket_count_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.blucket_count)
}

// optional uint64 metadata_shard_count = 4;
bool CalvinFSConfig::has_metadata_shard_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CalvinFSConfig::set_has_metadata_shard_count() {
  _has_bits_[0] |= 0x00000008u;
}
void CalvinFSConfig::clear_has_metadata_shard_count() {
  _has_bits_[0] &= ~0x00000008u;
}
void CalvinFSConfig::clear_metadata_shard_count() {
  metadata_shard_count_ = GOOGLE_ULONGLONG(0);
  clear_has_metadata_shard_count();
}
 ::google::protobuf::uint64 CalvinFSConfig::metadata_shard_count() const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.metadata_shard_count)
  return metadata_shard_count_;
}
 void CalvinFSConfig::set_metadata_shard_count(::google::protobuf::uint64 value) {
  set_has_metadata_shard_count();
  metadata_shard_count_ = value;
  // @@protoc_insertion_point(field_set:CalvinFSConfig.metadata_shard_count)
}

// repeated .CalvinFSConfig.ReplicaParticipant replicas = 11;
int CalvinFSConfig::replicas_size() const {
  return replicas_.size();
}
void CalvinFSConfig::clear_replicas() {
  replicas_.Clear();
}
const ::CalvinFSConfig_ReplicaParticipant& CalvinFSConfig::replicas(int index) const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.replicas)
  return replicas_.Get(index);
}
::CalvinFSConfig_ReplicaParticipant* CalvinFSConfig::mutable_replicas(int index) {
  // @@protoc_insertion_point(field_mutable:CalvinFSConfig.replicas)
  return replicas_.Mutable(index);
}
::CalvinFSConfig_ReplicaParticipant* CalvinFSConfig::add_replicas() {
  // @@protoc_insertion_point(field_add:CalvinFSConfig.replicas)
  return replicas_.Add();
}
::google::protobuf::RepeatedPtrField< ::CalvinFSConfig_ReplicaParticipant >*
CalvinFSConfig::mutable_replicas() {
  // @@protoc_insertion_point(field_mutable_list:CalvinFSConfig.replicas)
  return &replicas_;
}
const ::google::protobuf::RepeatedPtrField< ::CalvinFSConfig_ReplicaParticipant >&
CalvinFSConfig::replicas() const {
  // @@protoc_insertion_point(field_list:CalvinFSConfig.replicas)
  return replicas_;
}

// repeated .CalvinFSConfig.MapEntry bluckets = 21;
int CalvinFSConfig::bluckets_size() const {
  return bluckets_.size();
}
void CalvinFSConfig::clear_bluckets() {
  bluckets_.Clear();
}
const ::CalvinFSConfig_MapEntry& CalvinFSConfig::bluckets(int index) const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.bluckets)
  return bluckets_.Get(index);
}
::CalvinFSConfig_MapEntry* CalvinFSConfig::mutable_bluckets(int index) {
  // @@protoc_insertion_point(field_mutable:CalvinFSConfig.bluckets)
  return bluckets_.Mutable(index);
}
::CalvinFSConfig_MapEntry* CalvinFSConfig::add_bluckets() {
  // @@protoc_insertion_point(field_add:CalvinFSConfig.bluckets)
  return bluckets_.Add();
}
::google::protobuf::RepeatedPtrField< ::CalvinFSConfig_MapEntry >*
CalvinFSConfig::mutable_bluckets() {
  // @@protoc_insertion_point(field_mutable_list:CalvinFSConfig.bluckets)
  return &bluckets_;
}
const ::google::protobuf::RepeatedPtrField< ::CalvinFSConfig_MapEntry >&
CalvinFSConfig::bluckets() const {
  // @@protoc_insertion_point(field_list:CalvinFSConfig.bluckets)
  return bluckets_;
}

// repeated .CalvinFSConfig.MapEntry metadata_shards = 31;
int CalvinFSConfig::metadata_shards_size() const {
  return metadata_shards_.size();
}
void CalvinFSConfig::clear_metadata_shards() {
  metadata_shards_.Clear();
}
const ::CalvinFSConfig_MapEntry& CalvinFSConfig::metadata_shards(int index) const {
  // @@protoc_insertion_point(field_get:CalvinFSConfig.metadata_shards)
  return metadata_shards_.Get(index);
}
::CalvinFSConfig_MapEntry* CalvinFSConfig::mutable_metadata_shards(int index) {
  // @@protoc_insertion_point(field_mutable:CalvinFSConfig.metadata_shards)
  return metadata_shards_.Mutable(index);
}
::CalvinFSConfig_MapEntry* CalvinFSConfig::add_metadata_shards() {
  // @@protoc_insertion_point(field_add:CalvinFSConfig.metadata_shards)
  return metadata_shards_.Add();
}
::google::protobuf::RepeatedPtrField< ::CalvinFSConfig_MapEntry >*
CalvinFSConfig::mutable_metadata_shards() {
  // @@protoc_insertion_point(field_mutable_list:CalvinFSConfig.metadata_shards)
  return &metadata_shards_;
}
const ::google::protobuf::RepeatedPtrField< ::CalvinFSConfig_MapEntry >&
CalvinFSConfig::metadata_shards() const {
  // @@protoc_insertion_point(field_list:CalvinFSConfig.metadata_shards)
  return metadata_shards_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapProto_Entry::kKeyFieldNumber;
const int MapProto_Entry::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapProto_Entry::MapProto_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MapProto.Entry)
}

void MapProto_Entry::InitAsDefaultInstance() {
}

MapProto_Entry::MapProto_Entry(const MapProto_Entry& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MapProto.Entry)
}

void MapProto_Entry::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MapProto_Entry::~MapProto_Entry() {
  // @@protoc_insertion_point(destructor:MapProto.Entry)
  SharedDtor();
}

void MapProto_Entry::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MapProto_Entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapProto_Entry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MapProto_Entry_descriptor_;
}

const MapProto_Entry& MapProto_Entry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_calvinfs_5fconfig_2eproto();
  return *default_instance_;
}

MapProto_Entry* MapProto_Entry::default_instance_ = NULL;

MapProto_Entry* MapProto_Entry::New(::google::protobuf::Arena* arena) const {
  MapProto_Entry* n = new MapProto_Entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MapProto_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:MapProto.Entry)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_key()) {
      key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MapProto_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MapProto.Entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional bytes value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MapProto.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MapProto.Entry)
  return false;
#undef DO_
}

void MapProto_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MapProto.Entry)
  // optional bytes key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // optional bytes value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MapProto.Entry)
}

::google::protobuf::uint8* MapProto_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MapProto.Entry)
  // optional bytes key = 1;
  if (has_key()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // optional bytes value = 2;
  if (has_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MapProto.Entry)
  return target;
}

int MapProto_Entry::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MapProto.Entry)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key());
    }

    // optional bytes value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapProto_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MapProto.Entry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MapProto_Entry* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MapProto_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MapProto.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MapProto.Entry)
    MergeFrom(*source);
  }
}

void MapProto_Entry::MergeFrom(const MapProto_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MapProto.Entry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MapProto_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MapProto.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapProto_Entry::CopyFrom(const MapProto_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MapProto.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapProto_Entry::IsInitialized() const {

  return true;
}

void MapProto_Entry::Swap(MapProto_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapProto_Entry::InternalSwap(MapProto_Entry* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MapProto_Entry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MapProto_Entry_descriptor_;
  metadata.reflection = MapProto_Entry_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapProto::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapProto::MapProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MapProto)
}

void MapProto::InitAsDefaultInstance() {
}

MapProto::MapProto(const MapProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MapProto)
}

void MapProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MapProto::~MapProto() {
  // @@protoc_insertion_point(destructor:MapProto)
  SharedDtor();
}

void MapProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MapProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MapProto_descriptor_;
}

const MapProto& MapProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_calvinfs_5fconfig_2eproto();
  return *default_instance_;
}

MapProto* MapProto::default_instance_ = NULL;

MapProto* MapProto::New(::google::protobuf::Arena* arena) const {
  MapProto* n = new MapProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MapProto::Clear() {
// @@protoc_insertion_point(message_clear_start:MapProto)
  entries_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MapProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MapProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MapProto.Entry entries = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_entries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_entries;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MapProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MapProto)
  return false;
#undef DO_
}

void MapProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MapProto)
  // repeated .MapProto.Entry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entries(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MapProto)
}

::google::protobuf::uint8* MapProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MapProto)
  // repeated .MapProto.Entry entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entries(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MapProto)
  return target;
}

int MapProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MapProto)
  int total_size = 0;

  // repeated .MapProto.Entry entries = 1;
  total_size += 1 * this->entries_size();
  for (int i = 0; i < this->entries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->entries(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MapProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MapProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MapProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MapProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MapProto)
    MergeFrom(*source);
  }
}

void MapProto::MergeFrom(const MapProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MapProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  entries_.MergeFrom(from.entries_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MapProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MapProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapProto::CopyFrom(const MapProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MapProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapProto::IsInitialized() const {

  return true;
}

void MapProto::Swap(MapProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapProto::InternalSwap(MapProto* other) {
  entries_.UnsafeArenaSwap(&other->entries_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MapProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MapProto_descriptor_;
  metadata.reflection = MapProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MapProto_Entry

// optional bytes key = 1;
bool MapProto_Entry::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MapProto_Entry::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void MapProto_Entry::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void MapProto_Entry::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
 const ::std::string& MapProto_Entry::key() const {
  // @@protoc_insertion_point(field_get:MapProto.Entry.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MapProto_Entry::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MapProto.Entry.key)
}
 void MapProto_Entry::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MapProto.Entry.key)
}
 void MapProto_Entry::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MapProto.Entry.key)
}
 ::std::string* MapProto_Entry::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:MapProto.Entry.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MapProto_Entry::release_key() {
  // @@protoc_insertion_point(field_release:MapProto.Entry.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MapProto_Entry::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:MapProto.Entry.key)
}

// optional bytes value = 2;
bool MapProto_Entry::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MapProto_Entry::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void MapProto_Entry::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void MapProto_Entry::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
 const ::std::string& MapProto_Entry::value() const {
  // @@protoc_insertion_point(field_get:MapProto.Entry.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MapProto_Entry::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MapProto.Entry.value)
}
 void MapProto_Entry::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MapProto.Entry.value)
}
 void MapProto_Entry::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MapProto.Entry.value)
}
 ::std::string* MapProto_Entry::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:MapProto.Entry.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MapProto_Entry::release_value() {
  // @@protoc_insertion_point(field_release:MapProto.Entry.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MapProto_Entry::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:MapProto.Entry.value)
}

// -------------------------------------------------------------------

// MapProto

// repeated .MapProto.Entry entries = 1;
int MapProto::entries_size() const {
  return entries_.size();
}
void MapProto::clear_entries() {
  entries_.Clear();
}
const ::MapProto_Entry& MapProto::entries(int index) const {
  // @@protoc_insertion_point(field_get:MapProto.entries)
  return entries_.Get(index);
}
::MapProto_Entry* MapProto::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:MapProto.entries)
  return entries_.Mutable(index);
}
::MapProto_Entry* MapProto::add_entries() {
  // @@protoc_insertion_point(field_add:MapProto.entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::MapProto_Entry >*
MapProto::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:MapProto.entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::MapProto_Entry >&
MapProto::entries() const {
  // @@protoc_insertion_point(field_list:MapProto.entries)
  return entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
