// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metadata.proto

#ifndef PROTOBUF_metadata_2eproto__INCLUDED
#define PROTOBUF_metadata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_metadata_2eproto();
void protobuf_AssignDesc_metadata_2eproto();
void protobuf_ShutdownFile_metadata_2eproto();

class FilePart;
class MetadataAction;
class MetadataAction_AppendInput;
class MetadataAction_AppendOutput;
class MetadataAction_ChangePermissionsInput;
class MetadataAction_ChangePermissionsOutput;
class MetadataAction_CopyInput;
class MetadataAction_CopyOutput;
class MetadataAction_CreateFileInput;
class MetadataAction_CreateFileOutput;
class MetadataAction_EraseInput;
class MetadataAction_EraseOutput;
class MetadataAction_LookupInput;
class MetadataAction_LookupOutput;
class MetadataAction_RenameInput;
class MetadataAction_RenameOutput;
class MetadataAction_ResizeInput;
class MetadataAction_ResizeOutput;
class MetadataAction_WriteInput;
class MetadataAction_WriteOutput;
class MetadataEntry;
class Permissions;

enum MetadataAction_Type {
  MetadataAction_Type_CREATE_FILE = 0,
  MetadataAction_Type_ERASE = 1,
  MetadataAction_Type_COPY = 2,
  MetadataAction_Type_RENAME = 3,
  MetadataAction_Type_LOOKUP = 4,
  MetadataAction_Type_RESIZE = 5,
  MetadataAction_Type_WRITE = 6,
  MetadataAction_Type_APPEND = 7,
  MetadataAction_Type_CHANGE_PERMISSIONS = 8
};
bool MetadataAction_Type_IsValid(int value);
const MetadataAction_Type MetadataAction_Type_Type_MIN = MetadataAction_Type_CREATE_FILE;
const MetadataAction_Type MetadataAction_Type_Type_MAX = MetadataAction_Type_CHANGE_PERMISSIONS;
const int MetadataAction_Type_Type_ARRAYSIZE = MetadataAction_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* MetadataAction_Type_descriptor();
inline const ::std::string& MetadataAction_Type_Name(MetadataAction_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    MetadataAction_Type_descriptor(), value);
}
inline bool MetadataAction_Type_Parse(
    const ::std::string& name, MetadataAction_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MetadataAction_Type>(
    MetadataAction_Type_descriptor(), name, value);
}
enum MetadataAction_Error {
  MetadataAction_Error_FileDoesNotExist = 0,
  MetadataAction_Error_FileAlreadyExists = 1,
  MetadataAction_Error_WrongFileType = 2,
  MetadataAction_Error_DirectoryNotEmpty = 3,
  MetadataAction_Error_PermissionDenied = 4
};
bool MetadataAction_Error_IsValid(int value);
const MetadataAction_Error MetadataAction_Error_Error_MIN = MetadataAction_Error_FileDoesNotExist;
const MetadataAction_Error MetadataAction_Error_Error_MAX = MetadataAction_Error_PermissionDenied;
const int MetadataAction_Error_Error_ARRAYSIZE = MetadataAction_Error_Error_MAX + 1;

const ::google::protobuf::EnumDescriptor* MetadataAction_Error_descriptor();
inline const ::std::string& MetadataAction_Error_Name(MetadataAction_Error value) {
  return ::google::protobuf::internal::NameOfEnum(
    MetadataAction_Error_descriptor(), value);
}
inline bool MetadataAction_Error_Parse(
    const ::std::string& name, MetadataAction_Error* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MetadataAction_Error>(
    MetadataAction_Error_descriptor(), name, value);
}
enum FileType {
  DATA = 0,
  DIR = 1
};
bool FileType_IsValid(int value);
const FileType FileType_MIN = DATA;
const FileType FileType_MAX = DIR;
const int FileType_ARRAYSIZE = FileType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FileType_descriptor();
inline const ::std::string& FileType_Name(FileType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FileType_descriptor(), value);
}
inline bool FileType_Parse(
    const ::std::string& name, FileType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FileType>(
    FileType_descriptor(), name, value);
}
// ===================================================================

class Permissions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Permissions) */ {
 public:
  Permissions();
  virtual ~Permissions();

  Permissions(const Permissions& from);

  inline Permissions& operator=(const Permissions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Permissions& default_instance();

  void Swap(Permissions* other);

  // implements Message ----------------------------------------------

  inline Permissions* New() const { return New(NULL); }

  Permissions* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Permissions& from);
  void MergeFrom(const Permissions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Permissions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 owner = 2 [default = 0];
  bool has_owner() const;
  void clear_owner();
  static const int kOwnerFieldNumber = 2;
  ::google::protobuf::uint64 owner() const;
  void set_owner(::google::protobuf::uint64 value);

  // optional uint64 group = 3 [default = 0];
  bool has_group() const;
  void clear_group();
  static const int kGroupFieldNumber = 3;
  ::google::protobuf::uint64 group() const;
  void set_group(::google::protobuf::uint64 value);

  // optional string mode = 4 [default = "777"];
  bool has_mode() const;
  void clear_mode();
  static const int kModeFieldNumber = 4;
  const ::std::string& mode() const;
  void set_mode(const ::std::string& value);
  void set_mode(const char* value);
  void set_mode(const char* value, size_t size);
  ::std::string* mutable_mode();
  ::std::string* release_mode();
  void set_allocated_mode(::std::string* mode);

  // @@protoc_insertion_point(class_scope:Permissions)
 private:
  inline void set_has_owner();
  inline void clear_has_owner();
  inline void set_has_group();
  inline void clear_has_group();
  inline void set_has_mode();
  inline void clear_has_mode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 owner_;
  ::google::protobuf::uint64 group_;
  static ::std::string* _default_mode_;
  ::google::protobuf::internal::ArenaStringPtr mode_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static Permissions* default_instance_;
};
// -------------------------------------------------------------------

class FilePart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FilePart) */ {
 public:
  FilePart();
  virtual ~FilePart();

  FilePart(const FilePart& from);

  inline FilePart& operator=(const FilePart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FilePart& default_instance();

  void Swap(FilePart* other);

  // implements Message ----------------------------------------------

  inline FilePart* New() const { return New(NULL); }

  FilePart* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FilePart& from);
  void MergeFrom(const FilePart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FilePart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 length = 1;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 1;
  ::google::protobuf::uint64 length() const;
  void set_length(::google::protobuf::uint64 value);

  // optional uint64 block_id = 2 [default = 0];
  bool has_block_id() const;
  void clear_block_id();
  static const int kBlockIdFieldNumber = 2;
  ::google::protobuf::uint64 block_id() const;
  void set_block_id(::google::protobuf::uint64 value);

  // optional uint64 block_offset = 3 [default = 0];
  bool has_block_offset() const;
  void clear_block_offset();
  static const int kBlockOffsetFieldNumber = 3;
  ::google::protobuf::uint64 block_offset() const;
  void set_block_offset(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:FilePart)
 private:
  inline void set_has_length();
  inline void clear_has_length();
  inline void set_has_block_id();
  inline void clear_has_block_id();
  inline void set_has_block_offset();
  inline void clear_has_block_offset();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 length_;
  ::google::protobuf::uint64 block_id_;
  ::google::protobuf::uint64 block_offset_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static FilePart* default_instance_;
};
// -------------------------------------------------------------------

class MetadataEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataEntry) */ {
 public:
  MetadataEntry();
  virtual ~MetadataEntry();

  MetadataEntry(const MetadataEntry& from);

  inline MetadataEntry& operator=(const MetadataEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataEntry& default_instance();

  void Swap(MetadataEntry* other);

  // implements Message ----------------------------------------------

  inline MetadataEntry* New() const { return New(NULL); }

  MetadataEntry* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataEntry& from);
  void MergeFrom(const MetadataEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool locked = 1 [default = false];
  bool has_locked() const;
  void clear_locked();
  static const int kLockedFieldNumber = 1;
  bool locked() const;
  void set_locked(bool value);

  // optional .Permissions permissions = 2;
  bool has_permissions() const;
  void clear_permissions();
  static const int kPermissionsFieldNumber = 2;
  const ::Permissions& permissions() const;
  ::Permissions* mutable_permissions();
  ::Permissions* release_permissions();
  void set_allocated_permissions(::Permissions* permissions);

  // required .FileType type = 5 [default = DATA];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::FileType type() const;
  void set_type(::FileType value);

  // repeated .FilePart file_parts = 6;
  int file_parts_size() const;
  void clear_file_parts();
  static const int kFilePartsFieldNumber = 6;
  const ::FilePart& file_parts(int index) const;
  ::FilePart* mutable_file_parts(int index);
  ::FilePart* add_file_parts();
  ::google::protobuf::RepeatedPtrField< ::FilePart >*
      mutable_file_parts();
  const ::google::protobuf::RepeatedPtrField< ::FilePart >&
      file_parts() const;

  // repeated string dir_contents = 7;
  int dir_contents_size() const;
  void clear_dir_contents();
  static const int kDirContentsFieldNumber = 7;
  const ::std::string& dir_contents(int index) const;
  ::std::string* mutable_dir_contents(int index);
  void set_dir_contents(int index, const ::std::string& value);
  void set_dir_contents(int index, const char* value);
  void set_dir_contents(int index, const char* value, size_t size);
  ::std::string* add_dir_contents();
  void add_dir_contents(const ::std::string& value);
  void add_dir_contents(const char* value);
  void add_dir_contents(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& dir_contents() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_dir_contents();

  // @@protoc_insertion_point(class_scope:MetadataEntry)
 private:
  inline void set_has_locked();
  inline void clear_has_locked();
  inline void set_has_permissions();
  inline void clear_has_permissions();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Permissions* permissions_;
  bool locked_;
  int type_;
  ::google::protobuf::RepeatedPtrField< ::FilePart > file_parts_;
  ::google::protobuf::RepeatedPtrField< ::std::string> dir_contents_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataEntry* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_CreateFileInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.CreateFileInput) */ {
 public:
  MetadataAction_CreateFileInput();
  virtual ~MetadataAction_CreateFileInput();

  MetadataAction_CreateFileInput(const MetadataAction_CreateFileInput& from);

  inline MetadataAction_CreateFileInput& operator=(const MetadataAction_CreateFileInput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_CreateFileInput& default_instance();

  void Swap(MetadataAction_CreateFileInput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_CreateFileInput* New() const { return New(NULL); }

  MetadataAction_CreateFileInput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_CreateFileInput& from);
  void MergeFrom(const MetadataAction_CreateFileInput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_CreateFileInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional .Permissions permissions = 2;
  bool has_permissions() const;
  void clear_permissions();
  static const int kPermissionsFieldNumber = 2;
  const ::Permissions& permissions() const;
  ::Permissions* mutable_permissions();
  ::Permissions* release_permissions();
  void set_allocated_permissions(::Permissions* permissions);

  // required .FileType type = 3 [default = DATA];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::FileType type() const;
  void set_type(::FileType value);

  // @@protoc_insertion_point(class_scope:MetadataAction.CreateFileInput)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_permissions();
  inline void clear_has_permissions();
  inline void set_has_type();
  inline void clear_has_type();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::Permissions* permissions_;
  int type_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_CreateFileInput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_CreateFileOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.CreateFileOutput) */ {
 public:
  MetadataAction_CreateFileOutput();
  virtual ~MetadataAction_CreateFileOutput();

  MetadataAction_CreateFileOutput(const MetadataAction_CreateFileOutput& from);

  inline MetadataAction_CreateFileOutput& operator=(const MetadataAction_CreateFileOutput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_CreateFileOutput& default_instance();

  void Swap(MetadataAction_CreateFileOutput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_CreateFileOutput* New() const { return New(NULL); }

  MetadataAction_CreateFileOutput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_CreateFileOutput& from);
  void MergeFrom(const MetadataAction_CreateFileOutput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_CreateFileOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1 [default = true];
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // repeated .MetadataAction.Error errors = 2;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 2;
  ::MetadataAction_Error errors(int index) const;
  void set_errors(int index, ::MetadataAction_Error value);
  void add_errors(::MetadataAction_Error value);
  const ::google::protobuf::RepeatedField<int>& errors() const;
  ::google::protobuf::RepeatedField<int>* mutable_errors();

  // @@protoc_insertion_point(class_scope:MetadataAction.CreateFileOutput)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> errors_;
  bool success_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_CreateFileOutput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_EraseInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.EraseInput) */ {
 public:
  MetadataAction_EraseInput();
  virtual ~MetadataAction_EraseInput();

  MetadataAction_EraseInput(const MetadataAction_EraseInput& from);

  inline MetadataAction_EraseInput& operator=(const MetadataAction_EraseInput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_EraseInput& default_instance();

  void Swap(MetadataAction_EraseInput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_EraseInput* New() const { return New(NULL); }

  MetadataAction_EraseInput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_EraseInput& from);
  void MergeFrom(const MetadataAction_EraseInput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_EraseInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional .Permissions permissions = 2;
  bool has_permissions() const;
  void clear_permissions();
  static const int kPermissionsFieldNumber = 2;
  const ::Permissions& permissions() const;
  ::Permissions* mutable_permissions();
  ::Permissions* release_permissions();
  void set_allocated_permissions(::Permissions* permissions);

  // @@protoc_insertion_point(class_scope:MetadataAction.EraseInput)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_permissions();
  inline void clear_has_permissions();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::Permissions* permissions_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_EraseInput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_EraseOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.EraseOutput) */ {
 public:
  MetadataAction_EraseOutput();
  virtual ~MetadataAction_EraseOutput();

  MetadataAction_EraseOutput(const MetadataAction_EraseOutput& from);

  inline MetadataAction_EraseOutput& operator=(const MetadataAction_EraseOutput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_EraseOutput& default_instance();

  void Swap(MetadataAction_EraseOutput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_EraseOutput* New() const { return New(NULL); }

  MetadataAction_EraseOutput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_EraseOutput& from);
  void MergeFrom(const MetadataAction_EraseOutput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_EraseOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1 [default = true];
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // repeated .MetadataAction.Error errors = 2;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 2;
  ::MetadataAction_Error errors(int index) const;
  void set_errors(int index, ::MetadataAction_Error value);
  void add_errors(::MetadataAction_Error value);
  const ::google::protobuf::RepeatedField<int>& errors() const;
  ::google::protobuf::RepeatedField<int>* mutable_errors();

  // @@protoc_insertion_point(class_scope:MetadataAction.EraseOutput)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> errors_;
  bool success_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_EraseOutput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_CopyInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.CopyInput) */ {
 public:
  MetadataAction_CopyInput();
  virtual ~MetadataAction_CopyInput();

  MetadataAction_CopyInput(const MetadataAction_CopyInput& from);

  inline MetadataAction_CopyInput& operator=(const MetadataAction_CopyInput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_CopyInput& default_instance();

  void Swap(MetadataAction_CopyInput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_CopyInput* New() const { return New(NULL); }

  MetadataAction_CopyInput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_CopyInput& from);
  void MergeFrom(const MetadataAction_CopyInput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_CopyInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string from_path = 1;
  bool has_from_path() const;
  void clear_from_path();
  static const int kFromPathFieldNumber = 1;
  const ::std::string& from_path() const;
  void set_from_path(const ::std::string& value);
  void set_from_path(const char* value);
  void set_from_path(const char* value, size_t size);
  ::std::string* mutable_from_path();
  ::std::string* release_from_path();
  void set_allocated_from_path(::std::string* from_path);

  // required string to_path = 2;
  bool has_to_path() const;
  void clear_to_path();
  static const int kToPathFieldNumber = 2;
  const ::std::string& to_path() const;
  void set_to_path(const ::std::string& value);
  void set_to_path(const char* value);
  void set_to_path(const char* value, size_t size);
  ::std::string* mutable_to_path();
  ::std::string* release_to_path();
  void set_allocated_to_path(::std::string* to_path);

  // optional .Permissions permissions = 3;
  bool has_permissions() const;
  void clear_permissions();
  static const int kPermissionsFieldNumber = 3;
  const ::Permissions& permissions() const;
  ::Permissions* mutable_permissions();
  ::Permissions* release_permissions();
  void set_allocated_permissions(::Permissions* permissions);

  // @@protoc_insertion_point(class_scope:MetadataAction.CopyInput)
 private:
  inline void set_has_from_path();
  inline void clear_has_from_path();
  inline void set_has_to_path();
  inline void clear_has_to_path();
  inline void set_has_permissions();
  inline void clear_has_permissions();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr from_path_;
  ::google::protobuf::internal::ArenaStringPtr to_path_;
  ::Permissions* permissions_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_CopyInput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_CopyOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.CopyOutput) */ {
 public:
  MetadataAction_CopyOutput();
  virtual ~MetadataAction_CopyOutput();

  MetadataAction_CopyOutput(const MetadataAction_CopyOutput& from);

  inline MetadataAction_CopyOutput& operator=(const MetadataAction_CopyOutput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_CopyOutput& default_instance();

  void Swap(MetadataAction_CopyOutput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_CopyOutput* New() const { return New(NULL); }

  MetadataAction_CopyOutput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_CopyOutput& from);
  void MergeFrom(const MetadataAction_CopyOutput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_CopyOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1 [default = true];
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // repeated .MetadataAction.Error errors = 2;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 2;
  ::MetadataAction_Error errors(int index) const;
  void set_errors(int index, ::MetadataAction_Error value);
  void add_errors(::MetadataAction_Error value);
  const ::google::protobuf::RepeatedField<int>& errors() const;
  ::google::protobuf::RepeatedField<int>* mutable_errors();

  // @@protoc_insertion_point(class_scope:MetadataAction.CopyOutput)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> errors_;
  bool success_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_CopyOutput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_RenameInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.RenameInput) */ {
 public:
  MetadataAction_RenameInput();
  virtual ~MetadataAction_RenameInput();

  MetadataAction_RenameInput(const MetadataAction_RenameInput& from);

  inline MetadataAction_RenameInput& operator=(const MetadataAction_RenameInput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_RenameInput& default_instance();

  void Swap(MetadataAction_RenameInput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_RenameInput* New() const { return New(NULL); }

  MetadataAction_RenameInput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_RenameInput& from);
  void MergeFrom(const MetadataAction_RenameInput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_RenameInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string from_path = 1;
  bool has_from_path() const;
  void clear_from_path();
  static const int kFromPathFieldNumber = 1;
  const ::std::string& from_path() const;
  void set_from_path(const ::std::string& value);
  void set_from_path(const char* value);
  void set_from_path(const char* value, size_t size);
  ::std::string* mutable_from_path();
  ::std::string* release_from_path();
  void set_allocated_from_path(::std::string* from_path);

  // required string to_path = 2;
  bool has_to_path() const;
  void clear_to_path();
  static const int kToPathFieldNumber = 2;
  const ::std::string& to_path() const;
  void set_to_path(const ::std::string& value);
  void set_to_path(const char* value);
  void set_to_path(const char* value, size_t size);
  ::std::string* mutable_to_path();
  ::std::string* release_to_path();
  void set_allocated_to_path(::std::string* to_path);

  // optional .Permissions permissions = 3;
  bool has_permissions() const;
  void clear_permissions();
  static const int kPermissionsFieldNumber = 3;
  const ::Permissions& permissions() const;
  ::Permissions* mutable_permissions();
  ::Permissions* release_permissions();
  void set_allocated_permissions(::Permissions* permissions);

  // @@protoc_insertion_point(class_scope:MetadataAction.RenameInput)
 private:
  inline void set_has_from_path();
  inline void clear_has_from_path();
  inline void set_has_to_path();
  inline void clear_has_to_path();
  inline void set_has_permissions();
  inline void clear_has_permissions();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr from_path_;
  ::google::protobuf::internal::ArenaStringPtr to_path_;
  ::Permissions* permissions_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_RenameInput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_RenameOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.RenameOutput) */ {
 public:
  MetadataAction_RenameOutput();
  virtual ~MetadataAction_RenameOutput();

  MetadataAction_RenameOutput(const MetadataAction_RenameOutput& from);

  inline MetadataAction_RenameOutput& operator=(const MetadataAction_RenameOutput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_RenameOutput& default_instance();

  void Swap(MetadataAction_RenameOutput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_RenameOutput* New() const { return New(NULL); }

  MetadataAction_RenameOutput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_RenameOutput& from);
  void MergeFrom(const MetadataAction_RenameOutput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_RenameOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1 [default = true];
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // repeated .MetadataAction.Error errors = 2;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 2;
  ::MetadataAction_Error errors(int index) const;
  void set_errors(int index, ::MetadataAction_Error value);
  void add_errors(::MetadataAction_Error value);
  const ::google::protobuf::RepeatedField<int>& errors() const;
  ::google::protobuf::RepeatedField<int>* mutable_errors();

  // @@protoc_insertion_point(class_scope:MetadataAction.RenameOutput)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> errors_;
  bool success_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_RenameOutput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_LookupInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.LookupInput) */ {
 public:
  MetadataAction_LookupInput();
  virtual ~MetadataAction_LookupInput();

  MetadataAction_LookupInput(const MetadataAction_LookupInput& from);

  inline MetadataAction_LookupInput& operator=(const MetadataAction_LookupInput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_LookupInput& default_instance();

  void Swap(MetadataAction_LookupInput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_LookupInput* New() const { return New(NULL); }

  MetadataAction_LookupInput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_LookupInput& from);
  void MergeFrom(const MetadataAction_LookupInput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_LookupInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional .Permissions permissions = 2;
  bool has_permissions() const;
  void clear_permissions();
  static const int kPermissionsFieldNumber = 2;
  const ::Permissions& permissions() const;
  ::Permissions* mutable_permissions();
  ::Permissions* release_permissions();
  void set_allocated_permissions(::Permissions* permissions);

  // @@protoc_insertion_point(class_scope:MetadataAction.LookupInput)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_permissions();
  inline void clear_has_permissions();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::Permissions* permissions_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_LookupInput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_LookupOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.LookupOutput) */ {
 public:
  MetadataAction_LookupOutput();
  virtual ~MetadataAction_LookupOutput();

  MetadataAction_LookupOutput(const MetadataAction_LookupOutput& from);

  inline MetadataAction_LookupOutput& operator=(const MetadataAction_LookupOutput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_LookupOutput& default_instance();

  void Swap(MetadataAction_LookupOutput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_LookupOutput* New() const { return New(NULL); }

  MetadataAction_LookupOutput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_LookupOutput& from);
  void MergeFrom(const MetadataAction_LookupOutput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_LookupOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1 [default = true];
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // repeated .MetadataAction.Error errors = 2;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 2;
  ::MetadataAction_Error errors(int index) const;
  void set_errors(int index, ::MetadataAction_Error value);
  void add_errors(::MetadataAction_Error value);
  const ::google::protobuf::RepeatedField<int>& errors() const;
  ::google::protobuf::RepeatedField<int>* mutable_errors();

  // optional .MetadataEntry entry = 3;
  bool has_entry() const;
  void clear_entry();
  static const int kEntryFieldNumber = 3;
  const ::MetadataEntry& entry() const;
  ::MetadataEntry* mutable_entry();
  ::MetadataEntry* release_entry();
  void set_allocated_entry(::MetadataEntry* entry);

  // @@protoc_insertion_point(class_scope:MetadataAction.LookupOutput)
 private:
  inline void set_has_success();
  inline void clear_has_success();
  inline void set_has_entry();
  inline void clear_has_entry();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> errors_;
  ::MetadataEntry* entry_;
  bool success_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_LookupOutput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_ResizeInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.ResizeInput) */ {
 public:
  MetadataAction_ResizeInput();
  virtual ~MetadataAction_ResizeInput();

  MetadataAction_ResizeInput(const MetadataAction_ResizeInput& from);

  inline MetadataAction_ResizeInput& operator=(const MetadataAction_ResizeInput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_ResizeInput& default_instance();

  void Swap(MetadataAction_ResizeInput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_ResizeInput* New() const { return New(NULL); }

  MetadataAction_ResizeInput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_ResizeInput& from);
  void MergeFrom(const MetadataAction_ResizeInput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_ResizeInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional .Permissions permissions = 2;
  bool has_permissions() const;
  void clear_permissions();
  static const int kPermissionsFieldNumber = 2;
  const ::Permissions& permissions() const;
  ::Permissions* mutable_permissions();
  ::Permissions* release_permissions();
  void set_allocated_permissions(::Permissions* permissions);

  // required uint64 size = 3;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::uint64 size() const;
  void set_size(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MetadataAction.ResizeInput)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_permissions();
  inline void clear_has_permissions();
  inline void set_has_size();
  inline void clear_has_size();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::Permissions* permissions_;
  ::google::protobuf::uint64 size_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_ResizeInput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_ResizeOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.ResizeOutput) */ {
 public:
  MetadataAction_ResizeOutput();
  virtual ~MetadataAction_ResizeOutput();

  MetadataAction_ResizeOutput(const MetadataAction_ResizeOutput& from);

  inline MetadataAction_ResizeOutput& operator=(const MetadataAction_ResizeOutput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_ResizeOutput& default_instance();

  void Swap(MetadataAction_ResizeOutput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_ResizeOutput* New() const { return New(NULL); }

  MetadataAction_ResizeOutput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_ResizeOutput& from);
  void MergeFrom(const MetadataAction_ResizeOutput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_ResizeOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1 [default = true];
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // repeated .MetadataAction.Error errors = 2;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 2;
  ::MetadataAction_Error errors(int index) const;
  void set_errors(int index, ::MetadataAction_Error value);
  void add_errors(::MetadataAction_Error value);
  const ::google::protobuf::RepeatedField<int>& errors() const;
  ::google::protobuf::RepeatedField<int>* mutable_errors();

  // @@protoc_insertion_point(class_scope:MetadataAction.ResizeOutput)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> errors_;
  bool success_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_ResizeOutput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_WriteInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.WriteInput) */ {
 public:
  MetadataAction_WriteInput();
  virtual ~MetadataAction_WriteInput();

  MetadataAction_WriteInput(const MetadataAction_WriteInput& from);

  inline MetadataAction_WriteInput& operator=(const MetadataAction_WriteInput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_WriteInput& default_instance();

  void Swap(MetadataAction_WriteInput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_WriteInput* New() const { return New(NULL); }

  MetadataAction_WriteInput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_WriteInput& from);
  void MergeFrom(const MetadataAction_WriteInput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_WriteInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional .Permissions permissions = 2;
  bool has_permissions() const;
  void clear_permissions();
  static const int kPermissionsFieldNumber = 2;
  const ::Permissions& permissions() const;
  ::Permissions* mutable_permissions();
  ::Permissions* release_permissions();
  void set_allocated_permissions(::Permissions* permissions);

  // required uint64 offset = 3;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::uint64 offset() const;
  void set_offset(::google::protobuf::uint64 value);

  // repeated .FilePart data = 4;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::FilePart& data(int index) const;
  ::FilePart* mutable_data(int index);
  ::FilePart* add_data();
  ::google::protobuf::RepeatedPtrField< ::FilePart >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::FilePart >&
      data() const;

  // @@protoc_insertion_point(class_scope:MetadataAction.WriteInput)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_permissions();
  inline void clear_has_permissions();
  inline void set_has_offset();
  inline void clear_has_offset();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::Permissions* permissions_;
  ::google::protobuf::uint64 offset_;
  ::google::protobuf::RepeatedPtrField< ::FilePart > data_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_WriteInput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_WriteOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.WriteOutput) */ {
 public:
  MetadataAction_WriteOutput();
  virtual ~MetadataAction_WriteOutput();

  MetadataAction_WriteOutput(const MetadataAction_WriteOutput& from);

  inline MetadataAction_WriteOutput& operator=(const MetadataAction_WriteOutput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_WriteOutput& default_instance();

  void Swap(MetadataAction_WriteOutput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_WriteOutput* New() const { return New(NULL); }

  MetadataAction_WriteOutput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_WriteOutput& from);
  void MergeFrom(const MetadataAction_WriteOutput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_WriteOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1 [default = true];
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // repeated .MetadataAction.Error errors = 2;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 2;
  ::MetadataAction_Error errors(int index) const;
  void set_errors(int index, ::MetadataAction_Error value);
  void add_errors(::MetadataAction_Error value);
  const ::google::protobuf::RepeatedField<int>& errors() const;
  ::google::protobuf::RepeatedField<int>* mutable_errors();

  // @@protoc_insertion_point(class_scope:MetadataAction.WriteOutput)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> errors_;
  bool success_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_WriteOutput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_AppendInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.AppendInput) */ {
 public:
  MetadataAction_AppendInput();
  virtual ~MetadataAction_AppendInput();

  MetadataAction_AppendInput(const MetadataAction_AppendInput& from);

  inline MetadataAction_AppendInput& operator=(const MetadataAction_AppendInput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_AppendInput& default_instance();

  void Swap(MetadataAction_AppendInput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_AppendInput* New() const { return New(NULL); }

  MetadataAction_AppendInput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_AppendInput& from);
  void MergeFrom(const MetadataAction_AppendInput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_AppendInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional .Permissions permissions = 2;
  bool has_permissions() const;
  void clear_permissions();
  static const int kPermissionsFieldNumber = 2;
  const ::Permissions& permissions() const;
  ::Permissions* mutable_permissions();
  ::Permissions* release_permissions();
  void set_allocated_permissions(::Permissions* permissions);

  // repeated .FilePart data = 3;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::FilePart& data(int index) const;
  ::FilePart* mutable_data(int index);
  ::FilePart* add_data();
  ::google::protobuf::RepeatedPtrField< ::FilePart >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::FilePart >&
      data() const;

  // @@protoc_insertion_point(class_scope:MetadataAction.AppendInput)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_permissions();
  inline void clear_has_permissions();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::Permissions* permissions_;
  ::google::protobuf::RepeatedPtrField< ::FilePart > data_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_AppendInput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_AppendOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.AppendOutput) */ {
 public:
  MetadataAction_AppendOutput();
  virtual ~MetadataAction_AppendOutput();

  MetadataAction_AppendOutput(const MetadataAction_AppendOutput& from);

  inline MetadataAction_AppendOutput& operator=(const MetadataAction_AppendOutput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_AppendOutput& default_instance();

  void Swap(MetadataAction_AppendOutput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_AppendOutput* New() const { return New(NULL); }

  MetadataAction_AppendOutput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_AppendOutput& from);
  void MergeFrom(const MetadataAction_AppendOutput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_AppendOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1 [default = true];
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // repeated .MetadataAction.Error errors = 2;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 2;
  ::MetadataAction_Error errors(int index) const;
  void set_errors(int index, ::MetadataAction_Error value);
  void add_errors(::MetadataAction_Error value);
  const ::google::protobuf::RepeatedField<int>& errors() const;
  ::google::protobuf::RepeatedField<int>* mutable_errors();

  // @@protoc_insertion_point(class_scope:MetadataAction.AppendOutput)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> errors_;
  bool success_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_AppendOutput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_ChangePermissionsInput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.ChangePermissionsInput) */ {
 public:
  MetadataAction_ChangePermissionsInput();
  virtual ~MetadataAction_ChangePermissionsInput();

  MetadataAction_ChangePermissionsInput(const MetadataAction_ChangePermissionsInput& from);

  inline MetadataAction_ChangePermissionsInput& operator=(const MetadataAction_ChangePermissionsInput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_ChangePermissionsInput& default_instance();

  void Swap(MetadataAction_ChangePermissionsInput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_ChangePermissionsInput* New() const { return New(NULL); }

  MetadataAction_ChangePermissionsInput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_ChangePermissionsInput& from);
  void MergeFrom(const MetadataAction_ChangePermissionsInput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_ChangePermissionsInput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional .Permissions permissions = 2;
  bool has_permissions() const;
  void clear_permissions();
  static const int kPermissionsFieldNumber = 2;
  const ::Permissions& permissions() const;
  ::Permissions* mutable_permissions();
  ::Permissions* release_permissions();
  void set_allocated_permissions(::Permissions* permissions);

  // required .Permissions new_permissions = 3;
  bool has_new_permissions() const;
  void clear_new_permissions();
  static const int kNewPermissionsFieldNumber = 3;
  const ::Permissions& new_permissions() const;
  ::Permissions* mutable_new_permissions();
  ::Permissions* release_new_permissions();
  void set_allocated_new_permissions(::Permissions* new_permissions);

  // @@protoc_insertion_point(class_scope:MetadataAction.ChangePermissionsInput)
 private:
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_permissions();
  inline void clear_has_permissions();
  inline void set_has_new_permissions();
  inline void clear_has_new_permissions();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::Permissions* permissions_;
  ::Permissions* new_permissions_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_ChangePermissionsInput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction_ChangePermissionsOutput : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction.ChangePermissionsOutput) */ {
 public:
  MetadataAction_ChangePermissionsOutput();
  virtual ~MetadataAction_ChangePermissionsOutput();

  MetadataAction_ChangePermissionsOutput(const MetadataAction_ChangePermissionsOutput& from);

  inline MetadataAction_ChangePermissionsOutput& operator=(const MetadataAction_ChangePermissionsOutput& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction_ChangePermissionsOutput& default_instance();

  void Swap(MetadataAction_ChangePermissionsOutput* other);

  // implements Message ----------------------------------------------

  inline MetadataAction_ChangePermissionsOutput* New() const { return New(NULL); }

  MetadataAction_ChangePermissionsOutput* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction_ChangePermissionsOutput& from);
  void MergeFrom(const MetadataAction_ChangePermissionsOutput& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction_ChangePermissionsOutput* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1 [default = true];
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // repeated .MetadataAction.Error errors = 2;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 2;
  ::MetadataAction_Error errors(int index) const;
  void set_errors(int index, ::MetadataAction_Error value);
  void add_errors(::MetadataAction_Error value);
  const ::google::protobuf::RepeatedField<int>& errors() const;
  ::google::protobuf::RepeatedField<int>* mutable_errors();

  // @@protoc_insertion_point(class_scope:MetadataAction.ChangePermissionsOutput)
 private:
  inline void set_has_success();
  inline void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> errors_;
  bool success_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction_ChangePermissionsOutput* default_instance_;
};
// -------------------------------------------------------------------

class MetadataAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MetadataAction) */ {
 public:
  MetadataAction();
  virtual ~MetadataAction();

  MetadataAction(const MetadataAction& from);

  inline MetadataAction& operator=(const MetadataAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MetadataAction& default_instance();

  void Swap(MetadataAction* other);

  // implements Message ----------------------------------------------

  inline MetadataAction* New() const { return New(NULL); }

  MetadataAction* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MetadataAction& from);
  void MergeFrom(const MetadataAction& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MetadataAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MetadataAction_CreateFileInput CreateFileInput;
  typedef MetadataAction_CreateFileOutput CreateFileOutput;
  typedef MetadataAction_EraseInput EraseInput;
  typedef MetadataAction_EraseOutput EraseOutput;
  typedef MetadataAction_CopyInput CopyInput;
  typedef MetadataAction_CopyOutput CopyOutput;
  typedef MetadataAction_RenameInput RenameInput;
  typedef MetadataAction_RenameOutput RenameOutput;
  typedef MetadataAction_LookupInput LookupInput;
  typedef MetadataAction_LookupOutput LookupOutput;
  typedef MetadataAction_ResizeInput ResizeInput;
  typedef MetadataAction_ResizeOutput ResizeOutput;
  typedef MetadataAction_WriteInput WriteInput;
  typedef MetadataAction_WriteOutput WriteOutput;
  typedef MetadataAction_AppendInput AppendInput;
  typedef MetadataAction_AppendOutput AppendOutput;
  typedef MetadataAction_ChangePermissionsInput ChangePermissionsInput;
  typedef MetadataAction_ChangePermissionsOutput ChangePermissionsOutput;

  typedef MetadataAction_Type Type;
  static const Type CREATE_FILE =
    MetadataAction_Type_CREATE_FILE;
  static const Type ERASE =
    MetadataAction_Type_ERASE;
  static const Type COPY =
    MetadataAction_Type_COPY;
  static const Type RENAME =
    MetadataAction_Type_RENAME;
  static const Type LOOKUP =
    MetadataAction_Type_LOOKUP;
  static const Type RESIZE =
    MetadataAction_Type_RESIZE;
  static const Type WRITE =
    MetadataAction_Type_WRITE;
  static const Type APPEND =
    MetadataAction_Type_APPEND;
  static const Type CHANGE_PERMISSIONS =
    MetadataAction_Type_CHANGE_PERMISSIONS;
  static inline bool Type_IsValid(int value) {
    return MetadataAction_Type_IsValid(value);
  }
  static const Type Type_MIN =
    MetadataAction_Type_Type_MIN;
  static const Type Type_MAX =
    MetadataAction_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    MetadataAction_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return MetadataAction_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return MetadataAction_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return MetadataAction_Type_Parse(name, value);
  }

  typedef MetadataAction_Error Error;
  static const Error FileDoesNotExist =
    MetadataAction_Error_FileDoesNotExist;
  static const Error FileAlreadyExists =
    MetadataAction_Error_FileAlreadyExists;
  static const Error WrongFileType =
    MetadataAction_Error_WrongFileType;
  static const Error DirectoryNotEmpty =
    MetadataAction_Error_DirectoryNotEmpty;
  static const Error PermissionDenied =
    MetadataAction_Error_PermissionDenied;
  static inline bool Error_IsValid(int value) {
    return MetadataAction_Error_IsValid(value);
  }
  static const Error Error_MIN =
    MetadataAction_Error_Error_MIN;
  static const Error Error_MAX =
    MetadataAction_Error_Error_MAX;
  static const int Error_ARRAYSIZE =
    MetadataAction_Error_Error_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Error_descriptor() {
    return MetadataAction_Error_descriptor();
  }
  static inline const ::std::string& Error_Name(Error value) {
    return MetadataAction_Error_Name(value);
  }
  static inline bool Error_Parse(const ::std::string& name,
      Error* value) {
    return MetadataAction_Error_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:MetadataAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_metadata_2eproto();
  friend void protobuf_AssignDesc_metadata_2eproto();
  friend void protobuf_ShutdownFile_metadata_2eproto();

  void InitAsDefaultInstance();
  static MetadataAction* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Permissions

// optional uint64 owner = 2 [default = 0];
inline bool Permissions::has_owner() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Permissions::set_has_owner() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Permissions::clear_has_owner() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Permissions::clear_owner() {
  owner_ = GOOGLE_ULONGLONG(0);
  clear_has_owner();
}
inline ::google::protobuf::uint64 Permissions::owner() const {
  // @@protoc_insertion_point(field_get:Permissions.owner)
  return owner_;
}
inline void Permissions::set_owner(::google::protobuf::uint64 value) {
  set_has_owner();
  owner_ = value;
  // @@protoc_insertion_point(field_set:Permissions.owner)
}

// optional uint64 group = 3 [default = 0];
inline bool Permissions::has_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Permissions::set_has_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Permissions::clear_has_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Permissions::clear_group() {
  group_ = GOOGLE_ULONGLONG(0);
  clear_has_group();
}
inline ::google::protobuf::uint64 Permissions::group() const {
  // @@protoc_insertion_point(field_get:Permissions.group)
  return group_;
}
inline void Permissions::set_group(::google::protobuf::uint64 value) {
  set_has_group();
  group_ = value;
  // @@protoc_insertion_point(field_set:Permissions.group)
}

// optional string mode = 4 [default = "777"];
inline bool Permissions::has_mode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Permissions::set_has_mode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Permissions::clear_has_mode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Permissions::clear_mode() {
  mode_.ClearToDefaultNoArena(_default_mode_);
  clear_has_mode();
}
inline const ::std::string& Permissions::mode() const {
  // @@protoc_insertion_point(field_get:Permissions.mode)
  return mode_.GetNoArena(_default_mode_);
}
inline void Permissions::set_mode(const ::std::string& value) {
  set_has_mode();
  mode_.SetNoArena(_default_mode_, value);
  // @@protoc_insertion_point(field_set:Permissions.mode)
}
inline void Permissions::set_mode(const char* value) {
  set_has_mode();
  mode_.SetNoArena(_default_mode_, ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Permissions.mode)
}
inline void Permissions::set_mode(const char* value, size_t size) {
  set_has_mode();
  mode_.SetNoArena(_default_mode_,
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Permissions.mode)
}
inline ::std::string* Permissions::mutable_mode() {
  set_has_mode();
  // @@protoc_insertion_point(field_mutable:Permissions.mode)
  return mode_.MutableNoArena(_default_mode_);
}
inline ::std::string* Permissions::release_mode() {
  // @@protoc_insertion_point(field_release:Permissions.mode)
  clear_has_mode();
  return mode_.ReleaseNoArena(_default_mode_);
}
inline void Permissions::set_allocated_mode(::std::string* mode) {
  if (mode != NULL) {
    set_has_mode();
  } else {
    clear_has_mode();
  }
  mode_.SetAllocatedNoArena(_default_mode_, mode);
  // @@protoc_insertion_point(field_set_allocated:Permissions.mode)
}

// -------------------------------------------------------------------

// FilePart

// required uint64 length = 1;
inline bool FilePart::has_length() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FilePart::set_has_length() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FilePart::clear_has_length() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FilePart::clear_length() {
  length_ = GOOGLE_ULONGLONG(0);
  clear_has_length();
}
inline ::google::protobuf::uint64 FilePart::length() const {
  // @@protoc_insertion_point(field_get:FilePart.length)
  return length_;
}
inline void FilePart::set_length(::google::protobuf::uint64 value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:FilePart.length)
}

// optional uint64 block_id = 2 [default = 0];
inline bool FilePart::has_block_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FilePart::set_has_block_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FilePart::clear_has_block_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FilePart::clear_block_id() {
  block_id_ = GOOGLE_ULONGLONG(0);
  clear_has_block_id();
}
inline ::google::protobuf::uint64 FilePart::block_id() const {
  // @@protoc_insertion_point(field_get:FilePart.block_id)
  return block_id_;
}
inline void FilePart::set_block_id(::google::protobuf::uint64 value) {
  set_has_block_id();
  block_id_ = value;
  // @@protoc_insertion_point(field_set:FilePart.block_id)
}

// optional uint64 block_offset = 3 [default = 0];
inline bool FilePart::has_block_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FilePart::set_has_block_offset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FilePart::clear_has_block_offset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FilePart::clear_block_offset() {
  block_offset_ = GOOGLE_ULONGLONG(0);
  clear_has_block_offset();
}
inline ::google::protobuf::uint64 FilePart::block_offset() const {
  // @@protoc_insertion_point(field_get:FilePart.block_offset)
  return block_offset_;
}
inline void FilePart::set_block_offset(::google::protobuf::uint64 value) {
  set_has_block_offset();
  block_offset_ = value;
  // @@protoc_insertion_point(field_set:FilePart.block_offset)
}

// -------------------------------------------------------------------

// MetadataEntry

// optional bool locked = 1 [default = false];
inline bool MetadataEntry::has_locked() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataEntry::set_has_locked() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataEntry::clear_has_locked() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataEntry::clear_locked() {
  locked_ = false;
  clear_has_locked();
}
inline bool MetadataEntry::locked() const {
  // @@protoc_insertion_point(field_get:MetadataEntry.locked)
  return locked_;
}
inline void MetadataEntry::set_locked(bool value) {
  set_has_locked();
  locked_ = value;
  // @@protoc_insertion_point(field_set:MetadataEntry.locked)
}

// optional .Permissions permissions = 2;
inline bool MetadataEntry::has_permissions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MetadataEntry::set_has_permissions() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MetadataEntry::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MetadataEntry::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
inline const ::Permissions& MetadataEntry::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataEntry.permissions)
  return permissions_ != NULL ? *permissions_ : *default_instance_->permissions_;
}
inline ::Permissions* MetadataEntry::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataEntry.permissions)
  return permissions_;
}
inline ::Permissions* MetadataEntry::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataEntry.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
inline void MetadataEntry::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataEntry.permissions)
}

// required .FileType type = 5 [default = DATA];
inline bool MetadataEntry::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MetadataEntry::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MetadataEntry::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MetadataEntry::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::FileType MetadataEntry::type() const {
  // @@protoc_insertion_point(field_get:MetadataEntry.type)
  return static_cast< ::FileType >(type_);
}
inline void MetadataEntry::set_type(::FileType value) {
  assert(::FileType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MetadataEntry.type)
}

// repeated .FilePart file_parts = 6;
inline int MetadataEntry::file_parts_size() const {
  return file_parts_.size();
}
inline void MetadataEntry::clear_file_parts() {
  file_parts_.Clear();
}
inline const ::FilePart& MetadataEntry::file_parts(int index) const {
  // @@protoc_insertion_point(field_get:MetadataEntry.file_parts)
  return file_parts_.Get(index);
}
inline ::FilePart* MetadataEntry::mutable_file_parts(int index) {
  // @@protoc_insertion_point(field_mutable:MetadataEntry.file_parts)
  return file_parts_.Mutable(index);
}
inline ::FilePart* MetadataEntry::add_file_parts() {
  // @@protoc_insertion_point(field_add:MetadataEntry.file_parts)
  return file_parts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::FilePart >*
MetadataEntry::mutable_file_parts() {
  // @@protoc_insertion_point(field_mutable_list:MetadataEntry.file_parts)
  return &file_parts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::FilePart >&
MetadataEntry::file_parts() const {
  // @@protoc_insertion_point(field_list:MetadataEntry.file_parts)
  return file_parts_;
}

// repeated string dir_contents = 7;
inline int MetadataEntry::dir_contents_size() const {
  return dir_contents_.size();
}
inline void MetadataEntry::clear_dir_contents() {
  dir_contents_.Clear();
}
inline const ::std::string& MetadataEntry::dir_contents(int index) const {
  // @@protoc_insertion_point(field_get:MetadataEntry.dir_contents)
  return dir_contents_.Get(index);
}
inline ::std::string* MetadataEntry::mutable_dir_contents(int index) {
  // @@protoc_insertion_point(field_mutable:MetadataEntry.dir_contents)
  return dir_contents_.Mutable(index);
}
inline void MetadataEntry::set_dir_contents(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MetadataEntry.dir_contents)
  dir_contents_.Mutable(index)->assign(value);
}
inline void MetadataEntry::set_dir_contents(int index, const char* value) {
  dir_contents_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MetadataEntry.dir_contents)
}
inline void MetadataEntry::set_dir_contents(int index, const char* value, size_t size) {
  dir_contents_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MetadataEntry.dir_contents)
}
inline ::std::string* MetadataEntry::add_dir_contents() {
  // @@protoc_insertion_point(field_add_mutable:MetadataEntry.dir_contents)
  return dir_contents_.Add();
}
inline void MetadataEntry::add_dir_contents(const ::std::string& value) {
  dir_contents_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MetadataEntry.dir_contents)
}
inline void MetadataEntry::add_dir_contents(const char* value) {
  dir_contents_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MetadataEntry.dir_contents)
}
inline void MetadataEntry::add_dir_contents(const char* value, size_t size) {
  dir_contents_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MetadataEntry.dir_contents)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MetadataEntry::dir_contents() const {
  // @@protoc_insertion_point(field_list:MetadataEntry.dir_contents)
  return dir_contents_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MetadataEntry::mutable_dir_contents() {
  // @@protoc_insertion_point(field_mutable_list:MetadataEntry.dir_contents)
  return &dir_contents_;
}

// -------------------------------------------------------------------

// MetadataAction_CreateFileInput

// required string path = 1;
inline bool MetadataAction_CreateFileInput::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_CreateFileInput::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_CreateFileInput::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_CreateFileInput::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& MetadataAction_CreateFileInput::path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.CreateFileInput.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_CreateFileInput::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.CreateFileInput.path)
}
inline void MetadataAction_CreateFileInput::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.CreateFileInput.path)
}
inline void MetadataAction_CreateFileInput::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.CreateFileInput.path)
}
inline ::std::string* MetadataAction_CreateFileInput::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.CreateFileInput.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetadataAction_CreateFileInput::release_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.CreateFileInput.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_CreateFileInput::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.CreateFileInput.path)
}

// optional .Permissions permissions = 2;
inline bool MetadataAction_CreateFileInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MetadataAction_CreateFileInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MetadataAction_CreateFileInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MetadataAction_CreateFileInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
inline const ::Permissions& MetadataAction_CreateFileInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.CreateFileInput.permissions)
  return permissions_ != NULL ? *permissions_ : *default_instance_->permissions_;
}
inline ::Permissions* MetadataAction_CreateFileInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.CreateFileInput.permissions)
  return permissions_;
}
inline ::Permissions* MetadataAction_CreateFileInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.CreateFileInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
inline void MetadataAction_CreateFileInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.CreateFileInput.permissions)
}

// required .FileType type = 3 [default = DATA];
inline bool MetadataAction_CreateFileInput::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MetadataAction_CreateFileInput::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MetadataAction_CreateFileInput::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MetadataAction_CreateFileInput::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::FileType MetadataAction_CreateFileInput::type() const {
  // @@protoc_insertion_point(field_get:MetadataAction.CreateFileInput.type)
  return static_cast< ::FileType >(type_);
}
inline void MetadataAction_CreateFileInput::set_type(::FileType value) {
  assert(::FileType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.CreateFileInput.type)
}

// -------------------------------------------------------------------

// MetadataAction_CreateFileOutput

// optional bool success = 1 [default = true];
inline bool MetadataAction_CreateFileOutput::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_CreateFileOutput::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_CreateFileOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_CreateFileOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
inline bool MetadataAction_CreateFileOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.CreateFileOutput.success)
  return success_;
}
inline void MetadataAction_CreateFileOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.CreateFileOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
inline int MetadataAction_CreateFileOutput::errors_size() const {
  return errors_.size();
}
inline void MetadataAction_CreateFileOutput::clear_errors() {
  errors_.Clear();
}
inline ::MetadataAction_Error MetadataAction_CreateFileOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.CreateFileOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
inline void MetadataAction_CreateFileOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.CreateFileOutput.errors)
}
inline void MetadataAction_CreateFileOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.CreateFileOutput.errors)
}
inline const ::google::protobuf::RepeatedField<int>&
MetadataAction_CreateFileOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.CreateFileOutput.errors)
  return errors_;
}
inline ::google::protobuf::RepeatedField<int>*
MetadataAction_CreateFileOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.CreateFileOutput.errors)
  return &errors_;
}

// -------------------------------------------------------------------

// MetadataAction_EraseInput

// required string path = 1;
inline bool MetadataAction_EraseInput::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_EraseInput::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_EraseInput::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_EraseInput::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& MetadataAction_EraseInput::path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.EraseInput.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_EraseInput::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.EraseInput.path)
}
inline void MetadataAction_EraseInput::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.EraseInput.path)
}
inline void MetadataAction_EraseInput::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.EraseInput.path)
}
inline ::std::string* MetadataAction_EraseInput::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.EraseInput.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetadataAction_EraseInput::release_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.EraseInput.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_EraseInput::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.EraseInput.path)
}

// optional .Permissions permissions = 2;
inline bool MetadataAction_EraseInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MetadataAction_EraseInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MetadataAction_EraseInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MetadataAction_EraseInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
inline const ::Permissions& MetadataAction_EraseInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.EraseInput.permissions)
  return permissions_ != NULL ? *permissions_ : *default_instance_->permissions_;
}
inline ::Permissions* MetadataAction_EraseInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.EraseInput.permissions)
  return permissions_;
}
inline ::Permissions* MetadataAction_EraseInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.EraseInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
inline void MetadataAction_EraseInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.EraseInput.permissions)
}

// -------------------------------------------------------------------

// MetadataAction_EraseOutput

// optional bool success = 1 [default = true];
inline bool MetadataAction_EraseOutput::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_EraseOutput::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_EraseOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_EraseOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
inline bool MetadataAction_EraseOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.EraseOutput.success)
  return success_;
}
inline void MetadataAction_EraseOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.EraseOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
inline int MetadataAction_EraseOutput::errors_size() const {
  return errors_.size();
}
inline void MetadataAction_EraseOutput::clear_errors() {
  errors_.Clear();
}
inline ::MetadataAction_Error MetadataAction_EraseOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.EraseOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
inline void MetadataAction_EraseOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.EraseOutput.errors)
}
inline void MetadataAction_EraseOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.EraseOutput.errors)
}
inline const ::google::protobuf::RepeatedField<int>&
MetadataAction_EraseOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.EraseOutput.errors)
  return errors_;
}
inline ::google::protobuf::RepeatedField<int>*
MetadataAction_EraseOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.EraseOutput.errors)
  return &errors_;
}

// -------------------------------------------------------------------

// MetadataAction_CopyInput

// required string from_path = 1;
inline bool MetadataAction_CopyInput::has_from_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_CopyInput::set_has_from_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_CopyInput::clear_has_from_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_CopyInput::clear_from_path() {
  from_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_path();
}
inline const ::std::string& MetadataAction_CopyInput::from_path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.CopyInput.from_path)
  return from_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_CopyInput::set_from_path(const ::std::string& value) {
  set_has_from_path();
  from_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.CopyInput.from_path)
}
inline void MetadataAction_CopyInput::set_from_path(const char* value) {
  set_has_from_path();
  from_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.CopyInput.from_path)
}
inline void MetadataAction_CopyInput::set_from_path(const char* value, size_t size) {
  set_has_from_path();
  from_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.CopyInput.from_path)
}
inline ::std::string* MetadataAction_CopyInput::mutable_from_path() {
  set_has_from_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.CopyInput.from_path)
  return from_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetadataAction_CopyInput::release_from_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.CopyInput.from_path)
  clear_has_from_path();
  return from_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_CopyInput::set_allocated_from_path(::std::string* from_path) {
  if (from_path != NULL) {
    set_has_from_path();
  } else {
    clear_has_from_path();
  }
  from_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.CopyInput.from_path)
}

// required string to_path = 2;
inline bool MetadataAction_CopyInput::has_to_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MetadataAction_CopyInput::set_has_to_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MetadataAction_CopyInput::clear_has_to_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MetadataAction_CopyInput::clear_to_path() {
  to_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to_path();
}
inline const ::std::string& MetadataAction_CopyInput::to_path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.CopyInput.to_path)
  return to_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_CopyInput::set_to_path(const ::std::string& value) {
  set_has_to_path();
  to_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.CopyInput.to_path)
}
inline void MetadataAction_CopyInput::set_to_path(const char* value) {
  set_has_to_path();
  to_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.CopyInput.to_path)
}
inline void MetadataAction_CopyInput::set_to_path(const char* value, size_t size) {
  set_has_to_path();
  to_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.CopyInput.to_path)
}
inline ::std::string* MetadataAction_CopyInput::mutable_to_path() {
  set_has_to_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.CopyInput.to_path)
  return to_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetadataAction_CopyInput::release_to_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.CopyInput.to_path)
  clear_has_to_path();
  return to_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_CopyInput::set_allocated_to_path(::std::string* to_path) {
  if (to_path != NULL) {
    set_has_to_path();
  } else {
    clear_has_to_path();
  }
  to_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.CopyInput.to_path)
}

// optional .Permissions permissions = 3;
inline bool MetadataAction_CopyInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MetadataAction_CopyInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MetadataAction_CopyInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MetadataAction_CopyInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
inline const ::Permissions& MetadataAction_CopyInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.CopyInput.permissions)
  return permissions_ != NULL ? *permissions_ : *default_instance_->permissions_;
}
inline ::Permissions* MetadataAction_CopyInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.CopyInput.permissions)
  return permissions_;
}
inline ::Permissions* MetadataAction_CopyInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.CopyInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
inline void MetadataAction_CopyInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.CopyInput.permissions)
}

// -------------------------------------------------------------------

// MetadataAction_CopyOutput

// optional bool success = 1 [default = true];
inline bool MetadataAction_CopyOutput::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_CopyOutput::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_CopyOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_CopyOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
inline bool MetadataAction_CopyOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.CopyOutput.success)
  return success_;
}
inline void MetadataAction_CopyOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.CopyOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
inline int MetadataAction_CopyOutput::errors_size() const {
  return errors_.size();
}
inline void MetadataAction_CopyOutput::clear_errors() {
  errors_.Clear();
}
inline ::MetadataAction_Error MetadataAction_CopyOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.CopyOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
inline void MetadataAction_CopyOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.CopyOutput.errors)
}
inline void MetadataAction_CopyOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.CopyOutput.errors)
}
inline const ::google::protobuf::RepeatedField<int>&
MetadataAction_CopyOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.CopyOutput.errors)
  return errors_;
}
inline ::google::protobuf::RepeatedField<int>*
MetadataAction_CopyOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.CopyOutput.errors)
  return &errors_;
}

// -------------------------------------------------------------------

// MetadataAction_RenameInput

// required string from_path = 1;
inline bool MetadataAction_RenameInput::has_from_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_RenameInput::set_has_from_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_RenameInput::clear_has_from_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_RenameInput::clear_from_path() {
  from_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_path();
}
inline const ::std::string& MetadataAction_RenameInput::from_path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.RenameInput.from_path)
  return from_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_RenameInput::set_from_path(const ::std::string& value) {
  set_has_from_path();
  from_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.RenameInput.from_path)
}
inline void MetadataAction_RenameInput::set_from_path(const char* value) {
  set_has_from_path();
  from_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.RenameInput.from_path)
}
inline void MetadataAction_RenameInput::set_from_path(const char* value, size_t size) {
  set_has_from_path();
  from_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.RenameInput.from_path)
}
inline ::std::string* MetadataAction_RenameInput::mutable_from_path() {
  set_has_from_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.RenameInput.from_path)
  return from_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetadataAction_RenameInput::release_from_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.RenameInput.from_path)
  clear_has_from_path();
  return from_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_RenameInput::set_allocated_from_path(::std::string* from_path) {
  if (from_path != NULL) {
    set_has_from_path();
  } else {
    clear_has_from_path();
  }
  from_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.RenameInput.from_path)
}

// required string to_path = 2;
inline bool MetadataAction_RenameInput::has_to_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MetadataAction_RenameInput::set_has_to_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MetadataAction_RenameInput::clear_has_to_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MetadataAction_RenameInput::clear_to_path() {
  to_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to_path();
}
inline const ::std::string& MetadataAction_RenameInput::to_path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.RenameInput.to_path)
  return to_path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_RenameInput::set_to_path(const ::std::string& value) {
  set_has_to_path();
  to_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.RenameInput.to_path)
}
inline void MetadataAction_RenameInput::set_to_path(const char* value) {
  set_has_to_path();
  to_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.RenameInput.to_path)
}
inline void MetadataAction_RenameInput::set_to_path(const char* value, size_t size) {
  set_has_to_path();
  to_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.RenameInput.to_path)
}
inline ::std::string* MetadataAction_RenameInput::mutable_to_path() {
  set_has_to_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.RenameInput.to_path)
  return to_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetadataAction_RenameInput::release_to_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.RenameInput.to_path)
  clear_has_to_path();
  return to_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_RenameInput::set_allocated_to_path(::std::string* to_path) {
  if (to_path != NULL) {
    set_has_to_path();
  } else {
    clear_has_to_path();
  }
  to_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.RenameInput.to_path)
}

// optional .Permissions permissions = 3;
inline bool MetadataAction_RenameInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MetadataAction_RenameInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MetadataAction_RenameInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MetadataAction_RenameInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
inline const ::Permissions& MetadataAction_RenameInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.RenameInput.permissions)
  return permissions_ != NULL ? *permissions_ : *default_instance_->permissions_;
}
inline ::Permissions* MetadataAction_RenameInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.RenameInput.permissions)
  return permissions_;
}
inline ::Permissions* MetadataAction_RenameInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.RenameInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
inline void MetadataAction_RenameInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.RenameInput.permissions)
}

// -------------------------------------------------------------------

// MetadataAction_RenameOutput

// optional bool success = 1 [default = true];
inline bool MetadataAction_RenameOutput::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_RenameOutput::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_RenameOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_RenameOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
inline bool MetadataAction_RenameOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.RenameOutput.success)
  return success_;
}
inline void MetadataAction_RenameOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.RenameOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
inline int MetadataAction_RenameOutput::errors_size() const {
  return errors_.size();
}
inline void MetadataAction_RenameOutput::clear_errors() {
  errors_.Clear();
}
inline ::MetadataAction_Error MetadataAction_RenameOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.RenameOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
inline void MetadataAction_RenameOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.RenameOutput.errors)
}
inline void MetadataAction_RenameOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.RenameOutput.errors)
}
inline const ::google::protobuf::RepeatedField<int>&
MetadataAction_RenameOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.RenameOutput.errors)
  return errors_;
}
inline ::google::protobuf::RepeatedField<int>*
MetadataAction_RenameOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.RenameOutput.errors)
  return &errors_;
}

// -------------------------------------------------------------------

// MetadataAction_LookupInput

// required string path = 1;
inline bool MetadataAction_LookupInput::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_LookupInput::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_LookupInput::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_LookupInput::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& MetadataAction_LookupInput::path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.LookupInput.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_LookupInput::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.LookupInput.path)
}
inline void MetadataAction_LookupInput::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.LookupInput.path)
}
inline void MetadataAction_LookupInput::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.LookupInput.path)
}
inline ::std::string* MetadataAction_LookupInput::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.LookupInput.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetadataAction_LookupInput::release_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.LookupInput.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_LookupInput::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.LookupInput.path)
}

// optional .Permissions permissions = 2;
inline bool MetadataAction_LookupInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MetadataAction_LookupInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MetadataAction_LookupInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MetadataAction_LookupInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
inline const ::Permissions& MetadataAction_LookupInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.LookupInput.permissions)
  return permissions_ != NULL ? *permissions_ : *default_instance_->permissions_;
}
inline ::Permissions* MetadataAction_LookupInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.LookupInput.permissions)
  return permissions_;
}
inline ::Permissions* MetadataAction_LookupInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.LookupInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
inline void MetadataAction_LookupInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.LookupInput.permissions)
}

// -------------------------------------------------------------------

// MetadataAction_LookupOutput

// optional bool success = 1 [default = true];
inline bool MetadataAction_LookupOutput::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_LookupOutput::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_LookupOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_LookupOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
inline bool MetadataAction_LookupOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.LookupOutput.success)
  return success_;
}
inline void MetadataAction_LookupOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.LookupOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
inline int MetadataAction_LookupOutput::errors_size() const {
  return errors_.size();
}
inline void MetadataAction_LookupOutput::clear_errors() {
  errors_.Clear();
}
inline ::MetadataAction_Error MetadataAction_LookupOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.LookupOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
inline void MetadataAction_LookupOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.LookupOutput.errors)
}
inline void MetadataAction_LookupOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.LookupOutput.errors)
}
inline const ::google::protobuf::RepeatedField<int>&
MetadataAction_LookupOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.LookupOutput.errors)
  return errors_;
}
inline ::google::protobuf::RepeatedField<int>*
MetadataAction_LookupOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.LookupOutput.errors)
  return &errors_;
}

// optional .MetadataEntry entry = 3;
inline bool MetadataAction_LookupOutput::has_entry() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MetadataAction_LookupOutput::set_has_entry() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MetadataAction_LookupOutput::clear_has_entry() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MetadataAction_LookupOutput::clear_entry() {
  if (entry_ != NULL) entry_->::MetadataEntry::Clear();
  clear_has_entry();
}
inline const ::MetadataEntry& MetadataAction_LookupOutput::entry() const {
  // @@protoc_insertion_point(field_get:MetadataAction.LookupOutput.entry)
  return entry_ != NULL ? *entry_ : *default_instance_->entry_;
}
inline ::MetadataEntry* MetadataAction_LookupOutput::mutable_entry() {
  set_has_entry();
  if (entry_ == NULL) {
    entry_ = new ::MetadataEntry;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.LookupOutput.entry)
  return entry_;
}
inline ::MetadataEntry* MetadataAction_LookupOutput::release_entry() {
  // @@protoc_insertion_point(field_release:MetadataAction.LookupOutput.entry)
  clear_has_entry();
  ::MetadataEntry* temp = entry_;
  entry_ = NULL;
  return temp;
}
inline void MetadataAction_LookupOutput::set_allocated_entry(::MetadataEntry* entry) {
  delete entry_;
  entry_ = entry;
  if (entry) {
    set_has_entry();
  } else {
    clear_has_entry();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.LookupOutput.entry)
}

// -------------------------------------------------------------------

// MetadataAction_ResizeInput

// required string path = 1;
inline bool MetadataAction_ResizeInput::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_ResizeInput::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_ResizeInput::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_ResizeInput::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& MetadataAction_ResizeInput::path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.ResizeInput.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_ResizeInput::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.ResizeInput.path)
}
inline void MetadataAction_ResizeInput::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.ResizeInput.path)
}
inline void MetadataAction_ResizeInput::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.ResizeInput.path)
}
inline ::std::string* MetadataAction_ResizeInput::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.ResizeInput.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetadataAction_ResizeInput::release_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.ResizeInput.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_ResizeInput::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.ResizeInput.path)
}

// optional .Permissions permissions = 2;
inline bool MetadataAction_ResizeInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MetadataAction_ResizeInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MetadataAction_ResizeInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MetadataAction_ResizeInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
inline const ::Permissions& MetadataAction_ResizeInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.ResizeInput.permissions)
  return permissions_ != NULL ? *permissions_ : *default_instance_->permissions_;
}
inline ::Permissions* MetadataAction_ResizeInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.ResizeInput.permissions)
  return permissions_;
}
inline ::Permissions* MetadataAction_ResizeInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.ResizeInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
inline void MetadataAction_ResizeInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.ResizeInput.permissions)
}

// required uint64 size = 3;
inline bool MetadataAction_ResizeInput::has_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MetadataAction_ResizeInput::set_has_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MetadataAction_ResizeInput::clear_has_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MetadataAction_ResizeInput::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::uint64 MetadataAction_ResizeInput::size() const {
  // @@protoc_insertion_point(field_get:MetadataAction.ResizeInput.size)
  return size_;
}
inline void MetadataAction_ResizeInput::set_size(::google::protobuf::uint64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.ResizeInput.size)
}

// -------------------------------------------------------------------

// MetadataAction_ResizeOutput

// optional bool success = 1 [default = true];
inline bool MetadataAction_ResizeOutput::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_ResizeOutput::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_ResizeOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_ResizeOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
inline bool MetadataAction_ResizeOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.ResizeOutput.success)
  return success_;
}
inline void MetadataAction_ResizeOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.ResizeOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
inline int MetadataAction_ResizeOutput::errors_size() const {
  return errors_.size();
}
inline void MetadataAction_ResizeOutput::clear_errors() {
  errors_.Clear();
}
inline ::MetadataAction_Error MetadataAction_ResizeOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.ResizeOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
inline void MetadataAction_ResizeOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.ResizeOutput.errors)
}
inline void MetadataAction_ResizeOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.ResizeOutput.errors)
}
inline const ::google::protobuf::RepeatedField<int>&
MetadataAction_ResizeOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.ResizeOutput.errors)
  return errors_;
}
inline ::google::protobuf::RepeatedField<int>*
MetadataAction_ResizeOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.ResizeOutput.errors)
  return &errors_;
}

// -------------------------------------------------------------------

// MetadataAction_WriteInput

// required string path = 1;
inline bool MetadataAction_WriteInput::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_WriteInput::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_WriteInput::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_WriteInput::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& MetadataAction_WriteInput::path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.WriteInput.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_WriteInput::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.WriteInput.path)
}
inline void MetadataAction_WriteInput::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.WriteInput.path)
}
inline void MetadataAction_WriteInput::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.WriteInput.path)
}
inline ::std::string* MetadataAction_WriteInput::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.WriteInput.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetadataAction_WriteInput::release_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.WriteInput.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_WriteInput::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.WriteInput.path)
}

// optional .Permissions permissions = 2;
inline bool MetadataAction_WriteInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MetadataAction_WriteInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MetadataAction_WriteInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MetadataAction_WriteInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
inline const ::Permissions& MetadataAction_WriteInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.WriteInput.permissions)
  return permissions_ != NULL ? *permissions_ : *default_instance_->permissions_;
}
inline ::Permissions* MetadataAction_WriteInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.WriteInput.permissions)
  return permissions_;
}
inline ::Permissions* MetadataAction_WriteInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.WriteInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
inline void MetadataAction_WriteInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.WriteInput.permissions)
}

// required uint64 offset = 3;
inline bool MetadataAction_WriteInput::has_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MetadataAction_WriteInput::set_has_offset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MetadataAction_WriteInput::clear_has_offset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MetadataAction_WriteInput::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::uint64 MetadataAction_WriteInput::offset() const {
  // @@protoc_insertion_point(field_get:MetadataAction.WriteInput.offset)
  return offset_;
}
inline void MetadataAction_WriteInput::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.WriteInput.offset)
}

// repeated .FilePart data = 4;
inline int MetadataAction_WriteInput::data_size() const {
  return data_.size();
}
inline void MetadataAction_WriteInput::clear_data() {
  data_.Clear();
}
inline const ::FilePart& MetadataAction_WriteInput::data(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.WriteInput.data)
  return data_.Get(index);
}
inline ::FilePart* MetadataAction_WriteInput::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MetadataAction.WriteInput.data)
  return data_.Mutable(index);
}
inline ::FilePart* MetadataAction_WriteInput::add_data() {
  // @@protoc_insertion_point(field_add:MetadataAction.WriteInput.data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::FilePart >*
MetadataAction_WriteInput::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.WriteInput.data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::FilePart >&
MetadataAction_WriteInput::data() const {
  // @@protoc_insertion_point(field_list:MetadataAction.WriteInput.data)
  return data_;
}

// -------------------------------------------------------------------

// MetadataAction_WriteOutput

// optional bool success = 1 [default = true];
inline bool MetadataAction_WriteOutput::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_WriteOutput::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_WriteOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_WriteOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
inline bool MetadataAction_WriteOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.WriteOutput.success)
  return success_;
}
inline void MetadataAction_WriteOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.WriteOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
inline int MetadataAction_WriteOutput::errors_size() const {
  return errors_.size();
}
inline void MetadataAction_WriteOutput::clear_errors() {
  errors_.Clear();
}
inline ::MetadataAction_Error MetadataAction_WriteOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.WriteOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
inline void MetadataAction_WriteOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.WriteOutput.errors)
}
inline void MetadataAction_WriteOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.WriteOutput.errors)
}
inline const ::google::protobuf::RepeatedField<int>&
MetadataAction_WriteOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.WriteOutput.errors)
  return errors_;
}
inline ::google::protobuf::RepeatedField<int>*
MetadataAction_WriteOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.WriteOutput.errors)
  return &errors_;
}

// -------------------------------------------------------------------

// MetadataAction_AppendInput

// required string path = 1;
inline bool MetadataAction_AppendInput::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_AppendInput::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_AppendInput::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_AppendInput::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& MetadataAction_AppendInput::path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.AppendInput.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_AppendInput::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.AppendInput.path)
}
inline void MetadataAction_AppendInput::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.AppendInput.path)
}
inline void MetadataAction_AppendInput::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.AppendInput.path)
}
inline ::std::string* MetadataAction_AppendInput::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.AppendInput.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetadataAction_AppendInput::release_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.AppendInput.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_AppendInput::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.AppendInput.path)
}

// optional .Permissions permissions = 2;
inline bool MetadataAction_AppendInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MetadataAction_AppendInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MetadataAction_AppendInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MetadataAction_AppendInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
inline const ::Permissions& MetadataAction_AppendInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.AppendInput.permissions)
  return permissions_ != NULL ? *permissions_ : *default_instance_->permissions_;
}
inline ::Permissions* MetadataAction_AppendInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.AppendInput.permissions)
  return permissions_;
}
inline ::Permissions* MetadataAction_AppendInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.AppendInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
inline void MetadataAction_AppendInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.AppendInput.permissions)
}

// repeated .FilePart data = 3;
inline int MetadataAction_AppendInput::data_size() const {
  return data_.size();
}
inline void MetadataAction_AppendInput::clear_data() {
  data_.Clear();
}
inline const ::FilePart& MetadataAction_AppendInput::data(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.AppendInput.data)
  return data_.Get(index);
}
inline ::FilePart* MetadataAction_AppendInput::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:MetadataAction.AppendInput.data)
  return data_.Mutable(index);
}
inline ::FilePart* MetadataAction_AppendInput::add_data() {
  // @@protoc_insertion_point(field_add:MetadataAction.AppendInput.data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::FilePart >*
MetadataAction_AppendInput::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.AppendInput.data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::FilePart >&
MetadataAction_AppendInput::data() const {
  // @@protoc_insertion_point(field_list:MetadataAction.AppendInput.data)
  return data_;
}

// -------------------------------------------------------------------

// MetadataAction_AppendOutput

// optional bool success = 1 [default = true];
inline bool MetadataAction_AppendOutput::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_AppendOutput::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_AppendOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_AppendOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
inline bool MetadataAction_AppendOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.AppendOutput.success)
  return success_;
}
inline void MetadataAction_AppendOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.AppendOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
inline int MetadataAction_AppendOutput::errors_size() const {
  return errors_.size();
}
inline void MetadataAction_AppendOutput::clear_errors() {
  errors_.Clear();
}
inline ::MetadataAction_Error MetadataAction_AppendOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.AppendOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
inline void MetadataAction_AppendOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.AppendOutput.errors)
}
inline void MetadataAction_AppendOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.AppendOutput.errors)
}
inline const ::google::protobuf::RepeatedField<int>&
MetadataAction_AppendOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.AppendOutput.errors)
  return errors_;
}
inline ::google::protobuf::RepeatedField<int>*
MetadataAction_AppendOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.AppendOutput.errors)
  return &errors_;
}

// -------------------------------------------------------------------

// MetadataAction_ChangePermissionsInput

// required string path = 1;
inline bool MetadataAction_ChangePermissionsInput::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_ChangePermissionsInput::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_ChangePermissionsInput::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_ChangePermissionsInput::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& MetadataAction_ChangePermissionsInput::path() const {
  // @@protoc_insertion_point(field_get:MetadataAction.ChangePermissionsInput.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_ChangePermissionsInput::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MetadataAction.ChangePermissionsInput.path)
}
inline void MetadataAction_ChangePermissionsInput::set_path(const char* value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MetadataAction.ChangePermissionsInput.path)
}
inline void MetadataAction_ChangePermissionsInput::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MetadataAction.ChangePermissionsInput.path)
}
inline ::std::string* MetadataAction_ChangePermissionsInput::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:MetadataAction.ChangePermissionsInput.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MetadataAction_ChangePermissionsInput::release_path() {
  // @@protoc_insertion_point(field_release:MetadataAction.ChangePermissionsInput.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MetadataAction_ChangePermissionsInput::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.ChangePermissionsInput.path)
}

// optional .Permissions permissions = 2;
inline bool MetadataAction_ChangePermissionsInput::has_permissions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MetadataAction_ChangePermissionsInput::set_has_permissions() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MetadataAction_ChangePermissionsInput::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MetadataAction_ChangePermissionsInput::clear_permissions() {
  if (permissions_ != NULL) permissions_->::Permissions::Clear();
  clear_has_permissions();
}
inline const ::Permissions& MetadataAction_ChangePermissionsInput::permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.ChangePermissionsInput.permissions)
  return permissions_ != NULL ? *permissions_ : *default_instance_->permissions_;
}
inline ::Permissions* MetadataAction_ChangePermissionsInput::mutable_permissions() {
  set_has_permissions();
  if (permissions_ == NULL) {
    permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.ChangePermissionsInput.permissions)
  return permissions_;
}
inline ::Permissions* MetadataAction_ChangePermissionsInput::release_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.ChangePermissionsInput.permissions)
  clear_has_permissions();
  ::Permissions* temp = permissions_;
  permissions_ = NULL;
  return temp;
}
inline void MetadataAction_ChangePermissionsInput::set_allocated_permissions(::Permissions* permissions) {
  delete permissions_;
  permissions_ = permissions;
  if (permissions) {
    set_has_permissions();
  } else {
    clear_has_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.ChangePermissionsInput.permissions)
}

// required .Permissions new_permissions = 3;
inline bool MetadataAction_ChangePermissionsInput::has_new_permissions() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MetadataAction_ChangePermissionsInput::set_has_new_permissions() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MetadataAction_ChangePermissionsInput::clear_has_new_permissions() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MetadataAction_ChangePermissionsInput::clear_new_permissions() {
  if (new_permissions_ != NULL) new_permissions_->::Permissions::Clear();
  clear_has_new_permissions();
}
inline const ::Permissions& MetadataAction_ChangePermissionsInput::new_permissions() const {
  // @@protoc_insertion_point(field_get:MetadataAction.ChangePermissionsInput.new_permissions)
  return new_permissions_ != NULL ? *new_permissions_ : *default_instance_->new_permissions_;
}
inline ::Permissions* MetadataAction_ChangePermissionsInput::mutable_new_permissions() {
  set_has_new_permissions();
  if (new_permissions_ == NULL) {
    new_permissions_ = new ::Permissions;
  }
  // @@protoc_insertion_point(field_mutable:MetadataAction.ChangePermissionsInput.new_permissions)
  return new_permissions_;
}
inline ::Permissions* MetadataAction_ChangePermissionsInput::release_new_permissions() {
  // @@protoc_insertion_point(field_release:MetadataAction.ChangePermissionsInput.new_permissions)
  clear_has_new_permissions();
  ::Permissions* temp = new_permissions_;
  new_permissions_ = NULL;
  return temp;
}
inline void MetadataAction_ChangePermissionsInput::set_allocated_new_permissions(::Permissions* new_permissions) {
  delete new_permissions_;
  new_permissions_ = new_permissions;
  if (new_permissions) {
    set_has_new_permissions();
  } else {
    clear_has_new_permissions();
  }
  // @@protoc_insertion_point(field_set_allocated:MetadataAction.ChangePermissionsInput.new_permissions)
}

// -------------------------------------------------------------------

// MetadataAction_ChangePermissionsOutput

// optional bool success = 1 [default = true];
inline bool MetadataAction_ChangePermissionsOutput::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MetadataAction_ChangePermissionsOutput::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MetadataAction_ChangePermissionsOutput::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MetadataAction_ChangePermissionsOutput::clear_success() {
  success_ = true;
  clear_has_success();
}
inline bool MetadataAction_ChangePermissionsOutput::success() const {
  // @@protoc_insertion_point(field_get:MetadataAction.ChangePermissionsOutput.success)
  return success_;
}
inline void MetadataAction_ChangePermissionsOutput::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:MetadataAction.ChangePermissionsOutput.success)
}

// repeated .MetadataAction.Error errors = 2;
inline int MetadataAction_ChangePermissionsOutput::errors_size() const {
  return errors_.size();
}
inline void MetadataAction_ChangePermissionsOutput::clear_errors() {
  errors_.Clear();
}
inline ::MetadataAction_Error MetadataAction_ChangePermissionsOutput::errors(int index) const {
  // @@protoc_insertion_point(field_get:MetadataAction.ChangePermissionsOutput.errors)
  return static_cast< ::MetadataAction_Error >(errors_.Get(index));
}
inline void MetadataAction_ChangePermissionsOutput::set_errors(int index, ::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Set(index, value);
  // @@protoc_insertion_point(field_set:MetadataAction.ChangePermissionsOutput.errors)
}
inline void MetadataAction_ChangePermissionsOutput::add_errors(::MetadataAction_Error value) {
  assert(::MetadataAction_Error_IsValid(value));
  errors_.Add(value);
  // @@protoc_insertion_point(field_add:MetadataAction.ChangePermissionsOutput.errors)
}
inline const ::google::protobuf::RepeatedField<int>&
MetadataAction_ChangePermissionsOutput::errors() const {
  // @@protoc_insertion_point(field_list:MetadataAction.ChangePermissionsOutput.errors)
  return errors_;
}
inline ::google::protobuf::RepeatedField<int>*
MetadataAction_ChangePermissionsOutput::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:MetadataAction.ChangePermissionsOutput.errors)
  return &errors_;
}

// -------------------------------------------------------------------

// MetadataAction

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::MetadataAction_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MetadataAction_Type>() {
  return ::MetadataAction_Type_descriptor();
}
template <> struct is_proto_enum< ::MetadataAction_Error> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MetadataAction_Error>() {
  return ::MetadataAction_Error_descriptor();
}
template <> struct is_proto_enum< ::FileType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FileType>() {
  return ::FileType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_metadata_2eproto__INCLUDED
