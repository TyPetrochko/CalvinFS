// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: action.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "action.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Action_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Action_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Action_ActionStatus_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ActionBatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActionBatch_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_action_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_action_2eproto() {
  protobuf_AddDesc_action_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "action.proto");
  GOOGLE_CHECK(file != NULL);
  Action_descriptor_ = file->message_type(0);
  static const int Action_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, client_machine_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, client_channel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, store_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, action_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, read_only_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, readset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, writeset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, version_offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, origin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, distinct_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, new_generated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, involved_replicas_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, fake_action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, remaster_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, dest_replica_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, misc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, action_status_),
  };
  Action_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Action_descriptor_,
      Action::default_instance_,
      Action_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, _has_bits_[0]),
      -1,
      -1,
      sizeof(Action),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Action, _internal_metadata_),
      -1);
  Action_ActionStatus_descriptor_ = Action_descriptor_->enum_type(0);
  ActionBatch_descriptor_ = file->message_type(1);
  static const int ActionBatch_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionBatch, entries_),
  };
  ActionBatch_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ActionBatch_descriptor_,
      ActionBatch::default_instance_,
      ActionBatch_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionBatch, _has_bits_[0]),
      -1,
      -1,
      sizeof(ActionBatch),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionBatch, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_action_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Action_descriptor_, &Action::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ActionBatch_descriptor_, &ActionBatch::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_action_2eproto() {
  delete Action::default_instance_;
  delete Action_reflection_;
  delete ActionBatch::default_instance_;
  delete ActionBatch_reflection_;
}

void protobuf_AddDesc_action_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_action_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_scalar_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014action.proto\032\014scalar.proto\"\342\003\n\006Action\022"
    "\026\n\016client_machine\030\001 \001(\004\022\026\n\016client_channe"
    "l\030\002 \001(\t\022\r\n\005store\030\013 \001(\t\022\023\n\013action_type\030\014 "
    "\002(\005\022\030\n\tread_only\030\r \001(\010:\005false\022\r\n\005input\030\016"
    " \002(\014\022\016\n\006output\030\017 \001(\014\022\017\n\007readset\030\025 \003(\014\022\020\n"
    "\010writeset\030\026 \003(\014\022\017\n\007version\030\037 \001(\004\022\026\n\016vers"
    "ion_offset\030  \001(\004\022\021\n\006origin\030* \001(\r:\0010\022\023\n\013d"
    "istinct_id\030+ \002(\004\022\034\n\rnew_generated\030, \001(\010:"
    "\005false\022\031\n\021involved_replicas\030- \003(\r\022\032\n\013fak"
    "e_action\030. \001(\010:\005false\022\027\n\010remaster\030/ \001(\010:"
    "\005false\022\024\n\014dest_replica\0300 \001(\r\022\025\n\004misc\0303 \003"
    "(\0132\007.Scalar\022\025\n\raction_status\030= \001(\005\"%\n\014Ac"
    "tionStatus\022\010\n\004FREE\020\000\022\013\n\007BLOCKED\020\001\"\'\n\013Act"
    "ionBatch\022\030\n\007entries\030\001 \003(\0132\007.Action", 554);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "action.proto", &protobuf_RegisterTypes);
  Action::default_instance_ = new Action();
  ActionBatch::default_instance_ = new ActionBatch();
  Action::default_instance_->InitAsDefaultInstance();
  ActionBatch::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_action_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_action_2eproto {
  StaticDescriptorInitializer_action_2eproto() {
    protobuf_AddDesc_action_2eproto();
  }
} static_descriptor_initializer_action_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Action_ActionStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Action_ActionStatus_descriptor_;
}
bool Action_ActionStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Action_ActionStatus Action::FREE;
const Action_ActionStatus Action::BLOCKED;
const Action_ActionStatus Action::ActionStatus_MIN;
const Action_ActionStatus Action::ActionStatus_MAX;
const int Action::ActionStatus_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Action::kClientMachineFieldNumber;
const int Action::kClientChannelFieldNumber;
const int Action::kStoreFieldNumber;
const int Action::kActionTypeFieldNumber;
const int Action::kReadOnlyFieldNumber;
const int Action::kInputFieldNumber;
const int Action::kOutputFieldNumber;
const int Action::kReadsetFieldNumber;
const int Action::kWritesetFieldNumber;
const int Action::kVersionFieldNumber;
const int Action::kVersionOffsetFieldNumber;
const int Action::kOriginFieldNumber;
const int Action::kDistinctIdFieldNumber;
const int Action::kNewGeneratedFieldNumber;
const int Action::kInvolvedReplicasFieldNumber;
const int Action::kFakeActionFieldNumber;
const int Action::kRemasterFieldNumber;
const int Action::kDestReplicaFieldNumber;
const int Action::kMiscFieldNumber;
const int Action::kActionStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Action::Action()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Action)
}

void Action::InitAsDefaultInstance() {
}

Action::Action(const Action& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Action)
}

void Action::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  client_machine_ = GOOGLE_ULONGLONG(0);
  client_channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  store_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_type_ = 0;
  read_only_ = false;
  input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = GOOGLE_ULONGLONG(0);
  version_offset_ = GOOGLE_ULONGLONG(0);
  origin_ = 0u;
  distinct_id_ = GOOGLE_ULONGLONG(0);
  new_generated_ = false;
  fake_action_ = false;
  remaster_ = false;
  dest_replica_ = 0u;
  action_status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Action::~Action() {
  // @@protoc_insertion_point(destructor:Action)
  SharedDtor();
}

void Action::SharedDtor() {
  client_channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  store_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  input_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Action::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Action::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Action_descriptor_;
}

const Action& Action::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_action_2eproto();
  return *default_instance_;
}

Action* Action::default_instance_ = NULL;

Action* Action::New(::google::protobuf::Arena* arena) const {
  Action* n = new Action;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Action::Clear() {
// @@protoc_insertion_point(message_clear_start:Action)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Action, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Action*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    client_machine_ = GOOGLE_ULONGLONG(0);
    if (has_client_channel()) {
      client_channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_store()) {
      store_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    action_type_ = 0;
    read_only_ = false;
    if (has_input()) {
      input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_output()) {
      output_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 48640u) {
    ZR_(version_, distinct_id_);
    ZR_(new_generated_, fake_action_);
    origin_ = 0u;
  }
  if (_has_bits_[16 / 32] & 720896u) {
    ZR_(remaster_, dest_replica_);
    action_status_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  readset_.Clear();
  writeset_.Clear();
  involved_replicas_.Clear();
  misc_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Action)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 client_machine = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &client_machine_)));
          set_has_client_machine();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_client_channel;
        break;
      }

      // optional string client_channel = 2;
      case 2: {
        if (tag == 18) {
         parse_client_channel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_channel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->client_channel().data(), this->client_channel().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Action.client_channel");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_store;
        break;
      }

      // optional string store = 11;
      case 11: {
        if (tag == 90) {
         parse_store:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_store()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->store().data(), this->store().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Action.store");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_action_type;
        break;
      }

      // required int32 action_type = 12;
      case 12: {
        if (tag == 96) {
         parse_action_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_type_)));
          set_has_action_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_read_only;
        break;
      }

      // optional bool read_only = 13 [default = false];
      case 13: {
        if (tag == 104) {
         parse_read_only:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &read_only_)));
          set_has_read_only();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_input;
        break;
      }

      // required bytes input = 14;
      case 14: {
        if (tag == 114) {
         parse_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_input()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_output;
        break;
      }

      // optional bytes output = 15;
      case 15: {
        if (tag == 122) {
         parse_output:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_output()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_readset;
        break;
      }

      // repeated bytes readset = 21;
      case 21: {
        if (tag == 170) {
         parse_readset:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_readset()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_readset;
        if (input->ExpectTag(178)) goto parse_writeset;
        break;
      }

      // repeated bytes writeset = 22;
      case 22: {
        if (tag == 178) {
         parse_writeset:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_writeset()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_writeset;
        if (input->ExpectTag(248)) goto parse_version;
        break;
      }

      // optional uint64 version = 31;
      case 31: {
        if (tag == 248) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(256)) goto parse_version_offset;
        break;
      }

      // optional uint64 version_offset = 32;
      case 32: {
        if (tag == 256) {
         parse_version_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_offset_)));
          set_has_version_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(336)) goto parse_origin;
        break;
      }

      // optional uint32 origin = 42 [default = 0];
      case 42: {
        if (tag == 336) {
         parse_origin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &origin_)));
          set_has_origin();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(344)) goto parse_distinct_id;
        break;
      }

      // required uint64 distinct_id = 43;
      case 43: {
        if (tag == 344) {
         parse_distinct_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &distinct_id_)));
          set_has_distinct_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(352)) goto parse_new_generated;
        break;
      }

      // optional bool new_generated = 44 [default = false];
      case 44: {
        if (tag == 352) {
         parse_new_generated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &new_generated_)));
          set_has_new_generated();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(360)) goto parse_involved_replicas;
        break;
      }

      // repeated uint32 involved_replicas = 45;
      case 45: {
        if (tag == 360) {
         parse_involved_replicas:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 360, input, this->mutable_involved_replicas())));
        } else if (tag == 362) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_involved_replicas())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(360)) goto parse_involved_replicas;
        if (input->ExpectTag(368)) goto parse_fake_action;
        break;
      }

      // optional bool fake_action = 46 [default = false];
      case 46: {
        if (tag == 368) {
         parse_fake_action:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fake_action_)));
          set_has_fake_action();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(376)) goto parse_remaster;
        break;
      }

      // optional bool remaster = 47 [default = false];
      case 47: {
        if (tag == 376) {
         parse_remaster:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &remaster_)));
          set_has_remaster();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(384)) goto parse_dest_replica;
        break;
      }

      // optional uint32 dest_replica = 48;
      case 48: {
        if (tag == 384) {
         parse_dest_replica:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dest_replica_)));
          set_has_dest_replica();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(410)) goto parse_misc;
        break;
      }

      // repeated .Scalar misc = 51;
      case 51: {
        if (tag == 410) {
         parse_misc:
          DO_(input->IncrementRecursionDepth());
         parse_loop_misc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_misc()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(410)) goto parse_loop_misc;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(488)) goto parse_action_status;
        break;
      }

      // optional int32 action_status = 61;
      case 61: {
        if (tag == 488) {
         parse_action_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_status_)));
          set_has_action_status();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Action)
  return false;
#undef DO_
}

void Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Action)
  // optional uint64 client_machine = 1;
  if (has_client_machine()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->client_machine(), output);
  }

  // optional string client_channel = 2;
  if (has_client_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->client_channel().data(), this->client_channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.client_channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->client_channel(), output);
  }

  // optional string store = 11;
  if (has_store()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store().data(), this->store().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.store");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->store(), output);
  }

  // required int32 action_type = 12;
  if (has_action_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->action_type(), output);
  }

  // optional bool read_only = 13 [default = false];
  if (has_read_only()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->read_only(), output);
  }

  // required bytes input = 14;
  if (has_input()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      14, this->input(), output);
  }

  // optional bytes output = 15;
  if (has_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->output(), output);
  }

  // repeated bytes readset = 21;
  for (int i = 0; i < this->readset_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      21, this->readset(i), output);
  }

  // repeated bytes writeset = 22;
  for (int i = 0; i < this->writeset_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      22, this->writeset(i), output);
  }

  // optional uint64 version = 31;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(31, this->version(), output);
  }

  // optional uint64 version_offset = 32;
  if (has_version_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(32, this->version_offset(), output);
  }

  // optional uint32 origin = 42 [default = 0];
  if (has_origin()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(42, this->origin(), output);
  }

  // required uint64 distinct_id = 43;
  if (has_distinct_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(43, this->distinct_id(), output);
  }

  // optional bool new_generated = 44 [default = false];
  if (has_new_generated()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(44, this->new_generated(), output);
  }

  // repeated uint32 involved_replicas = 45;
  for (int i = 0; i < this->involved_replicas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      45, this->involved_replicas(i), output);
  }

  // optional bool fake_action = 46 [default = false];
  if (has_fake_action()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(46, this->fake_action(), output);
  }

  // optional bool remaster = 47 [default = false];
  if (has_remaster()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(47, this->remaster(), output);
  }

  // optional uint32 dest_replica = 48;
  if (has_dest_replica()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(48, this->dest_replica(), output);
  }

  // repeated .Scalar misc = 51;
  for (unsigned int i = 0, n = this->misc_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, this->misc(i), output);
  }

  // optional int32 action_status = 61;
  if (has_action_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(61, this->action_status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Action)
}

::google::protobuf::uint8* Action::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Action)
  // optional uint64 client_machine = 1;
  if (has_client_machine()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->client_machine(), target);
  }

  // optional string client_channel = 2;
  if (has_client_channel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->client_channel().data(), this->client_channel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.client_channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->client_channel(), target);
  }

  // optional string store = 11;
  if (has_store()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->store().data(), this->store().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Action.store");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->store(), target);
  }

  // required int32 action_type = 12;
  if (has_action_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->action_type(), target);
  }

  // optional bool read_only = 13 [default = false];
  if (has_read_only()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->read_only(), target);
  }

  // required bytes input = 14;
  if (has_input()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        14, this->input(), target);
  }

  // optional bytes output = 15;
  if (has_output()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->output(), target);
  }

  // repeated bytes readset = 21;
  for (int i = 0; i < this->readset_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(21, this->readset(i), target);
  }

  // repeated bytes writeset = 22;
  for (int i = 0; i < this->writeset_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(22, this->writeset(i), target);
  }

  // optional uint64 version = 31;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(31, this->version(), target);
  }

  // optional uint64 version_offset = 32;
  if (has_version_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(32, this->version_offset(), target);
  }

  // optional uint32 origin = 42 [default = 0];
  if (has_origin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(42, this->origin(), target);
  }

  // required uint64 distinct_id = 43;
  if (has_distinct_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(43, this->distinct_id(), target);
  }

  // optional bool new_generated = 44 [default = false];
  if (has_new_generated()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(44, this->new_generated(), target);
  }

  // repeated uint32 involved_replicas = 45;
  for (int i = 0; i < this->involved_replicas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(45, this->involved_replicas(i), target);
  }

  // optional bool fake_action = 46 [default = false];
  if (has_fake_action()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(46, this->fake_action(), target);
  }

  // optional bool remaster = 47 [default = false];
  if (has_remaster()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(47, this->remaster(), target);
  }

  // optional uint32 dest_replica = 48;
  if (has_dest_replica()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(48, this->dest_replica(), target);
  }

  // repeated .Scalar misc = 51;
  for (unsigned int i = 0, n = this->misc_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        51, this->misc(i), false, target);
  }

  // optional int32 action_status = 61;
  if (has_action_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(61, this->action_status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Action)
  return target;
}

int Action::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:Action)
  int total_size = 0;

  if (has_action_type()) {
    // required int32 action_type = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action_type());
  }

  if (has_input()) {
    // required bytes input = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->input());
  }

  if (has_distinct_id()) {
    // required uint64 distinct_id = 43;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->distinct_id());
  }

  return total_size;
}
int Action::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Action)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00001028) ^ 0x00001028) == 0) {  // All required fields are present.
    // required int32 action_type = 12;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->action_type());

    // required bytes input = 14;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->input());

    // required uint64 distinct_id = 43;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->distinct_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 87u) {
    // optional uint64 client_machine = 1;
    if (has_client_machine()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->client_machine());
    }

    // optional string client_channel = 2;
    if (has_client_channel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->client_channel());
    }

    // optional string store = 11;
    if (has_store()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->store());
    }

    // optional bool read_only = 13 [default = false];
    if (has_read_only()) {
      total_size += 1 + 1;
    }

    // optional bytes output = 15;
    if (has_output()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->output());
    }

  }
  if (_has_bits_[9 / 32] & 44544u) {
    // optional uint64 version = 31;
    if (has_version()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->version());
    }

    // optional uint64 version_offset = 32;
    if (has_version_offset()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->version_offset());
    }

    // optional uint32 origin = 42 [default = 0];
    if (has_origin()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->origin());
    }

    // optional bool new_generated = 44 [default = false];
    if (has_new_generated()) {
      total_size += 2 + 1;
    }

    // optional bool fake_action = 46 [default = false];
    if (has_fake_action()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 720896u) {
    // optional bool remaster = 47 [default = false];
    if (has_remaster()) {
      total_size += 2 + 1;
    }

    // optional uint32 dest_replica = 48;
    if (has_dest_replica()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dest_replica());
    }

    // optional int32 action_status = 61;
    if (has_action_status()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action_status());
    }

  }
  // repeated bytes readset = 21;
  total_size += 2 * this->readset_size();
  for (int i = 0; i < this->readset_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->readset(i));
  }

  // repeated bytes writeset = 22;
  total_size += 2 * this->writeset_size();
  for (int i = 0; i < this->writeset_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->writeset(i));
  }

  // repeated uint32 involved_replicas = 45;
  {
    int data_size = 0;
    for (int i = 0; i < this->involved_replicas_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->involved_replicas(i));
    }
    total_size += 2 * this->involved_replicas_size() + data_size;
  }

  // repeated .Scalar misc = 51;
  total_size += 2 * this->misc_size();
  for (int i = 0; i < this->misc_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->misc(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Action::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Action)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Action* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Action>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Action)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Action)
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Action)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  readset_.MergeFrom(from.readset_);
  writeset_.MergeFrom(from.writeset_);
  involved_replicas_.MergeFrom(from.involved_replicas_);
  misc_.MergeFrom(from.misc_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_client_machine()) {
      set_client_machine(from.client_machine());
    }
    if (from.has_client_channel()) {
      set_has_client_channel();
      client_channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_channel_);
    }
    if (from.has_store()) {
      set_has_store();
      store_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.store_);
    }
    if (from.has_action_type()) {
      set_action_type(from.action_type());
    }
    if (from.has_read_only()) {
      set_read_only(from.read_only());
    }
    if (from.has_input()) {
      set_has_input();
      input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.input_);
    }
    if (from.has_output()) {
      set_has_output();
      output_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_);
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_version_offset()) {
      set_version_offset(from.version_offset());
    }
    if (from.has_origin()) {
      set_origin(from.origin());
    }
    if (from.has_distinct_id()) {
      set_distinct_id(from.distinct_id());
    }
    if (from.has_new_generated()) {
      set_new_generated(from.new_generated());
    }
    if (from.has_fake_action()) {
      set_fake_action(from.fake_action());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_remaster()) {
      set_remaster(from.remaster());
    }
    if (from.has_dest_replica()) {
      set_dest_replica(from.dest_replica());
    }
    if (from.has_action_status()) {
      set_action_status(from.action_status());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Action::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001028) != 0x00001028) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->misc())) return false;
  return true;
}

void Action::Swap(Action* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Action::InternalSwap(Action* other) {
  std::swap(client_machine_, other->client_machine_);
  client_channel_.Swap(&other->client_channel_);
  store_.Swap(&other->store_);
  std::swap(action_type_, other->action_type_);
  std::swap(read_only_, other->read_only_);
  input_.Swap(&other->input_);
  output_.Swap(&other->output_);
  readset_.UnsafeArenaSwap(&other->readset_);
  writeset_.UnsafeArenaSwap(&other->writeset_);
  std::swap(version_, other->version_);
  std::swap(version_offset_, other->version_offset_);
  std::swap(origin_, other->origin_);
  std::swap(distinct_id_, other->distinct_id_);
  std::swap(new_generated_, other->new_generated_);
  involved_replicas_.UnsafeArenaSwap(&other->involved_replicas_);
  std::swap(fake_action_, other->fake_action_);
  std::swap(remaster_, other->remaster_);
  std::swap(dest_replica_, other->dest_replica_);
  misc_.UnsafeArenaSwap(&other->misc_);
  std::swap(action_status_, other->action_status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Action::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Action_descriptor_;
  metadata.reflection = Action_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Action

// optional uint64 client_machine = 1;
bool Action::has_client_machine() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Action::set_has_client_machine() {
  _has_bits_[0] |= 0x00000001u;
}
void Action::clear_has_client_machine() {
  _has_bits_[0] &= ~0x00000001u;
}
void Action::clear_client_machine() {
  client_machine_ = GOOGLE_ULONGLONG(0);
  clear_has_client_machine();
}
 ::google::protobuf::uint64 Action::client_machine() const {
  // @@protoc_insertion_point(field_get:Action.client_machine)
  return client_machine_;
}
 void Action::set_client_machine(::google::protobuf::uint64 value) {
  set_has_client_machine();
  client_machine_ = value;
  // @@protoc_insertion_point(field_set:Action.client_machine)
}

// optional string client_channel = 2;
bool Action::has_client_channel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Action::set_has_client_channel() {
  _has_bits_[0] |= 0x00000002u;
}
void Action::clear_has_client_channel() {
  _has_bits_[0] &= ~0x00000002u;
}
void Action::clear_client_channel() {
  client_channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client_channel();
}
 const ::std::string& Action::client_channel() const {
  // @@protoc_insertion_point(field_get:Action.client_channel)
  return client_channel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Action::set_client_channel(const ::std::string& value) {
  set_has_client_channel();
  client_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Action.client_channel)
}
 void Action::set_client_channel(const char* value) {
  set_has_client_channel();
  client_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Action.client_channel)
}
 void Action::set_client_channel(const char* value, size_t size) {
  set_has_client_channel();
  client_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Action.client_channel)
}
 ::std::string* Action::mutable_client_channel() {
  set_has_client_channel();
  // @@protoc_insertion_point(field_mutable:Action.client_channel)
  return client_channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Action::release_client_channel() {
  // @@protoc_insertion_point(field_release:Action.client_channel)
  clear_has_client_channel();
  return client_channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Action::set_allocated_client_channel(::std::string* client_channel) {
  if (client_channel != NULL) {
    set_has_client_channel();
  } else {
    clear_has_client_channel();
  }
  client_channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_channel);
  // @@protoc_insertion_point(field_set_allocated:Action.client_channel)
}

// optional string store = 11;
bool Action::has_store() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Action::set_has_store() {
  _has_bits_[0] |= 0x00000004u;
}
void Action::clear_has_store() {
  _has_bits_[0] &= ~0x00000004u;
}
void Action::clear_store() {
  store_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_store();
}
 const ::std::string& Action::store() const {
  // @@protoc_insertion_point(field_get:Action.store)
  return store_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Action::set_store(const ::std::string& value) {
  set_has_store();
  store_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Action.store)
}
 void Action::set_store(const char* value) {
  set_has_store();
  store_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Action.store)
}
 void Action::set_store(const char* value, size_t size) {
  set_has_store();
  store_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Action.store)
}
 ::std::string* Action::mutable_store() {
  set_has_store();
  // @@protoc_insertion_point(field_mutable:Action.store)
  return store_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Action::release_store() {
  // @@protoc_insertion_point(field_release:Action.store)
  clear_has_store();
  return store_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Action::set_allocated_store(::std::string* store) {
  if (store != NULL) {
    set_has_store();
  } else {
    clear_has_store();
  }
  store_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store);
  // @@protoc_insertion_point(field_set_allocated:Action.store)
}

// required int32 action_type = 12;
bool Action::has_action_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Action::set_has_action_type() {
  _has_bits_[0] |= 0x00000008u;
}
void Action::clear_has_action_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void Action::clear_action_type() {
  action_type_ = 0;
  clear_has_action_type();
}
 ::google::protobuf::int32 Action::action_type() const {
  // @@protoc_insertion_point(field_get:Action.action_type)
  return action_type_;
}
 void Action::set_action_type(::google::protobuf::int32 value) {
  set_has_action_type();
  action_type_ = value;
  // @@protoc_insertion_point(field_set:Action.action_type)
}

// optional bool read_only = 13 [default = false];
bool Action::has_read_only() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Action::set_has_read_only() {
  _has_bits_[0] |= 0x00000010u;
}
void Action::clear_has_read_only() {
  _has_bits_[0] &= ~0x00000010u;
}
void Action::clear_read_only() {
  read_only_ = false;
  clear_has_read_only();
}
 bool Action::read_only() const {
  // @@protoc_insertion_point(field_get:Action.read_only)
  return read_only_;
}
 void Action::set_read_only(bool value) {
  set_has_read_only();
  read_only_ = value;
  // @@protoc_insertion_point(field_set:Action.read_only)
}

// required bytes input = 14;
bool Action::has_input() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Action::set_has_input() {
  _has_bits_[0] |= 0x00000020u;
}
void Action::clear_has_input() {
  _has_bits_[0] &= ~0x00000020u;
}
void Action::clear_input() {
  input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_input();
}
 const ::std::string& Action::input() const {
  // @@protoc_insertion_point(field_get:Action.input)
  return input_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Action::set_input(const ::std::string& value) {
  set_has_input();
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Action.input)
}
 void Action::set_input(const char* value) {
  set_has_input();
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Action.input)
}
 void Action::set_input(const void* value, size_t size) {
  set_has_input();
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Action.input)
}
 ::std::string* Action::mutable_input() {
  set_has_input();
  // @@protoc_insertion_point(field_mutable:Action.input)
  return input_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Action::release_input() {
  // @@protoc_insertion_point(field_release:Action.input)
  clear_has_input();
  return input_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Action::set_allocated_input(::std::string* input) {
  if (input != NULL) {
    set_has_input();
  } else {
    clear_has_input();
  }
  input_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input);
  // @@protoc_insertion_point(field_set_allocated:Action.input)
}

// optional bytes output = 15;
bool Action::has_output() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Action::set_has_output() {
  _has_bits_[0] |= 0x00000040u;
}
void Action::clear_has_output() {
  _has_bits_[0] &= ~0x00000040u;
}
void Action::clear_output() {
  output_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_output();
}
 const ::std::string& Action::output() const {
  // @@protoc_insertion_point(field_get:Action.output)
  return output_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Action::set_output(const ::std::string& value) {
  set_has_output();
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Action.output)
}
 void Action::set_output(const char* value) {
  set_has_output();
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Action.output)
}
 void Action::set_output(const void* value, size_t size) {
  set_has_output();
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Action.output)
}
 ::std::string* Action::mutable_output() {
  set_has_output();
  // @@protoc_insertion_point(field_mutable:Action.output)
  return output_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Action::release_output() {
  // @@protoc_insertion_point(field_release:Action.output)
  clear_has_output();
  return output_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Action::set_allocated_output(::std::string* output) {
  if (output != NULL) {
    set_has_output();
  } else {
    clear_has_output();
  }
  output_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output);
  // @@protoc_insertion_point(field_set_allocated:Action.output)
}

// repeated bytes readset = 21;
int Action::readset_size() const {
  return readset_.size();
}
void Action::clear_readset() {
  readset_.Clear();
}
 const ::std::string& Action::readset(int index) const {
  // @@protoc_insertion_point(field_get:Action.readset)
  return readset_.Get(index);
}
 ::std::string* Action::mutable_readset(int index) {
  // @@protoc_insertion_point(field_mutable:Action.readset)
  return readset_.Mutable(index);
}
 void Action::set_readset(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Action.readset)
  readset_.Mutable(index)->assign(value);
}
 void Action::set_readset(int index, const char* value) {
  readset_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Action.readset)
}
 void Action::set_readset(int index, const void* value, size_t size) {
  readset_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Action.readset)
}
 ::std::string* Action::add_readset() {
  // @@protoc_insertion_point(field_add_mutable:Action.readset)
  return readset_.Add();
}
 void Action::add_readset(const ::std::string& value) {
  readset_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Action.readset)
}
 void Action::add_readset(const char* value) {
  readset_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Action.readset)
}
 void Action::add_readset(const void* value, size_t size) {
  readset_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Action.readset)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Action::readset() const {
  // @@protoc_insertion_point(field_list:Action.readset)
  return readset_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Action::mutable_readset() {
  // @@protoc_insertion_point(field_mutable_list:Action.readset)
  return &readset_;
}

// repeated bytes writeset = 22;
int Action::writeset_size() const {
  return writeset_.size();
}
void Action::clear_writeset() {
  writeset_.Clear();
}
 const ::std::string& Action::writeset(int index) const {
  // @@protoc_insertion_point(field_get:Action.writeset)
  return writeset_.Get(index);
}
 ::std::string* Action::mutable_writeset(int index) {
  // @@protoc_insertion_point(field_mutable:Action.writeset)
  return writeset_.Mutable(index);
}
 void Action::set_writeset(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Action.writeset)
  writeset_.Mutable(index)->assign(value);
}
 void Action::set_writeset(int index, const char* value) {
  writeset_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Action.writeset)
}
 void Action::set_writeset(int index, const void* value, size_t size) {
  writeset_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Action.writeset)
}
 ::std::string* Action::add_writeset() {
  // @@protoc_insertion_point(field_add_mutable:Action.writeset)
  return writeset_.Add();
}
 void Action::add_writeset(const ::std::string& value) {
  writeset_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Action.writeset)
}
 void Action::add_writeset(const char* value) {
  writeset_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Action.writeset)
}
 void Action::add_writeset(const void* value, size_t size) {
  writeset_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Action.writeset)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Action::writeset() const {
  // @@protoc_insertion_point(field_list:Action.writeset)
  return writeset_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Action::mutable_writeset() {
  // @@protoc_insertion_point(field_mutable_list:Action.writeset)
  return &writeset_;
}

// optional uint64 version = 31;
bool Action::has_version() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Action::set_has_version() {
  _has_bits_[0] |= 0x00000200u;
}
void Action::clear_has_version() {
  _has_bits_[0] &= ~0x00000200u;
}
void Action::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
 ::google::protobuf::uint64 Action::version() const {
  // @@protoc_insertion_point(field_get:Action.version)
  return version_;
}
 void Action::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Action.version)
}

// optional uint64 version_offset = 32;
bool Action::has_version_offset() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Action::set_has_version_offset() {
  _has_bits_[0] |= 0x00000400u;
}
void Action::clear_has_version_offset() {
  _has_bits_[0] &= ~0x00000400u;
}
void Action::clear_version_offset() {
  version_offset_ = GOOGLE_ULONGLONG(0);
  clear_has_version_offset();
}
 ::google::protobuf::uint64 Action::version_offset() const {
  // @@protoc_insertion_point(field_get:Action.version_offset)
  return version_offset_;
}
 void Action::set_version_offset(::google::protobuf::uint64 value) {
  set_has_version_offset();
  version_offset_ = value;
  // @@protoc_insertion_point(field_set:Action.version_offset)
}

// optional uint32 origin = 42 [default = 0];
bool Action::has_origin() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Action::set_has_origin() {
  _has_bits_[0] |= 0x00000800u;
}
void Action::clear_has_origin() {
  _has_bits_[0] &= ~0x00000800u;
}
void Action::clear_origin() {
  origin_ = 0u;
  clear_has_origin();
}
 ::google::protobuf::uint32 Action::origin() const {
  // @@protoc_insertion_point(field_get:Action.origin)
  return origin_;
}
 void Action::set_origin(::google::protobuf::uint32 value) {
  set_has_origin();
  origin_ = value;
  // @@protoc_insertion_point(field_set:Action.origin)
}

// required uint64 distinct_id = 43;
bool Action::has_distinct_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Action::set_has_distinct_id() {
  _has_bits_[0] |= 0x00001000u;
}
void Action::clear_has_distinct_id() {
  _has_bits_[0] &= ~0x00001000u;
}
void Action::clear_distinct_id() {
  distinct_id_ = GOOGLE_ULONGLONG(0);
  clear_has_distinct_id();
}
 ::google::protobuf::uint64 Action::distinct_id() const {
  // @@protoc_insertion_point(field_get:Action.distinct_id)
  return distinct_id_;
}
 void Action::set_distinct_id(::google::protobuf::uint64 value) {
  set_has_distinct_id();
  distinct_id_ = value;
  // @@protoc_insertion_point(field_set:Action.distinct_id)
}

// optional bool new_generated = 44 [default = false];
bool Action::has_new_generated() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Action::set_has_new_generated() {
  _has_bits_[0] |= 0x00002000u;
}
void Action::clear_has_new_generated() {
  _has_bits_[0] &= ~0x00002000u;
}
void Action::clear_new_generated() {
  new_generated_ = false;
  clear_has_new_generated();
}
 bool Action::new_generated() const {
  // @@protoc_insertion_point(field_get:Action.new_generated)
  return new_generated_;
}
 void Action::set_new_generated(bool value) {
  set_has_new_generated();
  new_generated_ = value;
  // @@protoc_insertion_point(field_set:Action.new_generated)
}

// repeated uint32 involved_replicas = 45;
int Action::involved_replicas_size() const {
  return involved_replicas_.size();
}
void Action::clear_involved_replicas() {
  involved_replicas_.Clear();
}
 ::google::protobuf::uint32 Action::involved_replicas(int index) const {
  // @@protoc_insertion_point(field_get:Action.involved_replicas)
  return involved_replicas_.Get(index);
}
 void Action::set_involved_replicas(int index, ::google::protobuf::uint32 value) {
  involved_replicas_.Set(index, value);
  // @@protoc_insertion_point(field_set:Action.involved_replicas)
}
 void Action::add_involved_replicas(::google::protobuf::uint32 value) {
  involved_replicas_.Add(value);
  // @@protoc_insertion_point(field_add:Action.involved_replicas)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Action::involved_replicas() const {
  // @@protoc_insertion_point(field_list:Action.involved_replicas)
  return involved_replicas_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Action::mutable_involved_replicas() {
  // @@protoc_insertion_point(field_mutable_list:Action.involved_replicas)
  return &involved_replicas_;
}

// optional bool fake_action = 46 [default = false];
bool Action::has_fake_action() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void Action::set_has_fake_action() {
  _has_bits_[0] |= 0x00008000u;
}
void Action::clear_has_fake_action() {
  _has_bits_[0] &= ~0x00008000u;
}
void Action::clear_fake_action() {
  fake_action_ = false;
  clear_has_fake_action();
}
 bool Action::fake_action() const {
  // @@protoc_insertion_point(field_get:Action.fake_action)
  return fake_action_;
}
 void Action::set_fake_action(bool value) {
  set_has_fake_action();
  fake_action_ = value;
  // @@protoc_insertion_point(field_set:Action.fake_action)
}

// optional bool remaster = 47 [default = false];
bool Action::has_remaster() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void Action::set_has_remaster() {
  _has_bits_[0] |= 0x00010000u;
}
void Action::clear_has_remaster() {
  _has_bits_[0] &= ~0x00010000u;
}
void Action::clear_remaster() {
  remaster_ = false;
  clear_has_remaster();
}
 bool Action::remaster() const {
  // @@protoc_insertion_point(field_get:Action.remaster)
  return remaster_;
}
 void Action::set_remaster(bool value) {
  set_has_remaster();
  remaster_ = value;
  // @@protoc_insertion_point(field_set:Action.remaster)
}

// optional uint32 dest_replica = 48;
bool Action::has_dest_replica() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void Action::set_has_dest_replica() {
  _has_bits_[0] |= 0x00020000u;
}
void Action::clear_has_dest_replica() {
  _has_bits_[0] &= ~0x00020000u;
}
void Action::clear_dest_replica() {
  dest_replica_ = 0u;
  clear_has_dest_replica();
}
 ::google::protobuf::uint32 Action::dest_replica() const {
  // @@protoc_insertion_point(field_get:Action.dest_replica)
  return dest_replica_;
}
 void Action::set_dest_replica(::google::protobuf::uint32 value) {
  set_has_dest_replica();
  dest_replica_ = value;
  // @@protoc_insertion_point(field_set:Action.dest_replica)
}

// repeated .Scalar misc = 51;
int Action::misc_size() const {
  return misc_.size();
}
void Action::clear_misc() {
  misc_.Clear();
}
const ::Scalar& Action::misc(int index) const {
  // @@protoc_insertion_point(field_get:Action.misc)
  return misc_.Get(index);
}
::Scalar* Action::mutable_misc(int index) {
  // @@protoc_insertion_point(field_mutable:Action.misc)
  return misc_.Mutable(index);
}
::Scalar* Action::add_misc() {
  // @@protoc_insertion_point(field_add:Action.misc)
  return misc_.Add();
}
::google::protobuf::RepeatedPtrField< ::Scalar >*
Action::mutable_misc() {
  // @@protoc_insertion_point(field_mutable_list:Action.misc)
  return &misc_;
}
const ::google::protobuf::RepeatedPtrField< ::Scalar >&
Action::misc() const {
  // @@protoc_insertion_point(field_list:Action.misc)
  return misc_;
}

// optional int32 action_status = 61;
bool Action::has_action_status() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void Action::set_has_action_status() {
  _has_bits_[0] |= 0x00080000u;
}
void Action::clear_has_action_status() {
  _has_bits_[0] &= ~0x00080000u;
}
void Action::clear_action_status() {
  action_status_ = 0;
  clear_has_action_status();
}
 ::google::protobuf::int32 Action::action_status() const {
  // @@protoc_insertion_point(field_get:Action.action_status)
  return action_status_;
}
 void Action::set_action_status(::google::protobuf::int32 value) {
  set_has_action_status();
  action_status_ = value;
  // @@protoc_insertion_point(field_set:Action.action_status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionBatch::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionBatch::ActionBatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ActionBatch)
}

void ActionBatch::InitAsDefaultInstance() {
}

ActionBatch::ActionBatch(const ActionBatch& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ActionBatch)
}

void ActionBatch::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActionBatch::~ActionBatch() {
  // @@protoc_insertion_point(destructor:ActionBatch)
  SharedDtor();
}

void ActionBatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActionBatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionBatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionBatch_descriptor_;
}

const ActionBatch& ActionBatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_action_2eproto();
  return *default_instance_;
}

ActionBatch* ActionBatch::default_instance_ = NULL;

ActionBatch* ActionBatch::New(::google::protobuf::Arena* arena) const {
  ActionBatch* n = new ActionBatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActionBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:ActionBatch)
  entries_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ActionBatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ActionBatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Action entries = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_entries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_entries;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ActionBatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ActionBatch)
  return false;
#undef DO_
}

void ActionBatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ActionBatch)
  // repeated .Action entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entries(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ActionBatch)
}

::google::protobuf::uint8* ActionBatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ActionBatch)
  // repeated .Action entries = 1;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entries(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ActionBatch)
  return target;
}

int ActionBatch::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ActionBatch)
  int total_size = 0;

  // repeated .Action entries = 1;
  total_size += 1 * this->entries_size();
  for (int i = 0; i < this->entries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->entries(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionBatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ActionBatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ActionBatch* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionBatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ActionBatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ActionBatch)
    MergeFrom(*source);
  }
}

void ActionBatch::MergeFrom(const ActionBatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ActionBatch)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  entries_.MergeFrom(from.entries_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ActionBatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ActionBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionBatch::CopyFrom(const ActionBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ActionBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionBatch::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->entries())) return false;
  return true;
}

void ActionBatch::Swap(ActionBatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionBatch::InternalSwap(ActionBatch* other) {
  entries_.UnsafeArenaSwap(&other->entries_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActionBatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActionBatch_descriptor_;
  metadata.reflection = ActionBatch_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActionBatch

// repeated .Action entries = 1;
int ActionBatch::entries_size() const {
  return entries_.size();
}
void ActionBatch::clear_entries() {
  entries_.Clear();
}
const ::Action& ActionBatch::entries(int index) const {
  // @@protoc_insertion_point(field_get:ActionBatch.entries)
  return entries_.Get(index);
}
::Action* ActionBatch::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:ActionBatch.entries)
  return entries_.Mutable(index);
}
::Action* ActionBatch::add_entries() {
  // @@protoc_insertion_point(field_add:ActionBatch.entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::Action >*
ActionBatch::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:ActionBatch.entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::Action >&
ActionBatch::entries() const {
  // @@protoc_insertion_point(field_list:ActionBatch.entries)
  return entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
