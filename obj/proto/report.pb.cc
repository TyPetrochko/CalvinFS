// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: report.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "report.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Report_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Report_reflection_ = NULL;
const ::google::protobuf::Descriptor* Report_Datum_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Report_Datum_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_report_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_report_2eproto() {
  protobuf_AddDesc_report_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "report.proto");
  GOOGLE_CHECK(file != NULL);
  Report_descriptor_ = file->message_type(0);
  static const int Report_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Report, app_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Report, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Report, data_),
  };
  Report_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Report_descriptor_,
      Report::default_instance_,
      Report_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Report, _has_bits_[0]),
      -1,
      -1,
      sizeof(Report),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Report, _internal_metadata_),
      -1);
  Report_Datum_descriptor_ = Report_descriptor_->nested_type(0);
  static const int Report_Datum_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Report_Datum, quantity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Report_Datum, value_),
  };
  Report_Datum_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Report_Datum_descriptor_,
      Report_Datum::default_instance_,
      Report_Datum_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Report_Datum, _has_bits_[0]),
      -1,
      -1,
      sizeof(Report_Datum),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Report_Datum, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_report_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Report_descriptor_, &Report::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Report_Datum_descriptor_, &Report_Datum::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_report_2eproto() {
  delete Report::default_instance_;
  delete Report_reflection_;
  delete Report_Datum::default_instance_;
  delete Report_Datum_reflection_;
}

void protobuf_AddDesc_report_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_report_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_scalar_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014report.proto\032\014scalar.proto\"s\n\006Report\022\013"
    "\n\003app\030\001 \001(\t\022\014\n\004time\030\002 \001(\001\022\033\n\004data\030\003 \003(\0132"
    "\r.Report.Datum\0321\n\005Datum\022\020\n\010quantity\030\001 \001("
    "\t\022\026\n\005value\030\002 \001(\0132\007.Scalar", 145);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "report.proto", &protobuf_RegisterTypes);
  Report::default_instance_ = new Report();
  Report_Datum::default_instance_ = new Report_Datum();
  Report::default_instance_->InitAsDefaultInstance();
  Report_Datum::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_report_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_report_2eproto {
  StaticDescriptorInitializer_report_2eproto() {
    protobuf_AddDesc_report_2eproto();
  }
} static_descriptor_initializer_report_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Report_Datum::kQuantityFieldNumber;
const int Report_Datum::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Report_Datum::Report_Datum()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Report.Datum)
}

void Report_Datum::InitAsDefaultInstance() {
  value_ = const_cast< ::Scalar*>(&::Scalar::default_instance());
}

Report_Datum::Report_Datum(const Report_Datum& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Report.Datum)
}

void Report_Datum::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  quantity_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Report_Datum::~Report_Datum() {
  // @@protoc_insertion_point(destructor:Report.Datum)
  SharedDtor();
}

void Report_Datum::SharedDtor() {
  quantity_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete value_;
  }
}

void Report_Datum::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Report_Datum::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Report_Datum_descriptor_;
}

const Report_Datum& Report_Datum::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_report_2eproto();
  return *default_instance_;
}

Report_Datum* Report_Datum::default_instance_ = NULL;

Report_Datum* Report_Datum::New(::google::protobuf::Arena* arena) const {
  Report_Datum* n = new Report_Datum;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Report_Datum::Clear() {
// @@protoc_insertion_point(message_clear_start:Report.Datum)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_quantity()) {
      quantity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_value()) {
      if (value_ != NULL) value_->::Scalar::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Report_Datum::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Report.Datum)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string quantity = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_quantity()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->quantity().data(), this->quantity().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Report.Datum.quantity");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // optional .Scalar value = 2;
      case 2: {
        if (tag == 18) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Report.Datum)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Report.Datum)
  return false;
#undef DO_
}

void Report_Datum::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Report.Datum)
  // optional string quantity = 1;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->quantity().data(), this->quantity().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Report.Datum.quantity");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->quantity(), output);
  }

  // optional .Scalar value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Report.Datum)
}

::google::protobuf::uint8* Report_Datum::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Report.Datum)
  // optional string quantity = 1;
  if (has_quantity()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->quantity().data(), this->quantity().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Report.Datum.quantity");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->quantity(), target);
  }

  // optional .Scalar value = 2;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->value_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Report.Datum)
  return target;
}

int Report_Datum::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Report.Datum)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string quantity = 1;
    if (has_quantity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->quantity());
    }

    // optional .Scalar value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->value_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Report_Datum::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Report.Datum)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Report_Datum* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Report_Datum>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Report.Datum)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Report.Datum)
    MergeFrom(*source);
  }
}

void Report_Datum::MergeFrom(const Report_Datum& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Report.Datum)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_quantity()) {
      set_has_quantity();
      quantity_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quantity_);
    }
    if (from.has_value()) {
      mutable_value()->::Scalar::MergeFrom(from.value());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Report_Datum::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Report.Datum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Report_Datum::CopyFrom(const Report_Datum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Report.Datum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Report_Datum::IsInitialized() const {

  if (has_value()) {
    if (!this->value_->IsInitialized()) return false;
  }
  return true;
}

void Report_Datum::Swap(Report_Datum* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Report_Datum::InternalSwap(Report_Datum* other) {
  quantity_.Swap(&other->quantity_);
  std::swap(value_, other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Report_Datum::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Report_Datum_descriptor_;
  metadata.reflection = Report_Datum_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Report::kAppFieldNumber;
const int Report::kTimeFieldNumber;
const int Report::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Report::Report()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Report)
}

void Report::InitAsDefaultInstance() {
}

Report::Report(const Report& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Report)
}

void Report::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  app_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Report::~Report() {
  // @@protoc_insertion_point(destructor:Report)
  SharedDtor();
}

void Report::SharedDtor() {
  app_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Report::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Report::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Report_descriptor_;
}

const Report& Report::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_report_2eproto();
  return *default_instance_;
}

Report* Report::default_instance_ = NULL;

Report* Report::New(::google::protobuf::Arena* arena) const {
  Report* n = new Report;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Report::Clear() {
// @@protoc_insertion_point(message_clear_start:Report)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_app()) {
      app_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    time_ = 0;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Report::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Report)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string app = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->app().data(), this->app().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Report.app");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_time;
        break;
      }

      // optional double time = 2;
      case 2: {
        if (tag == 17) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // repeated .Report.Datum data = 3;
      case 3: {
        if (tag == 26) {
         parse_data:
          DO_(input->IncrementRecursionDepth());
         parse_loop_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Report)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Report)
  return false;
#undef DO_
}

void Report::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Report)
  // optional string app = 1;
  if (has_app()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app().data(), this->app().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Report.app");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app(), output);
  }

  // optional double time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->time(), output);
  }

  // repeated .Report.Datum data = 3;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Report)
}

::google::protobuf::uint8* Report::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Report)
  // optional string app = 1;
  if (has_app()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app().data(), this->app().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Report.app");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app(), target);
  }

  // optional double time = 2;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->time(), target);
  }

  // repeated .Report.Datum data = 3;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->data(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Report)
  return target;
}

int Report::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Report)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string app = 1;
    if (has_app()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->app());
    }

    // optional double time = 2;
    if (has_time()) {
      total_size += 1 + 8;
    }

  }
  // repeated .Report.Datum data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Report::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Report)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Report* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Report>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Report)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Report)
    MergeFrom(*source);
  }
}

void Report::MergeFrom(const Report& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Report)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_app()) {
      set_has_app();
      app_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_);
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Report::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Report)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Report::CopyFrom(const Report& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Report)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Report::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->data())) return false;
  return true;
}

void Report::Swap(Report* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Report::InternalSwap(Report* other) {
  app_.Swap(&other->app_);
  std::swap(time_, other->time_);
  data_.UnsafeArenaSwap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Report::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Report_descriptor_;
  metadata.reflection = Report_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Report_Datum

// optional string quantity = 1;
bool Report_Datum::has_quantity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Report_Datum::set_has_quantity() {
  _has_bits_[0] |= 0x00000001u;
}
void Report_Datum::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000001u;
}
void Report_Datum::clear_quantity() {
  quantity_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_quantity();
}
 const ::std::string& Report_Datum::quantity() const {
  // @@protoc_insertion_point(field_get:Report.Datum.quantity)
  return quantity_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Report_Datum::set_quantity(const ::std::string& value) {
  set_has_quantity();
  quantity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Report.Datum.quantity)
}
 void Report_Datum::set_quantity(const char* value) {
  set_has_quantity();
  quantity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Report.Datum.quantity)
}
 void Report_Datum::set_quantity(const char* value, size_t size) {
  set_has_quantity();
  quantity_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Report.Datum.quantity)
}
 ::std::string* Report_Datum::mutable_quantity() {
  set_has_quantity();
  // @@protoc_insertion_point(field_mutable:Report.Datum.quantity)
  return quantity_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Report_Datum::release_quantity() {
  // @@protoc_insertion_point(field_release:Report.Datum.quantity)
  clear_has_quantity();
  return quantity_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Report_Datum::set_allocated_quantity(::std::string* quantity) {
  if (quantity != NULL) {
    set_has_quantity();
  } else {
    clear_has_quantity();
  }
  quantity_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), quantity);
  // @@protoc_insertion_point(field_set_allocated:Report.Datum.quantity)
}

// optional .Scalar value = 2;
bool Report_Datum::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Report_Datum::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void Report_Datum::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void Report_Datum::clear_value() {
  if (value_ != NULL) value_->::Scalar::Clear();
  clear_has_value();
}
const ::Scalar& Report_Datum::value() const {
  // @@protoc_insertion_point(field_get:Report.Datum.value)
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
::Scalar* Report_Datum::mutable_value() {
  set_has_value();
  if (value_ == NULL) {
    value_ = new ::Scalar;
  }
  // @@protoc_insertion_point(field_mutable:Report.Datum.value)
  return value_;
}
::Scalar* Report_Datum::release_value() {
  // @@protoc_insertion_point(field_release:Report.Datum.value)
  clear_has_value();
  ::Scalar* temp = value_;
  value_ = NULL;
  return temp;
}
void Report_Datum::set_allocated_value(::Scalar* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
  // @@protoc_insertion_point(field_set_allocated:Report.Datum.value)
}

// -------------------------------------------------------------------

// Report

// optional string app = 1;
bool Report::has_app() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Report::set_has_app() {
  _has_bits_[0] |= 0x00000001u;
}
void Report::clear_has_app() {
  _has_bits_[0] &= ~0x00000001u;
}
void Report::clear_app() {
  app_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app();
}
 const ::std::string& Report::app() const {
  // @@protoc_insertion_point(field_get:Report.app)
  return app_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Report::set_app(const ::std::string& value) {
  set_has_app();
  app_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Report.app)
}
 void Report::set_app(const char* value) {
  set_has_app();
  app_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Report.app)
}
 void Report::set_app(const char* value, size_t size) {
  set_has_app();
  app_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Report.app)
}
 ::std::string* Report::mutable_app() {
  set_has_app();
  // @@protoc_insertion_point(field_mutable:Report.app)
  return app_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Report::release_app() {
  // @@protoc_insertion_point(field_release:Report.app)
  clear_has_app();
  return app_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Report::set_allocated_app(::std::string* app) {
  if (app != NULL) {
    set_has_app();
  } else {
    clear_has_app();
  }
  app_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app);
  // @@protoc_insertion_point(field_set_allocated:Report.app)
}

// optional double time = 2;
bool Report::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Report::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
void Report::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void Report::clear_time() {
  time_ = 0;
  clear_has_time();
}
 double Report::time() const {
  // @@protoc_insertion_point(field_get:Report.time)
  return time_;
}
 void Report::set_time(double value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:Report.time)
}

// repeated .Report.Datum data = 3;
int Report::data_size() const {
  return data_.size();
}
void Report::clear_data() {
  data_.Clear();
}
const ::Report_Datum& Report::data(int index) const {
  // @@protoc_insertion_point(field_get:Report.data)
  return data_.Get(index);
}
::Report_Datum* Report::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Report.data)
  return data_.Mutable(index);
}
::Report_Datum* Report::add_data() {
  // @@protoc_insertion_point(field_add:Report.data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::Report_Datum >*
Report::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Report.data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::Report_Datum >&
Report::data() const {
  // @@protoc_insertion_point(field_list:Report.data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
