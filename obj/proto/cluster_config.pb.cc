// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cluster_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cluster_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MachineInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MachineInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClusterConfigProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClusterConfigProto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_cluster_5fconfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_cluster_5fconfig_2eproto() {
  protobuf_AddDesc_cluster_5fconfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "cluster_config.proto");
  GOOGLE_CHECK(file != NULL);
  MachineInfo_descriptor_ = file->message_type(0);
  static const int MachineInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MachineInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MachineInfo, host_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MachineInfo, port_),
  };
  MachineInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MachineInfo_descriptor_,
      MachineInfo::default_instance_,
      MachineInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MachineInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(MachineInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MachineInfo, _internal_metadata_),
      -1);
  ClusterConfigProto_descriptor_ = file->message_type(1);
  static const int ClusterConfigProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterConfigProto, machines_),
  };
  ClusterConfigProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClusterConfigProto_descriptor_,
      ClusterConfigProto::default_instance_,
      ClusterConfigProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterConfigProto, _has_bits_[0]),
      -1,
      -1,
      sizeof(ClusterConfigProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClusterConfigProto, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_cluster_5fconfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MachineInfo_descriptor_, &MachineInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClusterConfigProto_descriptor_, &ClusterConfigProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_cluster_5fconfig_2eproto() {
  delete MachineInfo::default_instance_;
  delete MachineInfo_reflection_;
  delete ClusterConfigProto::default_instance_;
  delete ClusterConfigProto_reflection_;
}

void protobuf_AddDesc_cluster_5fconfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_cluster_5fconfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024cluster_config.proto\"5\n\013MachineInfo\022\n\n"
    "\002id\030\001 \001(\004\022\014\n\004host\030\002 \001(\t\022\014\n\004port\030\003 \001(\005\"4\n"
    "\022ClusterConfigProto\022\036\n\010machines\030\001 \003(\0132\014."
    "MachineInfo", 131);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cluster_config.proto", &protobuf_RegisterTypes);
  MachineInfo::default_instance_ = new MachineInfo();
  ClusterConfigProto::default_instance_ = new ClusterConfigProto();
  MachineInfo::default_instance_->InitAsDefaultInstance();
  ClusterConfigProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_cluster_5fconfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_cluster_5fconfig_2eproto {
  StaticDescriptorInitializer_cluster_5fconfig_2eproto() {
    protobuf_AddDesc_cluster_5fconfig_2eproto();
  }
} static_descriptor_initializer_cluster_5fconfig_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MachineInfo::kIdFieldNumber;
const int MachineInfo::kHostFieldNumber;
const int MachineInfo::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MachineInfo::MachineInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MachineInfo)
}

void MachineInfo::InitAsDefaultInstance() {
}

MachineInfo::MachineInfo(const MachineInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MachineInfo)
}

void MachineInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
  host_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MachineInfo::~MachineInfo() {
  // @@protoc_insertion_point(destructor:MachineInfo)
  SharedDtor();
}

void MachineInfo::SharedDtor() {
  host_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MachineInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MachineInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MachineInfo_descriptor_;
}

const MachineInfo& MachineInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cluster_5fconfig_2eproto();
  return *default_instance_;
}

MachineInfo* MachineInfo::default_instance_ = NULL;

MachineInfo* MachineInfo::New(::google::protobuf::Arena* arena) const {
  MachineInfo* n = new MachineInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MachineInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MachineInfo)
  if (_has_bits_[0 / 32] & 7u) {
    id_ = GOOGLE_ULONGLONG(0);
    if (has_host()) {
      host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    port_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MachineInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MachineInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_host;
        break;
      }

      // optional string host = 2;
      case 2: {
        if (tag == 18) {
         parse_host:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host().data(), this->host().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MachineInfo.host");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_port;
        break;
      }

      // optional int32 port = 3;
      case 3: {
        if (tag == 24) {
         parse_port:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
          set_has_port();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MachineInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MachineInfo)
  return false;
#undef DO_
}

void MachineInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MachineInfo)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional string host = 2;
  if (has_host()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MachineInfo.host");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host(), output);
  }

  // optional int32 port = 3;
  if (has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MachineInfo)
}

::google::protobuf::uint8* MachineInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MachineInfo)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional string host = 2;
  if (has_host()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host().data(), this->host().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MachineInfo.host");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host(), target);
  }

  // optional int32 port = 3;
  if (has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MachineInfo)
  return target;
}

int MachineInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MachineInfo)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional string host = 2;
    if (has_host()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host());
    }

    // optional int32 port = 3;
    if (has_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->port());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MachineInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MachineInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MachineInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MachineInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MachineInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MachineInfo)
    MergeFrom(*source);
  }
}

void MachineInfo::MergeFrom(const MachineInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MachineInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_host()) {
      set_has_host();
      host_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_);
    }
    if (from.has_port()) {
      set_port(from.port());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MachineInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MachineInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MachineInfo::CopyFrom(const MachineInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MachineInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MachineInfo::IsInitialized() const {

  return true;
}

void MachineInfo::Swap(MachineInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MachineInfo::InternalSwap(MachineInfo* other) {
  std::swap(id_, other->id_);
  host_.Swap(&other->host_);
  std::swap(port_, other->port_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MachineInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MachineInfo_descriptor_;
  metadata.reflection = MachineInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MachineInfo

// optional uint64 id = 1;
bool MachineInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MachineInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void MachineInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void MachineInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::uint64 MachineInfo::id() const {
  // @@protoc_insertion_point(field_get:MachineInfo.id)
  return id_;
}
 void MachineInfo::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:MachineInfo.id)
}

// optional string host = 2;
bool MachineInfo::has_host() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MachineInfo::set_has_host() {
  _has_bits_[0] |= 0x00000002u;
}
void MachineInfo::clear_has_host() {
  _has_bits_[0] &= ~0x00000002u;
}
void MachineInfo::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
 const ::std::string& MachineInfo::host() const {
  // @@protoc_insertion_point(field_get:MachineInfo.host)
  return host_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MachineInfo::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MachineInfo.host)
}
 void MachineInfo::set_host(const char* value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MachineInfo.host)
}
 void MachineInfo::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MachineInfo.host)
}
 ::std::string* MachineInfo::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:MachineInfo.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MachineInfo::release_host() {
  // @@protoc_insertion_point(field_release:MachineInfo.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MachineInfo::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:MachineInfo.host)
}

// optional int32 port = 3;
bool MachineInfo::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MachineInfo::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
void MachineInfo::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
void MachineInfo::clear_port() {
  port_ = 0;
  clear_has_port();
}
 ::google::protobuf::int32 MachineInfo::port() const {
  // @@protoc_insertion_point(field_get:MachineInfo.port)
  return port_;
}
 void MachineInfo::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:MachineInfo.port)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClusterConfigProto::kMachinesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClusterConfigProto::ClusterConfigProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClusterConfigProto)
}

void ClusterConfigProto::InitAsDefaultInstance() {
}

ClusterConfigProto::ClusterConfigProto(const ClusterConfigProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ClusterConfigProto)
}

void ClusterConfigProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClusterConfigProto::~ClusterConfigProto() {
  // @@protoc_insertion_point(destructor:ClusterConfigProto)
  SharedDtor();
}

void ClusterConfigProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClusterConfigProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClusterConfigProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClusterConfigProto_descriptor_;
}

const ClusterConfigProto& ClusterConfigProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cluster_5fconfig_2eproto();
  return *default_instance_;
}

ClusterConfigProto* ClusterConfigProto::default_instance_ = NULL;

ClusterConfigProto* ClusterConfigProto::New(::google::protobuf::Arena* arena) const {
  ClusterConfigProto* n = new ClusterConfigProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClusterConfigProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ClusterConfigProto)
  machines_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ClusterConfigProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClusterConfigProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .MachineInfo machines = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_machines:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_machines()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_machines;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClusterConfigProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClusterConfigProto)
  return false;
#undef DO_
}

void ClusterConfigProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClusterConfigProto)
  // repeated .MachineInfo machines = 1;
  for (unsigned int i = 0, n = this->machines_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->machines(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ClusterConfigProto)
}

::google::protobuf::uint8* ClusterConfigProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClusterConfigProto)
  // repeated .MachineInfo machines = 1;
  for (unsigned int i = 0, n = this->machines_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->machines(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClusterConfigProto)
  return target;
}

int ClusterConfigProto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ClusterConfigProto)
  int total_size = 0;

  // repeated .MachineInfo machines = 1;
  total_size += 1 * this->machines_size();
  for (int i = 0; i < this->machines_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->machines(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClusterConfigProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClusterConfigProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ClusterConfigProto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ClusterConfigProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClusterConfigProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClusterConfigProto)
    MergeFrom(*source);
  }
}

void ClusterConfigProto::MergeFrom(const ClusterConfigProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClusterConfigProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  machines_.MergeFrom(from.machines_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ClusterConfigProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClusterConfigProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClusterConfigProto::CopyFrom(const ClusterConfigProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClusterConfigProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClusterConfigProto::IsInitialized() const {

  return true;
}

void ClusterConfigProto::Swap(ClusterConfigProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClusterConfigProto::InternalSwap(ClusterConfigProto* other) {
  machines_.UnsafeArenaSwap(&other->machines_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClusterConfigProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClusterConfigProto_descriptor_;
  metadata.reflection = ClusterConfigProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClusterConfigProto

// repeated .MachineInfo machines = 1;
int ClusterConfigProto::machines_size() const {
  return machines_.size();
}
void ClusterConfigProto::clear_machines() {
  machines_.Clear();
}
const ::MachineInfo& ClusterConfigProto::machines(int index) const {
  // @@protoc_insertion_point(field_get:ClusterConfigProto.machines)
  return machines_.Get(index);
}
::MachineInfo* ClusterConfigProto::mutable_machines(int index) {
  // @@protoc_insertion_point(field_mutable:ClusterConfigProto.machines)
  return machines_.Mutable(index);
}
::MachineInfo* ClusterConfigProto::add_machines() {
  // @@protoc_insertion_point(field_add:ClusterConfigProto.machines)
  return machines_.Add();
}
::google::protobuf::RepeatedPtrField< ::MachineInfo >*
ClusterConfigProto::mutable_machines() {
  // @@protoc_insertion_point(field_mutable_list:ClusterConfigProto.machines)
  return &machines_;
}
const ::google::protobuf::RepeatedPtrField< ::MachineInfo >&
ClusterConfigProto::machines() const {
  // @@protoc_insertion_point(field_list:ClusterConfigProto.machines)
  return machines_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
