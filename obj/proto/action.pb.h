// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: action.proto

#ifndef PROTOBUF_action_2eproto__INCLUDED
#define PROTOBUF_action_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "scalar.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_action_2eproto();
void protobuf_AssignDesc_action_2eproto();
void protobuf_ShutdownFile_action_2eproto();

class Action;
class ActionBatch;

enum Action_ActionStatus {
  Action_ActionStatus_FREE = 0,
  Action_ActionStatus_BLOCKED = 1
};
bool Action_ActionStatus_IsValid(int value);
const Action_ActionStatus Action_ActionStatus_ActionStatus_MIN = Action_ActionStatus_FREE;
const Action_ActionStatus Action_ActionStatus_ActionStatus_MAX = Action_ActionStatus_BLOCKED;
const int Action_ActionStatus_ActionStatus_ARRAYSIZE = Action_ActionStatus_ActionStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* Action_ActionStatus_descriptor();
inline const ::std::string& Action_ActionStatus_Name(Action_ActionStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    Action_ActionStatus_descriptor(), value);
}
inline bool Action_ActionStatus_Parse(
    const ::std::string& name, Action_ActionStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Action_ActionStatus>(
    Action_ActionStatus_descriptor(), name, value);
}
// ===================================================================

class Action : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Action) */ {
 public:
  Action();
  virtual ~Action();

  Action(const Action& from);

  inline Action& operator=(const Action& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Action& default_instance();

  void Swap(Action* other);

  // implements Message ----------------------------------------------

  inline Action* New() const { return New(NULL); }

  Action* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Action& from);
  void MergeFrom(const Action& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Action* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Action_ActionStatus ActionStatus;
  static const ActionStatus FREE =
    Action_ActionStatus_FREE;
  static const ActionStatus BLOCKED =
    Action_ActionStatus_BLOCKED;
  static inline bool ActionStatus_IsValid(int value) {
    return Action_ActionStatus_IsValid(value);
  }
  static const ActionStatus ActionStatus_MIN =
    Action_ActionStatus_ActionStatus_MIN;
  static const ActionStatus ActionStatus_MAX =
    Action_ActionStatus_ActionStatus_MAX;
  static const int ActionStatus_ARRAYSIZE =
    Action_ActionStatus_ActionStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ActionStatus_descriptor() {
    return Action_ActionStatus_descriptor();
  }
  static inline const ::std::string& ActionStatus_Name(ActionStatus value) {
    return Action_ActionStatus_Name(value);
  }
  static inline bool ActionStatus_Parse(const ::std::string& name,
      ActionStatus* value) {
    return Action_ActionStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 client_machine = 1;
  bool has_client_machine() const;
  void clear_client_machine();
  static const int kClientMachineFieldNumber = 1;
  ::google::protobuf::uint64 client_machine() const;
  void set_client_machine(::google::protobuf::uint64 value);

  // optional string client_channel = 2;
  bool has_client_channel() const;
  void clear_client_channel();
  static const int kClientChannelFieldNumber = 2;
  const ::std::string& client_channel() const;
  void set_client_channel(const ::std::string& value);
  void set_client_channel(const char* value);
  void set_client_channel(const char* value, size_t size);
  ::std::string* mutable_client_channel();
  ::std::string* release_client_channel();
  void set_allocated_client_channel(::std::string* client_channel);

  // optional string store = 11;
  bool has_store() const;
  void clear_store();
  static const int kStoreFieldNumber = 11;
  const ::std::string& store() const;
  void set_store(const ::std::string& value);
  void set_store(const char* value);
  void set_store(const char* value, size_t size);
  ::std::string* mutable_store();
  ::std::string* release_store();
  void set_allocated_store(::std::string* store);

  // required int32 action_type = 12;
  bool has_action_type() const;
  void clear_action_type();
  static const int kActionTypeFieldNumber = 12;
  ::google::protobuf::int32 action_type() const;
  void set_action_type(::google::protobuf::int32 value);

  // optional bool read_only = 13 [default = false];
  bool has_read_only() const;
  void clear_read_only();
  static const int kReadOnlyFieldNumber = 13;
  bool read_only() const;
  void set_read_only(bool value);

  // required bytes input = 14;
  bool has_input() const;
  void clear_input();
  static const int kInputFieldNumber = 14;
  const ::std::string& input() const;
  void set_input(const ::std::string& value);
  void set_input(const char* value);
  void set_input(const void* value, size_t size);
  ::std::string* mutable_input();
  ::std::string* release_input();
  void set_allocated_input(::std::string* input);

  // optional bytes output = 15;
  bool has_output() const;
  void clear_output();
  static const int kOutputFieldNumber = 15;
  const ::std::string& output() const;
  void set_output(const ::std::string& value);
  void set_output(const char* value);
  void set_output(const void* value, size_t size);
  ::std::string* mutable_output();
  ::std::string* release_output();
  void set_allocated_output(::std::string* output);

  // repeated bytes readset = 21;
  int readset_size() const;
  void clear_readset();
  static const int kReadsetFieldNumber = 21;
  const ::std::string& readset(int index) const;
  ::std::string* mutable_readset(int index);
  void set_readset(int index, const ::std::string& value);
  void set_readset(int index, const char* value);
  void set_readset(int index, const void* value, size_t size);
  ::std::string* add_readset();
  void add_readset(const ::std::string& value);
  void add_readset(const char* value);
  void add_readset(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& readset() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_readset();

  // repeated bytes writeset = 22;
  int writeset_size() const;
  void clear_writeset();
  static const int kWritesetFieldNumber = 22;
  const ::std::string& writeset(int index) const;
  ::std::string* mutable_writeset(int index);
  void set_writeset(int index, const ::std::string& value);
  void set_writeset(int index, const char* value);
  void set_writeset(int index, const void* value, size_t size);
  ::std::string* add_writeset();
  void add_writeset(const ::std::string& value);
  void add_writeset(const char* value);
  void add_writeset(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& writeset() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_writeset();

  // optional uint64 version = 31;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 31;
  ::google::protobuf::uint64 version() const;
  void set_version(::google::protobuf::uint64 value);

  // optional uint64 version_offset = 32;
  bool has_version_offset() const;
  void clear_version_offset();
  static const int kVersionOffsetFieldNumber = 32;
  ::google::protobuf::uint64 version_offset() const;
  void set_version_offset(::google::protobuf::uint64 value);

  // optional uint32 origin = 42 [default = 0];
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 42;
  ::google::protobuf::uint32 origin() const;
  void set_origin(::google::protobuf::uint32 value);

  // required uint64 distinct_id = 43;
  bool has_distinct_id() const;
  void clear_distinct_id();
  static const int kDistinctIdFieldNumber = 43;
  ::google::protobuf::uint64 distinct_id() const;
  void set_distinct_id(::google::protobuf::uint64 value);

  // optional bool new_generated = 44 [default = false];
  bool has_new_generated() const;
  void clear_new_generated();
  static const int kNewGeneratedFieldNumber = 44;
  bool new_generated() const;
  void set_new_generated(bool value);

  // repeated uint32 involved_replicas = 45;
  int involved_replicas_size() const;
  void clear_involved_replicas();
  static const int kInvolvedReplicasFieldNumber = 45;
  ::google::protobuf::uint32 involved_replicas(int index) const;
  void set_involved_replicas(int index, ::google::protobuf::uint32 value);
  void add_involved_replicas(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      involved_replicas() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_involved_replicas();

  // optional bool fake_action = 46 [default = false];
  bool has_fake_action() const;
  void clear_fake_action();
  static const int kFakeActionFieldNumber = 46;
  bool fake_action() const;
  void set_fake_action(bool value);

  // optional bool remaster = 47 [default = false];
  bool has_remaster() const;
  void clear_remaster();
  static const int kRemasterFieldNumber = 47;
  bool remaster() const;
  void set_remaster(bool value);

  // optional uint32 dest_replica = 48;
  bool has_dest_replica() const;
  void clear_dest_replica();
  static const int kDestReplicaFieldNumber = 48;
  ::google::protobuf::uint32 dest_replica() const;
  void set_dest_replica(::google::protobuf::uint32 value);

  // repeated .Scalar misc = 51;
  int misc_size() const;
  void clear_misc();
  static const int kMiscFieldNumber = 51;
  const ::Scalar& misc(int index) const;
  ::Scalar* mutable_misc(int index);
  ::Scalar* add_misc();
  ::google::protobuf::RepeatedPtrField< ::Scalar >*
      mutable_misc();
  const ::google::protobuf::RepeatedPtrField< ::Scalar >&
      misc() const;

  // optional int32 action_status = 61;
  bool has_action_status() const;
  void clear_action_status();
  static const int kActionStatusFieldNumber = 61;
  ::google::protobuf::int32 action_status() const;
  void set_action_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Action)
 private:
  inline void set_has_client_machine();
  inline void clear_has_client_machine();
  inline void set_has_client_channel();
  inline void clear_has_client_channel();
  inline void set_has_store();
  inline void clear_has_store();
  inline void set_has_action_type();
  inline void clear_has_action_type();
  inline void set_has_read_only();
  inline void clear_has_read_only();
  inline void set_has_input();
  inline void clear_has_input();
  inline void set_has_output();
  inline void clear_has_output();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_version_offset();
  inline void clear_has_version_offset();
  inline void set_has_origin();
  inline void clear_has_origin();
  inline void set_has_distinct_id();
  inline void clear_has_distinct_id();
  inline void set_has_new_generated();
  inline void clear_has_new_generated();
  inline void set_has_fake_action();
  inline void clear_has_fake_action();
  inline void set_has_remaster();
  inline void clear_has_remaster();
  inline void set_has_dest_replica();
  inline void clear_has_dest_replica();
  inline void set_has_action_status();
  inline void clear_has_action_status();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 client_machine_;
  ::google::protobuf::internal::ArenaStringPtr client_channel_;
  ::google::protobuf::internal::ArenaStringPtr store_;
  ::google::protobuf::internal::ArenaStringPtr input_;
  ::google::protobuf::internal::ArenaStringPtr output_;
  ::google::protobuf::RepeatedPtrField< ::std::string> readset_;
  ::google::protobuf::int32 action_type_;
  ::google::protobuf::uint32 origin_;
  ::google::protobuf::RepeatedPtrField< ::std::string> writeset_;
  ::google::protobuf::uint64 version_;
  ::google::protobuf::uint64 version_offset_;
  ::google::protobuf::uint64 distinct_id_;
  bool read_only_;
  bool new_generated_;
  bool fake_action_;
  bool remaster_;
  ::google::protobuf::uint32 dest_replica_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > involved_replicas_;
  ::google::protobuf::RepeatedPtrField< ::Scalar > misc_;
  ::google::protobuf::int32 action_status_;
  friend void  protobuf_AddDesc_action_2eproto();
  friend void protobuf_AssignDesc_action_2eproto();
  friend void protobuf_ShutdownFile_action_2eproto();

  void InitAsDefaultInstance();
  static Action* default_instance_;
};
// -------------------------------------------------------------------

class ActionBatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ActionBatch) */ {
 public:
  ActionBatch();
  virtual ~ActionBatch();

  ActionBatch(const ActionBatch& from);

  inline ActionBatch& operator=(const ActionBatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionBatch& default_instance();

  void Swap(ActionBatch* other);

  // implements Message ----------------------------------------------

  inline ActionBatch* New() const { return New(NULL); }

  ActionBatch* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionBatch& from);
  void MergeFrom(const ActionBatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActionBatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Action entries = 1;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 1;
  const ::Action& entries(int index) const;
  ::Action* mutable_entries(int index);
  ::Action* add_entries();
  ::google::protobuf::RepeatedPtrField< ::Action >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::Action >&
      entries() const;

  // @@protoc_insertion_point(class_scope:ActionBatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Action > entries_;
  friend void  protobuf_AddDesc_action_2eproto();
  friend void protobuf_AssignDesc_action_2eproto();
  friend void protobuf_ShutdownFile_action_2eproto();

  void InitAsDefaultInstance();
  static ActionBatch* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Action

// optional uint64 client_machine = 1;
inline bool Action::has_client_machine() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Action::set_has_client_machine() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Action::clear_has_client_machine() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Action::clear_client_machine() {
  client_machine_ = GOOGLE_ULONGLONG(0);
  clear_has_client_machine();
}
inline ::google::protobuf::uint64 Action::client_machine() const {
  // @@protoc_insertion_point(field_get:Action.client_machine)
  return client_machine_;
}
inline void Action::set_client_machine(::google::protobuf::uint64 value) {
  set_has_client_machine();
  client_machine_ = value;
  // @@protoc_insertion_point(field_set:Action.client_machine)
}

// optional string client_channel = 2;
inline bool Action::has_client_channel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Action::set_has_client_channel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Action::clear_has_client_channel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Action::clear_client_channel() {
  client_channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client_channel();
}
inline const ::std::string& Action::client_channel() const {
  // @@protoc_insertion_point(field_get:Action.client_channel)
  return client_channel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Action::set_client_channel(const ::std::string& value) {
  set_has_client_channel();
  client_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Action.client_channel)
}
inline void Action::set_client_channel(const char* value) {
  set_has_client_channel();
  client_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Action.client_channel)
}
inline void Action::set_client_channel(const char* value, size_t size) {
  set_has_client_channel();
  client_channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Action.client_channel)
}
inline ::std::string* Action::mutable_client_channel() {
  set_has_client_channel();
  // @@protoc_insertion_point(field_mutable:Action.client_channel)
  return client_channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Action::release_client_channel() {
  // @@protoc_insertion_point(field_release:Action.client_channel)
  clear_has_client_channel();
  return client_channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Action::set_allocated_client_channel(::std::string* client_channel) {
  if (client_channel != NULL) {
    set_has_client_channel();
  } else {
    clear_has_client_channel();
  }
  client_channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_channel);
  // @@protoc_insertion_point(field_set_allocated:Action.client_channel)
}

// optional string store = 11;
inline bool Action::has_store() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Action::set_has_store() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Action::clear_has_store() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Action::clear_store() {
  store_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_store();
}
inline const ::std::string& Action::store() const {
  // @@protoc_insertion_point(field_get:Action.store)
  return store_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Action::set_store(const ::std::string& value) {
  set_has_store();
  store_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Action.store)
}
inline void Action::set_store(const char* value) {
  set_has_store();
  store_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Action.store)
}
inline void Action::set_store(const char* value, size_t size) {
  set_has_store();
  store_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Action.store)
}
inline ::std::string* Action::mutable_store() {
  set_has_store();
  // @@protoc_insertion_point(field_mutable:Action.store)
  return store_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Action::release_store() {
  // @@protoc_insertion_point(field_release:Action.store)
  clear_has_store();
  return store_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Action::set_allocated_store(::std::string* store) {
  if (store != NULL) {
    set_has_store();
  } else {
    clear_has_store();
  }
  store_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), store);
  // @@protoc_insertion_point(field_set_allocated:Action.store)
}

// required int32 action_type = 12;
inline bool Action::has_action_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Action::set_has_action_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Action::clear_has_action_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Action::clear_action_type() {
  action_type_ = 0;
  clear_has_action_type();
}
inline ::google::protobuf::int32 Action::action_type() const {
  // @@protoc_insertion_point(field_get:Action.action_type)
  return action_type_;
}
inline void Action::set_action_type(::google::protobuf::int32 value) {
  set_has_action_type();
  action_type_ = value;
  // @@protoc_insertion_point(field_set:Action.action_type)
}

// optional bool read_only = 13 [default = false];
inline bool Action::has_read_only() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Action::set_has_read_only() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Action::clear_has_read_only() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Action::clear_read_only() {
  read_only_ = false;
  clear_has_read_only();
}
inline bool Action::read_only() const {
  // @@protoc_insertion_point(field_get:Action.read_only)
  return read_only_;
}
inline void Action::set_read_only(bool value) {
  set_has_read_only();
  read_only_ = value;
  // @@protoc_insertion_point(field_set:Action.read_only)
}

// required bytes input = 14;
inline bool Action::has_input() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Action::set_has_input() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Action::clear_has_input() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Action::clear_input() {
  input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_input();
}
inline const ::std::string& Action::input() const {
  // @@protoc_insertion_point(field_get:Action.input)
  return input_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Action::set_input(const ::std::string& value) {
  set_has_input();
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Action.input)
}
inline void Action::set_input(const char* value) {
  set_has_input();
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Action.input)
}
inline void Action::set_input(const void* value, size_t size) {
  set_has_input();
  input_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Action.input)
}
inline ::std::string* Action::mutable_input() {
  set_has_input();
  // @@protoc_insertion_point(field_mutable:Action.input)
  return input_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Action::release_input() {
  // @@protoc_insertion_point(field_release:Action.input)
  clear_has_input();
  return input_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Action::set_allocated_input(::std::string* input) {
  if (input != NULL) {
    set_has_input();
  } else {
    clear_has_input();
  }
  input_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input);
  // @@protoc_insertion_point(field_set_allocated:Action.input)
}

// optional bytes output = 15;
inline bool Action::has_output() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Action::set_has_output() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Action::clear_has_output() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Action::clear_output() {
  output_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_output();
}
inline const ::std::string& Action::output() const {
  // @@protoc_insertion_point(field_get:Action.output)
  return output_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Action::set_output(const ::std::string& value) {
  set_has_output();
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Action.output)
}
inline void Action::set_output(const char* value) {
  set_has_output();
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Action.output)
}
inline void Action::set_output(const void* value, size_t size) {
  set_has_output();
  output_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Action.output)
}
inline ::std::string* Action::mutable_output() {
  set_has_output();
  // @@protoc_insertion_point(field_mutable:Action.output)
  return output_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Action::release_output() {
  // @@protoc_insertion_point(field_release:Action.output)
  clear_has_output();
  return output_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Action::set_allocated_output(::std::string* output) {
  if (output != NULL) {
    set_has_output();
  } else {
    clear_has_output();
  }
  output_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output);
  // @@protoc_insertion_point(field_set_allocated:Action.output)
}

// repeated bytes readset = 21;
inline int Action::readset_size() const {
  return readset_.size();
}
inline void Action::clear_readset() {
  readset_.Clear();
}
inline const ::std::string& Action::readset(int index) const {
  // @@protoc_insertion_point(field_get:Action.readset)
  return readset_.Get(index);
}
inline ::std::string* Action::mutable_readset(int index) {
  // @@protoc_insertion_point(field_mutable:Action.readset)
  return readset_.Mutable(index);
}
inline void Action::set_readset(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Action.readset)
  readset_.Mutable(index)->assign(value);
}
inline void Action::set_readset(int index, const char* value) {
  readset_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Action.readset)
}
inline void Action::set_readset(int index, const void* value, size_t size) {
  readset_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Action.readset)
}
inline ::std::string* Action::add_readset() {
  // @@protoc_insertion_point(field_add_mutable:Action.readset)
  return readset_.Add();
}
inline void Action::add_readset(const ::std::string& value) {
  readset_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Action.readset)
}
inline void Action::add_readset(const char* value) {
  readset_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Action.readset)
}
inline void Action::add_readset(const void* value, size_t size) {
  readset_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Action.readset)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Action::readset() const {
  // @@protoc_insertion_point(field_list:Action.readset)
  return readset_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Action::mutable_readset() {
  // @@protoc_insertion_point(field_mutable_list:Action.readset)
  return &readset_;
}

// repeated bytes writeset = 22;
inline int Action::writeset_size() const {
  return writeset_.size();
}
inline void Action::clear_writeset() {
  writeset_.Clear();
}
inline const ::std::string& Action::writeset(int index) const {
  // @@protoc_insertion_point(field_get:Action.writeset)
  return writeset_.Get(index);
}
inline ::std::string* Action::mutable_writeset(int index) {
  // @@protoc_insertion_point(field_mutable:Action.writeset)
  return writeset_.Mutable(index);
}
inline void Action::set_writeset(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Action.writeset)
  writeset_.Mutable(index)->assign(value);
}
inline void Action::set_writeset(int index, const char* value) {
  writeset_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Action.writeset)
}
inline void Action::set_writeset(int index, const void* value, size_t size) {
  writeset_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Action.writeset)
}
inline ::std::string* Action::add_writeset() {
  // @@protoc_insertion_point(field_add_mutable:Action.writeset)
  return writeset_.Add();
}
inline void Action::add_writeset(const ::std::string& value) {
  writeset_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Action.writeset)
}
inline void Action::add_writeset(const char* value) {
  writeset_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Action.writeset)
}
inline void Action::add_writeset(const void* value, size_t size) {
  writeset_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Action.writeset)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Action::writeset() const {
  // @@protoc_insertion_point(field_list:Action.writeset)
  return writeset_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Action::mutable_writeset() {
  // @@protoc_insertion_point(field_mutable_list:Action.writeset)
  return &writeset_;
}

// optional uint64 version = 31;
inline bool Action::has_version() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Action::set_has_version() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Action::clear_has_version() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Action::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 Action::version() const {
  // @@protoc_insertion_point(field_get:Action.version)
  return version_;
}
inline void Action::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:Action.version)
}

// optional uint64 version_offset = 32;
inline bool Action::has_version_offset() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Action::set_has_version_offset() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Action::clear_has_version_offset() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Action::clear_version_offset() {
  version_offset_ = GOOGLE_ULONGLONG(0);
  clear_has_version_offset();
}
inline ::google::protobuf::uint64 Action::version_offset() const {
  // @@protoc_insertion_point(field_get:Action.version_offset)
  return version_offset_;
}
inline void Action::set_version_offset(::google::protobuf::uint64 value) {
  set_has_version_offset();
  version_offset_ = value;
  // @@protoc_insertion_point(field_set:Action.version_offset)
}

// optional uint32 origin = 42 [default = 0];
inline bool Action::has_origin() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Action::set_has_origin() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Action::clear_has_origin() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Action::clear_origin() {
  origin_ = 0u;
  clear_has_origin();
}
inline ::google::protobuf::uint32 Action::origin() const {
  // @@protoc_insertion_point(field_get:Action.origin)
  return origin_;
}
inline void Action::set_origin(::google::protobuf::uint32 value) {
  set_has_origin();
  origin_ = value;
  // @@protoc_insertion_point(field_set:Action.origin)
}

// required uint64 distinct_id = 43;
inline bool Action::has_distinct_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Action::set_has_distinct_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Action::clear_has_distinct_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Action::clear_distinct_id() {
  distinct_id_ = GOOGLE_ULONGLONG(0);
  clear_has_distinct_id();
}
inline ::google::protobuf::uint64 Action::distinct_id() const {
  // @@protoc_insertion_point(field_get:Action.distinct_id)
  return distinct_id_;
}
inline void Action::set_distinct_id(::google::protobuf::uint64 value) {
  set_has_distinct_id();
  distinct_id_ = value;
  // @@protoc_insertion_point(field_set:Action.distinct_id)
}

// optional bool new_generated = 44 [default = false];
inline bool Action::has_new_generated() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Action::set_has_new_generated() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Action::clear_has_new_generated() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Action::clear_new_generated() {
  new_generated_ = false;
  clear_has_new_generated();
}
inline bool Action::new_generated() const {
  // @@protoc_insertion_point(field_get:Action.new_generated)
  return new_generated_;
}
inline void Action::set_new_generated(bool value) {
  set_has_new_generated();
  new_generated_ = value;
  // @@protoc_insertion_point(field_set:Action.new_generated)
}

// repeated uint32 involved_replicas = 45;
inline int Action::involved_replicas_size() const {
  return involved_replicas_.size();
}
inline void Action::clear_involved_replicas() {
  involved_replicas_.Clear();
}
inline ::google::protobuf::uint32 Action::involved_replicas(int index) const {
  // @@protoc_insertion_point(field_get:Action.involved_replicas)
  return involved_replicas_.Get(index);
}
inline void Action::set_involved_replicas(int index, ::google::protobuf::uint32 value) {
  involved_replicas_.Set(index, value);
  // @@protoc_insertion_point(field_set:Action.involved_replicas)
}
inline void Action::add_involved_replicas(::google::protobuf::uint32 value) {
  involved_replicas_.Add(value);
  // @@protoc_insertion_point(field_add:Action.involved_replicas)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Action::involved_replicas() const {
  // @@protoc_insertion_point(field_list:Action.involved_replicas)
  return involved_replicas_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Action::mutable_involved_replicas() {
  // @@protoc_insertion_point(field_mutable_list:Action.involved_replicas)
  return &involved_replicas_;
}

// optional bool fake_action = 46 [default = false];
inline bool Action::has_fake_action() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Action::set_has_fake_action() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Action::clear_has_fake_action() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Action::clear_fake_action() {
  fake_action_ = false;
  clear_has_fake_action();
}
inline bool Action::fake_action() const {
  // @@protoc_insertion_point(field_get:Action.fake_action)
  return fake_action_;
}
inline void Action::set_fake_action(bool value) {
  set_has_fake_action();
  fake_action_ = value;
  // @@protoc_insertion_point(field_set:Action.fake_action)
}

// optional bool remaster = 47 [default = false];
inline bool Action::has_remaster() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Action::set_has_remaster() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Action::clear_has_remaster() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Action::clear_remaster() {
  remaster_ = false;
  clear_has_remaster();
}
inline bool Action::remaster() const {
  // @@protoc_insertion_point(field_get:Action.remaster)
  return remaster_;
}
inline void Action::set_remaster(bool value) {
  set_has_remaster();
  remaster_ = value;
  // @@protoc_insertion_point(field_set:Action.remaster)
}

// optional uint32 dest_replica = 48;
inline bool Action::has_dest_replica() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Action::set_has_dest_replica() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Action::clear_has_dest_replica() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Action::clear_dest_replica() {
  dest_replica_ = 0u;
  clear_has_dest_replica();
}
inline ::google::protobuf::uint32 Action::dest_replica() const {
  // @@protoc_insertion_point(field_get:Action.dest_replica)
  return dest_replica_;
}
inline void Action::set_dest_replica(::google::protobuf::uint32 value) {
  set_has_dest_replica();
  dest_replica_ = value;
  // @@protoc_insertion_point(field_set:Action.dest_replica)
}

// repeated .Scalar misc = 51;
inline int Action::misc_size() const {
  return misc_.size();
}
inline void Action::clear_misc() {
  misc_.Clear();
}
inline const ::Scalar& Action::misc(int index) const {
  // @@protoc_insertion_point(field_get:Action.misc)
  return misc_.Get(index);
}
inline ::Scalar* Action::mutable_misc(int index) {
  // @@protoc_insertion_point(field_mutable:Action.misc)
  return misc_.Mutable(index);
}
inline ::Scalar* Action::add_misc() {
  // @@protoc_insertion_point(field_add:Action.misc)
  return misc_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Scalar >*
Action::mutable_misc() {
  // @@protoc_insertion_point(field_mutable_list:Action.misc)
  return &misc_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Scalar >&
Action::misc() const {
  // @@protoc_insertion_point(field_list:Action.misc)
  return misc_;
}

// optional int32 action_status = 61;
inline bool Action::has_action_status() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Action::set_has_action_status() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Action::clear_has_action_status() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Action::clear_action_status() {
  action_status_ = 0;
  clear_has_action_status();
}
inline ::google::protobuf::int32 Action::action_status() const {
  // @@protoc_insertion_point(field_get:Action.action_status)
  return action_status_;
}
inline void Action::set_action_status(::google::protobuf::int32 value) {
  set_has_action_status();
  action_status_ = value;
  // @@protoc_insertion_point(field_set:Action.action_status)
}

// -------------------------------------------------------------------

// ActionBatch

// repeated .Action entries = 1;
inline int ActionBatch::entries_size() const {
  return entries_.size();
}
inline void ActionBatch::clear_entries() {
  entries_.Clear();
}
inline const ::Action& ActionBatch::entries(int index) const {
  // @@protoc_insertion_point(field_get:ActionBatch.entries)
  return entries_.Get(index);
}
inline ::Action* ActionBatch::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:ActionBatch.entries)
  return entries_.Mutable(index);
}
inline ::Action* ActionBatch::add_entries() {
  // @@protoc_insertion_point(field_add:ActionBatch.entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Action >*
ActionBatch::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:ActionBatch.entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Action >&
ActionBatch::entries() const {
  // @@protoc_insertion_point(field_list:ActionBatch.entries)
  return entries_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Action_ActionStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Action_ActionStatus>() {
  return ::Action_ActionStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_action_2eproto__INCLUDED
