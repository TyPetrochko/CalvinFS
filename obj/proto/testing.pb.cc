// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: testing.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "testing.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* A_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  A_reflection_ = NULL;
const ::google::protobuf::Descriptor* B_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  B_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_testing_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_testing_2eproto() {
  protobuf_AddDesc_testing_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "testing.proto");
  GOOGLE_CHECK(file != NULL);
  A_descriptor_ = file->message_type(0);
  static const int A_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(A, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(A, s_),
  };
  A_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      A_descriptor_,
      A::default_instance_,
      A_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(A, _has_bits_[0]),
      -1,
      -1,
      sizeof(A),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(A, _internal_metadata_),
      -1);
  B_descriptor_ = file->message_type(1);
  static const int B_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(B, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(B, b_),
  };
  B_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      B_descriptor_,
      B::default_instance_,
      B_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(B, _has_bits_[0]),
      -1,
      -1,
      sizeof(B),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(B, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_testing_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      A_descriptor_, &A::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      B_descriptor_, &B::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_testing_2eproto() {
  delete A::default_instance_;
  delete A_reflection_;
  delete B::default_instance_;
  delete B_reflection_;
}

void protobuf_AddDesc_testing_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_testing_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rtesting.proto\"\031\n\001A\022\t\n\001x\030\001 \003(\005\022\t\n\001s\030\002 \003"
    "(\014\"!\n\001B\022\r\n\001a\030\001 \003(\0132\002.A\022\r\n\001b\030\002 \003(\0132\002.B", 77);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "testing.proto", &protobuf_RegisterTypes);
  A::default_instance_ = new A();
  B::default_instance_ = new B();
  A::default_instance_->InitAsDefaultInstance();
  B::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_testing_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_testing_2eproto {
  StaticDescriptorInitializer_testing_2eproto() {
    protobuf_AddDesc_testing_2eproto();
  }
} static_descriptor_initializer_testing_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int A::kXFieldNumber;
const int A::kSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

A::A()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:A)
}

void A::InitAsDefaultInstance() {
}

A::A(const A& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:A)
}

void A::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

A::~A() {
  // @@protoc_insertion_point(destructor:A)
  SharedDtor();
}

void A::SharedDtor() {
  if (this != default_instance_) {
  }
}

void A::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* A::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return A_descriptor_;
}

const A& A::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_testing_2eproto();
  return *default_instance_;
}

A* A::default_instance_ = NULL;

A* A::New(::google::protobuf::Arena* arena) const {
  A* n = new A;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void A::Clear() {
// @@protoc_insertion_point(message_clear_start:A)
  x_.Clear();
  s_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool A::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:A)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 x = 1;
      case 1: {
        if (tag == 8) {
         parse_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_x())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_x())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_x;
        if (input->ExpectTag(18)) goto parse_s;
        break;
      }

      // repeated bytes s = 2;
      case 2: {
        if (tag == 18) {
         parse_s:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_s()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_s;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:A)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:A)
  return false;
#undef DO_
}

void A::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:A)
  // repeated int32 x = 1;
  for (int i = 0; i < this->x_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->x(i), output);
  }

  // repeated bytes s = 2;
  for (int i = 0; i < this->s_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:A)
}

::google::protobuf::uint8* A::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:A)
  // repeated int32 x = 1;
  for (int i = 0; i < this->x_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->x(i), target);
  }

  // repeated bytes s = 2;
  for (int i = 0; i < this->s_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->s(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:A)
  return target;
}

int A::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:A)
  int total_size = 0;

  // repeated int32 x = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->x_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->x(i));
    }
    total_size += 1 * this->x_size() + data_size;
  }

  // repeated bytes s = 2;
  total_size += 1 * this->s_size();
  for (int i = 0; i < this->s_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->s(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void A::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:A)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const A* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const A>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:A)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:A)
    MergeFrom(*source);
  }
}

void A::MergeFrom(const A& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:A)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  x_.MergeFrom(from.x_);
  s_.MergeFrom(from.s_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void A::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:A)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void A::CopyFrom(const A& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:A)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool A::IsInitialized() const {

  return true;
}

void A::Swap(A* other) {
  if (other == this) return;
  InternalSwap(other);
}
void A::InternalSwap(A* other) {
  x_.UnsafeArenaSwap(&other->x_);
  s_.UnsafeArenaSwap(&other->s_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata A::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = A_descriptor_;
  metadata.reflection = A_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// A

// repeated int32 x = 1;
int A::x_size() const {
  return x_.size();
}
void A::clear_x() {
  x_.Clear();
}
 ::google::protobuf::int32 A::x(int index) const {
  // @@protoc_insertion_point(field_get:A.x)
  return x_.Get(index);
}
 void A::set_x(int index, ::google::protobuf::int32 value) {
  x_.Set(index, value);
  // @@protoc_insertion_point(field_set:A.x)
}
 void A::add_x(::google::protobuf::int32 value) {
  x_.Add(value);
  // @@protoc_insertion_point(field_add:A.x)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
A::x() const {
  // @@protoc_insertion_point(field_list:A.x)
  return x_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
A::mutable_x() {
  // @@protoc_insertion_point(field_mutable_list:A.x)
  return &x_;
}

// repeated bytes s = 2;
int A::s_size() const {
  return s_.size();
}
void A::clear_s() {
  s_.Clear();
}
 const ::std::string& A::s(int index) const {
  // @@protoc_insertion_point(field_get:A.s)
  return s_.Get(index);
}
 ::std::string* A::mutable_s(int index) {
  // @@protoc_insertion_point(field_mutable:A.s)
  return s_.Mutable(index);
}
 void A::set_s(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:A.s)
  s_.Mutable(index)->assign(value);
}
 void A::set_s(int index, const char* value) {
  s_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:A.s)
}
 void A::set_s(int index, const void* value, size_t size) {
  s_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:A.s)
}
 ::std::string* A::add_s() {
  // @@protoc_insertion_point(field_add_mutable:A.s)
  return s_.Add();
}
 void A::add_s(const ::std::string& value) {
  s_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:A.s)
}
 void A::add_s(const char* value) {
  s_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:A.s)
}
 void A::add_s(const void* value, size_t size) {
  s_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:A.s)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
A::s() const {
  // @@protoc_insertion_point(field_list:A.s)
  return s_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
A::mutable_s() {
  // @@protoc_insertion_point(field_mutable_list:A.s)
  return &s_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int B::kAFieldNumber;
const int B::kBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

B::B()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:B)
}

void B::InitAsDefaultInstance() {
}

B::B(const B& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:B)
}

void B::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

B::~B() {
  // @@protoc_insertion_point(destructor:B)
  SharedDtor();
}

void B::SharedDtor() {
  if (this != default_instance_) {
  }
}

void B::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* B::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return B_descriptor_;
}

const B& B::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_testing_2eproto();
  return *default_instance_;
}

B* B::default_instance_ = NULL;

B* B::New(::google::protobuf::Arena* arena) const {
  B* n = new B;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void B::Clear() {
// @@protoc_insertion_point(message_clear_start:B)
  a_.Clear();
  b_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool B::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:B)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .A a = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_a:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_a()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_a;
        if (input->ExpectTag(18)) goto parse_loop_b;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .B b = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_b:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_b()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_b;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:B)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:B)
  return false;
#undef DO_
}

void B::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:B)
  // repeated .A a = 1;
  for (unsigned int i = 0, n = this->a_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->a(i), output);
  }

  // repeated .B b = 2;
  for (unsigned int i = 0, n = this->b_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->b(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:B)
}

::google::protobuf::uint8* B::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:B)
  // repeated .A a = 1;
  for (unsigned int i = 0, n = this->a_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->a(i), false, target);
  }

  // repeated .B b = 2;
  for (unsigned int i = 0, n = this->b_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->b(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:B)
  return target;
}

int B::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:B)
  int total_size = 0;

  // repeated .A a = 1;
  total_size += 1 * this->a_size();
  for (int i = 0; i < this->a_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->a(i));
  }

  // repeated .B b = 2;
  total_size += 1 * this->b_size();
  for (int i = 0; i < this->b_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->b(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void B::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:B)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const B* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const B>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:B)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:B)
    MergeFrom(*source);
  }
}

void B::MergeFrom(const B& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:B)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  a_.MergeFrom(from.a_);
  b_.MergeFrom(from.b_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void B::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:B)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void B::CopyFrom(const B& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:B)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool B::IsInitialized() const {

  return true;
}

void B::Swap(B* other) {
  if (other == this) return;
  InternalSwap(other);
}
void B::InternalSwap(B* other) {
  a_.UnsafeArenaSwap(&other->a_);
  b_.UnsafeArenaSwap(&other->b_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata B::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = B_descriptor_;
  metadata.reflection = B_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// B

// repeated .A a = 1;
int B::a_size() const {
  return a_.size();
}
void B::clear_a() {
  a_.Clear();
}
const ::A& B::a(int index) const {
  // @@protoc_insertion_point(field_get:B.a)
  return a_.Get(index);
}
::A* B::mutable_a(int index) {
  // @@protoc_insertion_point(field_mutable:B.a)
  return a_.Mutable(index);
}
::A* B::add_a() {
  // @@protoc_insertion_point(field_add:B.a)
  return a_.Add();
}
::google::protobuf::RepeatedPtrField< ::A >*
B::mutable_a() {
  // @@protoc_insertion_point(field_mutable_list:B.a)
  return &a_;
}
const ::google::protobuf::RepeatedPtrField< ::A >&
B::a() const {
  // @@protoc_insertion_point(field_list:B.a)
  return a_;
}

// repeated .B b = 2;
int B::b_size() const {
  return b_.size();
}
void B::clear_b() {
  b_.Clear();
}
const ::B& B::b(int index) const {
  // @@protoc_insertion_point(field_get:B.b)
  return b_.Get(index);
}
::B* B::mutable_b(int index) {
  // @@protoc_insertion_point(field_mutable:B.b)
  return b_.Mutable(index);
}
::B* B::add_b() {
  // @@protoc_insertion_point(field_add:B.b)
  return b_.Add();
}
::google::protobuf::RepeatedPtrField< ::B >*
B::mutable_b() {
  // @@protoc_insertion_point(field_mutable_list:B.b)
  return &b_;
}
const ::google::protobuf::RepeatedPtrField< ::B >&
B::b() const {
  // @@protoc_insertion_point(field_list:B.b)
  return b_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
